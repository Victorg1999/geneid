#!/usr/bin/perl

# versio perl del quotacompare. els comentaris alla eren:
#
   # script ultra-guarro que compara les quotes de n fitxers donats
   #
   # compara la quota dels usuaris mostrats al fitxer n amb les que tenien al
   # fitxer n-1. els usuaris a mostrar els trec del darrer fitxer (hauria de
   # ser el mes recent), aixi que alguns apareixeran una vegada, altres no
   # apareixeran i altres apareixeran 2 vegades.
   # aixo es aixi perque de vegades nomes examinem la quota de ug o de um
   #
   # amb el flag -g o -m nomes comparem els usuaris de /home/ug o /home/um,
   # independentment de que hi hagi mes usuaris al fitxer de quota.
   #
   # amb el flag -b nomes revisem l'ocupacio de backup; amb -n la de no_backup;
   # amb -t la total. son mutuament excloents i tenen preferencia -t > -b > -n.
   # per omisio faig -t
   #
   # amb -h l'output es en format html (per enviar per mail o jo que se), pero
   # es ultra-guarro
   #
   # NO ORDENA ELS FITXERS PROPORCIONATS PER DATA!!! t'has d'assegurar que
   # els passes ordenats de mes antic a mes nou
#
# sempre fem html, ja que el txt es incomode de mirar
#
# generem 3 taules al fitxer: total, backup i nobackup
#
# N'HAURIEM DE GENERAR 3 MES: VARIACIO DE LA QUOTA D'UN FITXER RESPECTE L'ANTERIOR


# retorna la data del nom del fitxer
sub data {
   $_[0] =~ /quota-(\d{4})(\d{2})(\d{2})-\d{4}.txt/;
   @mes=qw(gen feb mar abr mai jun jul ago set oct nov dec);
   return "$3-$mes[$2-1]-$1";
}


# ordenai els noms segons l'ordre numeric del camp $camp
sub ordena {
   @dades1=split(/ +/,$a);
   @dades2=split(/ +/,$b);
   $dades1[$camp] =~ s/\.//g;
   $dades2[$camp] =~ s/\.//g;
   $dades2[$camp] <=> $dades1[$camp];
}


# imprimeix una taula de resultats
sub taula {

   print "<center><h1>$_[0]</h1></center>\n";

   print "<table>\n";
   $camp=$_[1];

   # capceleres: dates dels fitxers emprats
   print "<tr><td></td>";
   foreach $nom (@fitxers) {
      print "<td align=center><b>&nbsp;" . &data($nom) . "&nbsp;</b></td>";
   }
   print "</tr>\n";

   $indexcolor=0;
   #@color=("b0ffb0","b0dfb0","ff0000","0000ff");
   @color=("d0d0d0","f0f0f0","ff0000","0000ff");

   # posem a zero els totals (hi ha una manera mes directa de fer aixo?)
   for ( $i=0 ; $i <= $#fitxers ; $i++ ) {
      $totalug[$i]=0;
      $totalum[$i]=0;
   }

   # extreu grups i noms del darrer fitxer indicat (teoricament, el mes recent)
   open(FIT,"$fitxers[$#fitxers]");
   @dadesusuaris=sort ordena (grep(/ u[$pattern]   /,<FIT>));
   close(FIT);

   # troba les ocupacions de cada usuari a cada fitxer
   foreach $linia (@dadesusuaris) {
      ($grup,$usuari)=(split(/ +/,$linia))[5,6];
      chop($usuari);
      print "<tr bgcolor=\"$color[$indexcolor]\">";
      $indexcolor=(++$indexcolor)%2;
      if ( $grup eq "ug" ) {
         print "<td><font color=\"$color[2]\">";
      } else {
         print "<td><font color=\"$color[3]\">";
      }
      print "<b>&nbsp;&nbsp;$usuari&nbsp;&nbsp;</b></font></td>";
      for ( $i=0 ; $i<=$#fitxers ; $i++) {
         open(QUOTA,"$fitxers[$i]");
         ($dades)=grep(/ $usuari$/,<QUOTA>);
         close(QUOTA);
         ($ocupacio)=(split(/ +/,$dades))[$camp];
         $ocupacio =~ s/-//g;
         print "<td align=right>&nbsp;&nbsp;$ocupacio&nbsp;<tt>";
         $ocupacio =~ s/\.//g;
         if ( $i == 0 || $anterior{$usuari} eq "" || $ocupacio == 0 ) {
            print "&nbsp;";
         } elsif ( $anterior{$usuari} == $ocupacio ) {
            print "<font color=\"#0000ff\">-</font>";
         } elsif ( $anterior{$usuari} > $ocupacio ) {
            print "<font color=\"#00c000\">&dArr;</font>";
         } else {
            print "<font color=\"#ff0000\">&uArr;</font>";
         }
         print "</tt>&nbsp;</td>";
         $anterior{$usuari}=$ocupacio if ( $ocupacio ne "" );
         if ( $grup eq "ug" ) {
            $totalug[$i] += $ocupacio;
         } else {
            $totalum[$i] += $ocupacio;
         }
      }
      if ( $grup eq "ug" ) {
         print "<td align=right><font color=\"$color[2]\">";
      } else {
         print "<td align=right><font color=\"$color[3]\">";
      }
      print "<b>&nbsp;&nbsp;$usuari&nbsp;&nbsp;</b></font></td>";
      print "</tr>\n";
   }

   # mostrem els totals
   if ( $pattern eq gm ) {
      print "<tr><td><b>&nbsp;&nbsp;/home/ug&nbsp;&nbsp;</b></td>";
      for ( $i=0 ; $i<=$#fitxers ; $i++ ) {
         print "<td align=right><b>&nbsp;&nbsp;";
         print int($totalug[$i]/(1024**2));
         print " Gb&nbsp;&nbsp;</b></td>";
      }
      print "<td align=right><b>&nbsp;&nbsp;/home/ug&nbsp;&nbsp;</b></td></tr>\n";
      print "<tr><td><b>&nbsp;&nbsp;/home/um&nbsp;&nbsp;</b></td>";
      for ( $i=0 ; $i<=$#fitxers ; $i++ ) {
         print "<td align=right><b>&nbsp;&nbsp;";
         print int($totalum[$i]/(1024**2));
         print " Gb&nbsp;&nbsp;</b></td>";
      }
      print "<td align=right><b>&nbsp;&nbsp;/home/um&nbsp;&nbsp;</b></td></tr>\n";
   }
   print "<tr><td><b>&nbsp;&nbsp;TOTAL</b></td>";
   for ( $i=0 ; $i<=$#fitxers ; $i++ ) {
      print "<td align=right><b>&nbsp;&nbsp;";
      print int(($totalug[$i]+$totalum[$i])/(1024**2));
      print " Gb&nbsp;&nbsp;</b></td>";
   }
   print "<td align=right><b>&nbsp;&nbsp;TOTAL</b></td></tr>\n";

   print "</table><br>\n";

}


# main
$pattern="";
while ( $opcio=shift(@ARGV) ) {
   if ( $opcio =~ /^-u?g$/ ) {
      $pattern =~ s/g?(m?)/g$1/;
   } elsif ( $opcio =~ /^-u?m$/ ) {
      $pattern =~ s/(g?)m?/$1m/;
   } elsif ( $opcio =~ /^-.*/ ) {
     die "Flag $opcio no reconegut\n";
   } else {
      unshift(@ARGV,$opcio);
      last;
   }
}
$pattern="gm" if ( $pattern eq "" );

if ( $#ARGV == -1 ) {
   die "No s'ha especificat cap fitxer\n";
}

$#fitxers=-1;
foreach $nom (@ARGV) {
   if ( ! -s "$nom" ) {
      print "$nom no existeix\n";
   } else {
      push(@fitxers,$nom);
   }
}

# alguns tags inicials...
print "<html><head><style type=\"text/css\">td { font-size: 12 }</style></head>\n";
print "<body>\n";

&taula("TOTAL",4);
&taula("BACKUP",1);
&taula("NO_BACKUP",2);

# alguns tags finals...
print "</body></html>\n";

