#!/usr/bin/perl

# la idea es agafar la sortida d'un "tree -asxF" (que inclou la grandaria
# de cada fitxer) i calcular la grandaria de cada directori
#
# per cada direc la grandaria depen del nombre de fitxers que conte,
# pero el que realment ens interessa es la suma de les grandaries de
# cadascun dels fitxers. aixo es el que calculem
#
# per no complicar-me, llegeixo el fitxer en ordre invers. la posicio
# en la linia dels claudators indica la indentacio
#
# amb el "-F" els directoris acaben en "/". els fitxers s'eliminen de
# la llista i la seva grandaria s'afegeix a la del directori de que
# penja directament; els directoris es deixen, i la seva grandaria
# (que es la suma de les grandaries dels fitxers) es suma a la del
# directori que el conte; etc. etc. etc...
#
# a mes: -a llista tots els fitxers, -s mostra la grandaria de cada
# fitxer, i -x evita que sortim del filesystem actual
#
# ignora qualsevol parametre d'entrada; el directori revisat es l'actual;
# la sortida va a STDOUT

sub numero {
   $tmp=$_[0];
   while ( $tmp =~ /\d{4}/ ) {
      $tmp =~ s/(\d{3})(\.|$)/\.$1$2/;
   }
   return " " x (16-length($tmp)) . "$tmp";
}

system("tree -asxF >/tmp/tree.out");

open(fit,"/tmp/tree.out");
@linia=<fit>;
close(fit);

open(temp,">/tmp/tree.tmp");

for ($ind=0;$ind<=100;$ind++) { # profunditat de directoris = 100
   $nombrefit[$ind]=0;
   $nombredir[$ind]=0;
   $nombrebyt[$ind]=0;
}

$longmax=0; # la linia mes llarga per ara

print temp "$linia[$#linia]";
print temp "$linia[$#linia-1]";

for ($ind=$#linia-2;$ind>=0;$ind--) {
   chop($linia[$ind]);
   $nivell=index($linia[$ind],"[")/4;
   $nivell=0 if ( $nivell < 0 );
   if ( $linia[$ind] =~ /\/$/ || $linia[$ind] =~ /^\./ ) {
      $linia[$ind] =~ s/(\[[ \d]+\]  )|(\/)//g;
      print temp "$linia[$ind] ---- "
         . "$nombrebyt[$nivell+1] "
         . "$nombredir[$nivell] "
         . "$nombrefit[$nivell+1]\n";
      if ( length($linia[$ind]) > $longmax ) {
         $longmax=length($linia[$ind]);
      }
      $nombrebyt[$nivell]+=$nombrebyt[$nivell+1];
      $nombrebyt[$nivell+1]=0;
      $nombrefit[$nivell]+=$nombrefit[$nivell+1];
      $nombrefit[$nivell+1]=0;
      $nombredir[$nivell-1]+=$nombredir[$nivell]+1;
      $nombredir[$nivell]=0;
   } else {
      $linia[$ind] =~ /\[([^]]+)\]/;
      $nombrebyt[$nivell]+=$1;
      $nombrefit[$nivell]++;
      # si el que elimino era final d'un arbre ("`--"), he de pujar
      # l'arbre fins al nou final, eliminant else "|  ", i convertir
      # el nou final de "|--" a "`--"
      $col=index($linia[$ind],"`--");
      if ( $col != -1 ) {
         for ( $puja=$ind-1;$puja>=0;$puja--) {
            if ( substr($linia[$puja],$col,3) eq "|--" ) {
               substr($linia[$puja],$col,1)="`";
               last;
            } elsif ( substr($linia[$puja],$col,1) eq "[" ) {
               last;
            } else {
               substr($linia[$puja],$col,1)=" ";
            }
         }
      }
   }
}

close(temp);

open(temp,"/tmp/tree.tmp");
@direcs=<temp>;
close(temp);

for ($ind=$#direcs;$ind>=0;$ind--) {
   chop($direcs[$ind]);
   $direcs[$ind] =~ s/ ---- (\d+) (\d+) (\d+)$//;
   $nombrebyt=$1;
   $nombredir=$2;
   $nombrefit=$3;
   $indentacio=$longmax+3-length($direcs[$ind]);
   print "$direcs[$ind]" . " " x $indentacio
      . &numero($nombrebyt)
      . &numero($nombredir)
      . &numero($nombrefit)
      . "\n";
}

unlink("/tmp/tree.tmp");
unlink("/tmp/tree.out");

