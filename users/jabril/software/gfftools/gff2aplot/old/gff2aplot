function APLOT_BLOCK() {
 printf "%%\n%% lwidth lcolor bcolor Hori Hend Vori Vend Bsquare\n";
 if (OnOff(Var["Display_SELECTION-BOX"])) {
   for (i=1;i<=LAST[ALIGNname];i++) {
     if (FEATURE[ALIGNname,"-",i]~FTHighLight) {
       split(SQ_ORI[ALIGNname,"-",i],Oori,":");
       split(SQ_END[ALIGNname,"-",i],Eend,":");
       if (ChkXlim(Oori[1],Eend[1]) && ChkYlim(Oori[2],Eend[2])) {
         Oori[1]=max(Oori[1],OSQ1);Eend[1]=min(Eend[1],ESQ1);
         Oori[2]=max(Oori[2],OSQ2);Eend[2]=min(Eend[2],ESQ2);
         printf "%s %s %s %s %s %s %s Bsquare\n", GetLW("N"), Var["FOREGROUND_COLOR"], stcol(Var["SelectionBox_BGCOLOR"]), Oori[1], Eend[1], Oori[2], Eend[2];
         }
       }
     }
   }
 #
}

function EXTRA_BLOCK() {
   printf "%%\nvertical\n"
   if (OnOff(Var["Display_GFF"])) {
     for (i=1;i<=LAST[SEQ1LABEL];i++) {
       slbl=SEQ1LABEL SUBSEP "-" SUBSEP i
       if (FEATURE[slbl]~FTExtraDisplay) {
         if (!ChkColor(FTColor[FEATURE[slbl]])) xcolor=Var["FOREGROUND_COLOR"]
           else xcolor=FTColor[FEATURE[slbl]]
         if (OnOff(Var["Display_GFF-ReverseOrder"])) gffpos=NGROUPS-NGROUP[slbl]
           else gffpos=NGROUP[slbl]+1
         if (ChkXlim(SQ_ORI[slbl],SQ_END[slbl])) {
           SQ_ORI[slbl]=max(SQ_ORI[slbl],OSQ1)
           SQ_END[slbl]=min(SQ_END[slbl],ESQ1)
           printf "%s %s %s %s %s %s Line\n", SQ_ORI[slbl], gffpos, SQ_END[slbl], gffpos, "Xlwdt", xcolor
           }
         }
       }
     }
   if (OnOff(Var["Display_FUNCTION"])) {
     printf "%%\n%s %s\nbeginfunct\n",MinF,MaxF
     for (fnc in FnctSEQ) {
       if (FnctSEQ[fnc]==SEQ1LABEL) {
         fori=0; thefnc=SEQ1LABEL SUBSEP "-" SUBSEP fnc
         for (i=OSQ1;i<=ESQ1;i++) {
           if (fori) { 
             if (FunctionFlg[thefnc,"-",i])
               printf "%s %s flt\n", i, FunctionXaxis[thefnc,"-",i]
             }
           else if (!fori) { 
             if (FunctionFlg[thefnc,"-",i]) {
               printf "S\n%s %s fmt\n", i, FunctionXaxis[thefnc,"-",i]; fori=1 }
             }
           }
         if (fori) {
           printf "2 slw %s scmyk K R\n",FunctionColor[thefnc] }
         }
       }
       printf "%%\nendfunct\n%%\n"
     }
}

function PLOTFEATURES(SEQ,isq    ,tt) {
 if (ish) tt="HORIZONTAL"; else tt="VERTICAL";
 PrintRPT("*** PLOT FEATURES * " tt " AXES\n");
 #
  #
  if (OnOff(Var["Display_JOINS"]) && OnOff(Var["Display_FullHeightBOX"])) {
    G_ORI[GROUP[SEQ,"-",1]]=SQ_ORI[SEQ,"-",1]
    for (i=1;i<LAST[SEQ];i++) {
     name=SEQ SUBSEP "-" SUBSEP i
     nxtn=SEQ SUBSEP "-" SUBSEP (i+1)
     gname=GROUP[name]
     feat=FEATURE[name]
     if (FTputJoin[feat] && feat!~FTExtraDisplay) {
       if (G_ORI[gname]>SQ_ORI[name]) G_ORI[gname]=SQ_ORI[name]
       if (G_END[gname]<SQ_END[name]) G_END[gname]=SQ_END[name]
       if (FEATURE[nxtn]~feat) {
         if (gname==GROUP[nxtn]) {
           bori=SQ_END[name]; bend=SQ_ORI[nxtn]; jprt=0
           if (isq) {
             if (ChkXlim(bori,bend)) {
               bori=max(bori,OSQ1); bend=min(bend,ESQ1); jprt=1 }
             }
           else { 
             if (ChkYlim(bori,bend)) {
               bori=max(bori,OSQ2); bend=min(bend,ESQ2); jprt=1 }
             }  
           if (jprt) printf "%s %s %s Join\n", stcol(Var["Join-Lines_COLOR"]), bori, bend
           }
         else G_ORI[GROUP[nxtn]]=SQ_ORI[nxtn]
         }
       }
     }
     if ((G_END[gname]<SQ_END[SEQ,"-",LAST[SEQ]]) && FEATURE[SEQ,"-",LAST[SEQ]]==feat) {
       G_END[gname]=SQ_END[SEQ,"-",LAST[SEQ]] }
   }  # if Joins & FullBoxes 
  #
}  # function

function PLOTREMARKS(SEQ,isr    ,tt) {
 if (ish) tt="HORIZONTAL"; else tt="VERTICAL";
 PrintRPT("*** PLOT Remarks * " tt " AXES\n");
 #
 for (h=1;h<=LAST[SEQ];h++) {
   xtname=SEQ SUBSEP "-" SUBSEP h
   bori=SQ_ORI[xtname]; bend=SQ_END[xtname];
   grpcnt[SEQ,"-",GROUP[xtname]]++
   if (FEATURE[xtname]~FTRectangle || FEATURE[xtname]~FTCircle || FEATURE[xtname]~FTText) {
     if (ChkColor(SOURCE[xtname])) xtcolor=SOURCE[xtname]
     else xtcolor=Var["FOREGROUND_COLOR"]
     xto=split(SQ_ORI[xtname],o,":")
     if (xto==1) o[2]=0
     xte=split(SQ_END[xtname],e,":")
     if (xte==1) e[2]=0
     }
   goprt=0
   toprt=0
   if (FTRectangle!~"##DEFAULT##" && FEATURE[xtname]~FTRectangle) {
     if (isr) {
       if (ChkXlim(o[1],e[1])) {
         o[1]=max(o[1],OSQ1); e[1]=min(e[1],ESQ1); goprt=1 }
       if (ChkYlim(o[2],e[2])) {
         o[2]=max(o[2],OSQ2); e[2]=min(e[2],ESQ2); toprt=1 }
       }
     else {
       if (ChkXlim(o[2],e[2])) {
         o[2]=max(o[2],OSQ1); e[2]=min(e[2],ESQ1); goprt=1 }
       if (ChkYlim(o[1],e[1])) {
         o[1]=max(o[1],OSQ2); e[1]=min(e[1],ESQ2); toprt=1 }
       }
     if (goprt && toprt) {
       printf "%s %s %s %s %s %s Msquare\n",SCORE[xtname],xtcolor,o[1],e[1],o[2],e[2] }
     }
   if (FTCircle!~"##DEFAULT##" && FEATURE[xtname]~FTCircle) {
     if (ChkXlim(o[1],o[1])) { goprt=1 }
     if (ChkYlim(e[1],e[1])) { toprt=1 }
     if (goprt && toprt) printf "%s %s %s %s %s Mcircle\n",SCORE[xtname],xtcolor,o[2],o[1],e[1]
     }
   if (FTText!~"##DEFAULT##" && FEATURE[xtname]~FTText) {
     if (ChkXlim(o[1],o[1])) { goprt=1 }
     if (ChkYlim(e[1],e[1])) { toprt=1 }
     if (goprt && toprt) printf "(%s) %s %s Xscm %s Yscm %s %s tshow\n",GROUP[xtname],SCORE[xtname],o[1]+o[2],e[1]+e[2],"TagFont",xtcolor
     }
   }
 }
