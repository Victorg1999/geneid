% -*- mode: Noweb; noweb-code-mode: perl-mode; tab-width: 4 -*-
\documentclass[11pt]{article}
%
%2345678901234567890123456789012345678901234567890123456789012345678901234567890
%        1         2         3         4         5         6         7         8
%
% # $Id: chr15q.nw,v 1.2 2001-12-13 18:24:33 gparra Exp $ 
%
\usepackage{noweb}
\usepackage[a4paper,offset={0pt,0pt},hmargin={2cm,2cm},vmargin={1cm,1cm}]{geometry}
\usepackage{graphics}
\usepackage[dvips]{graphicx}
%% pstricks
\usepackage[dvips]{pstcol}
\usepackage{pstricks}
%\usepackage{pst-node}
%\usepackage{pst-char}
%\usepackage{pst-grad}
%% bibliography
\usepackage{natbib}
%% latex2html
\usepackage{url}
\usepackage{html}     
\usepackage{htmllist} 
%% tables    
\usepackage{dcolumn}
%\usepackage{colortbl}
%\usepackage{multirow}
%\usepackage{hhline}
%\usepackage{tabularx}
%% seminar
%\usepackage{semcolor,semlayer,semrot,semhelv,sem-page,slidesec}
%% draft watermark
%\usepackage[all,dvips]{draftcopy}
%\draftcopySetGrey{0.9}
%\draftcopyName{CONFIDENTIAL}{100}
%% layout
\usepackage{fancyhdr} % Do not use \usepackage{fancybox} -> TOCs disappear
%\usepackage{lscape}
%\usepackage{rotating}
%\usepackage{multicol}
%% fonts
\usepackage{times}\fontfamily{ptm}\selectfont
\usepackage{t1enc}

% noweb options
\noweboptions{smallcode}
\def\nwendcode{\endtrivlist \endgroup} % relax page breaking scheme
\let\nwdocspar=\par                    %

\input defs.tex % from <LaTeX new definitions> chunk

%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
\begin{document}
%
<<HIDE: LaTeX new definitions>>=
%%%%% Colors for gff2ps
\input ColorDefs.tex

%%%%% New Commands are defined here
\newcommand{\sctn}[1]{\section{#1}}
\newcommand{\subsctn}[1]{\subsection{#1}}
\newcommand{\subsubsctn}[1]{\subsubsection{#1}}
\newcommand{\desc}[1]{\item[#1] \ \\}
\newcommand{\todo}[1]{
  \vskip 3ex
  \hspace{-0.75cm}
   \psframebox[framearc=0.2,linecolor=darkred,linewidth=1pt,
              fillstyle=solid,fillcolor=verylightyellow,framesep=2ex]{
     \begin{minipage}[t]{16cm}
     \vskip -4.75ex
     \hspace{-1.25cm}
       \psframebox[framearc=1,linecolor=darkred,linewidth=1.25pt,
               fillstyle=solid,fillcolor=verylightorange,framesep=5pt]{
               \textcolor{darkred}{\textbf{\hspace{2ex}TO DO\hspace{2ex}}}
         } % psframebox
      \begin{itemize}\setlength{\itemsep}{-0.5ex} #1 \end{itemize}
     \end{minipage}
     } % psframebox
  \vskip 1.5ex
} % newcommand todo
\newcommand{\todoitem}[2]{
  \item[$\triangleright$] [\textit{Section}~\ref{#2}, 
                           \textit{page}~\pageref{#2}]\\ {#1}
} % newcommand todoitem
<<HIDE: new LaTeX commands>>

%%%%% PSTRICKs definitions
\pslongbox{ExFrame}{\psframebox}
\newcommand{\cln}[1]{\fcolorbox{black}{#1}{\textcolor{#1}{\rule[-.3ex]{1cm}{1ex}}}}
\newpsobject{showgrid}{psgrid}{subgriddiv=0,griddots=1,gridlabels=6pt}
% \pscharpath[fillstyle=solid, fillcolor=verydarkcyan, linecolor=black, linewidth=1pt]{\sffamily\scshape\bfseries\veryHuge #1 }
<<HIDE: new LaTeX pstricks>>

%%%%% global urls
% \newcommand{\getpsf}[1]{\html{(\htmladdnormallink{Get PostScript file}{./Psfiles/#1})}}   
<<HIDE: new LaTeX urls>>

%%%%% defs
\def\noweb{\textsc{noweb}}
\def\ps{\textsc{PostScript}}
<<HIDE: new LaTeX definitions>>

%%%%% TODO defs
<<HIDE: new defs TODO>>

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
\def\genomelab{\textbf{Genome Informatics Research Lab}}
\def\progname{Annotation of a region of chr15q}
\def\tit{\textsc{\progname}}
%
\def\mtauthor{
 \htmladdnormallink{\texttt{gparra@imim.es}}
                   {MAILTO:gparra@imim.es?subject=[chr15q]}
 } % def mtauthor
%
\def\authorslist{
 The Author/s {\mdseries\small\dotfill \mtauthor } \\
 % Other authors here...\\
 } % def authorslist
\def\authorshort{
 Authors list here % Other authors here...
 } % def authorshort
%
\def\license{GNU General Public License (GNU-GPL)}
%
\def\progdesc{
Short description of your program here !!!
 } % def progdesc
%
\def\showaffiliation{
\scalebox{0.9 1}{\Large\textsl{\genomelab}}\\
Grup de Recerca en Infom\`atica Biom\`edica\\
Institut Municipal d'Investigaci\'o M\`edica\\
Universitat Pompeu Fabra\\[2ex]
 } % def showaffiliation
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%% Setting text for footers and headers
\fancyhead{} % clear all fields
\fancyfoot{} % clear all fields
\fancyhead[RO,LE]{\thepage}
\fancyhead[LO,RE]{\tit\quad\rightmark}
\fancyfoot[LO,LE]{\small\textbf{\genomelab}}
\fancyfoot[CO,CE]{\small\textsl{\authorshort}}
\fancyfoot[RO,RE]{\small\textbf{\today}}
\renewcommand{\headrulewidth}{1pt}
\renewcommand{\footrulewidth}{1pt}
%
@

<<HIDE: new LaTeX commands>>=
@ 
<<HIDE: new LaTeX pstricks>>=
@ 
<<HIDE: new LaTeX urls>>=
@ 
<<HIDE: new LaTeX definitions>>=
@ 
<<HIDE: new defs TODO>>=
@ 

\thispagestyle{empty}

\begin{titlepage}

\ \vfill
\begin{center}
\textbf{\Huge \progname}\\[5ex]

% \textbf{\Large Authors List Here}\\[1ex]
\textbf{\Large Genis Parra and Roderic Guigo}\\[5ex] 
        % \raisebox{0.85ex}{\footnotesize$\,\dag$}\\[0.5ex]

\textbf{\large --- \today ---}\\[10ex]

\begin{abstract}
\begin{center}
\parbox{0.75\linewidth}{
\progdesc
} % parbox
\end{center}
\end{abstract}

\vfill

\begin{raggedleft}
\showaffiliation
\raisebox{0.85ex}{\footnotesize$\dag\,$}{\large e-mail: \mtauthor}\\
\end{raggedleft}
\end{center}

\end{titlepage} %'

%
%%%%%%%%%%%%%%%%%%%% FRONTMATTER

\newpage %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\pagenumbering{roman}
\setcounter{page}{1}
\pagestyle{fancy}
% Marks redefinition must go here because pagestyle 
% resets the values to the default ones.
\renewcommand{\sectionmark}[1]{\markboth{}{\thesection.\ #1}}
\renewcommand{\subsectionmark}[1]{\markboth{}{\thesubsection.\ \textsl{#1}}}

\tableofcontents
\listoftables
\listoffigures

\vfill
\begin{center}
{\small$<$ \verb$Id: chr15q.nw,v 1.2 2001-12-13 18:24:33 gparra Exp $$>$ }
\end{center}

%%%%%%%%%%%%%%%%%%%% MAINMATTER

\newpage %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\pagenumbering{arabic}
\setcounter{page}{1}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{comment}

\sctn{Schedule}
\subsctn{Obtain all the available information and try to map them in the subsequence}
\begin{itemize}
\item Goldenpath: refseq and ensembl.
\item Celera: celera genes.
\end{itemize}

All the annotations must have the same starting point (for example and STS, the end or the start site of a known gene). We should have the data in three different formats: gff, nucleodite CDS in fasta, and translatet amino acids in fasta.

\subsctn{Compare genomic sequences from different sources (goldenpath, celera and ncbi)}
\begin{itemize}
\item Nucleotide level: Using Blat2seq to compare the genomic sequences.
\item Gene order: Comparing the order of the annotated genes. Run blasp to find homologous annotations in different datasets and check the order.
\end{itemize}
From the results choose the most reliable sequence for the complete annotation analysis.

\subsctn{Searching for other known genes not mapped in the sequence}
Run blat or sshasa, comparing all celera, ensembl and refseq genes againts the genomic sequence  to find other known genes. Compare the CDS with a very restrictive parameters to avoid false positives.
\subsctn{Plot all these results using gff2ps}
\end{comment}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\sctn{Introduction}
The goal of this project is to improve the public annotation of a concrete region of chromosome 15. We want to gather all the available information from different resources, and aplay new gene finding methods to obtain a good quality annotation of all the putative genes.

The studied sequence is delimited by two known genes:
\begin{itemize}
\item LOXL1. PubMed on Product: lysyl oxidase-like 1
\begin{itemize}
\item RefSeq: NM\_005576 
\item Band: 15q24.1
\end{itemize}
\item BLM.  PubMed on Product: Bloom syndrome protein
\begin{itemize}
\item RefSeq: NM\_000057
\item Band: 15q26.1
\end{itemize}
\end{itemize}

These genes will be easy to locate between different human assemblies or different releases. Therefore we decided to analyze the sequence between 5000 bp upstream the transcription start site of LOXL1 and 5000 bp downstream of the BLM stop codon.

\subsctn{Datasets}
There are three different assemblies from the Human genome:
\begin{itemize}
\item golden path  from http://genome.cse.ucsc.edu/ \\
August 2001 release from golden path. \\
Mapped positions \\
LOX1L primer 73858868  73858917\\
BLM primer 95868873  95868922\\
Subsequence length: 22,020,055 bp (number of N in the raw sequence: 4,352,983)

\item Celera genomics \\
Subsequence length: 17,764,320  bp (number of N in the raw sequence: 971,003)

\end{itemize}

\section{Analisys of goldenpath sequence}

The goldenpath and the ensembl annotation over chr15 (August 2001 release) were extracted. We found 122 refseq mRNA entries mapped on this region (199 can be translated with out stop codons in frame). The ensembl annotation contains 262 ensembl transcripts. We have also extracted the 370 genscan predictions. 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{comment}

\end{comment}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpage %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\appendix

\sctn{Appendix section}

\subsctn{Golden path annotation with stop codons in frame}

Some of the annotated refseq genes could not be translatet into proteins because they contained stop codons in frame. 

<<Annation with stop codons>>=
NM_000126
NM_000745
NM_001135
NM_001150
NM_003847
NM_004213
NM_004255
NM_004383
NM_004644
NM_004809
NM_005576
NM_006165
NM_006715
NM_013227
NM_014163
NM_014272
NM_014300
NM_016073
NM_018652
NM_022163
NM_024776
NM_025084
NM_032568
@ 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{comment}
\end{comment}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\sctn{BASH commad lines}

<<BASH commands1 >>=
# Build directory structure
mkdir $ANALYSIS/fasta $ANALYSIS/annotations $ANALYSIS/data/ \
  $ANALYSIS/data/  $ANALYSIS/data/boundary_genes \
  $ANALYSIS/data/boundary_genes/LOXL1  $ANALYSIS/data/boundary_genes/BLM \
# All the information about the boundary genes have been download.   
# We generate two primers 50bp length from the begining and the end 
# of  LOXL1 and BLM respectively
#
SS $ANALYSIS/data/boundary_genes/LOXL1/NM_005576.fa 306 355 \
   > $ANALYSIS/data/boundary_genes/LOXL1/LOXL1_primer.fa 
SS $ANALYSIS/data/boundary_genes/BLM/NM_000057.fa 4279 4328 \
   > $ANALYSIS/data/boundary_genes/BLM/BLM.primer.fa 
# we will substract the sequence betwwen 5000 bp upstream  LOXL1_primer.fa ATG
# and 5000 bp downstream BLM.primer.fa TAA.

###############
# GOLDEN PATH #
export GP="/seq/genomes/H.sapiens/golden_path_20010806";
# Obtaining the positions of the primers in the golden path seq
# ~/ssaha_v20_linux $ANALYSIS/data/boundary_genes/BLM/BLM.primer.fa \
#    $GP/chromFaMasked/15/chr15.fa.masked \
#    -sf fasta -sm 10 -wl 5 -qt protein -st protein
LOX1L primer 73858868  73858917
BLM primer 95868873  95868922
# So, we need from 73858868 - 5000 to 95868922 + 5000 => 73853868 .. 95873922
# the fragment length is 22,020,055 bp  
SS $GP/chromFaMasked/15/chr15.fa.masked \
  73853868 95873922 > $ANALYSIS/fasta/gp_aug01/msk/gp_aug01
SS $GP/chromosomes/chr15.fa \
  73853868 95873922 > $ANALYSIS/fasta/gp_aug01/raw/gp_aug01
#To check the result: 
# SS  fasta/gp_aug01/msk/gp_aug01 5001 5003
# ATG OK!
# SS  fasta/gp_aug01/msk/gp_aug01  22015053 22015055
# TAA OK! 

##########
# CELERA #
~/ssaha_v20_linux $ANALYSIS/data/boundary_genes/LOXL1/LOXL1_primer.fa  \
   $ANALYSIS/_tmp/celera_ini/cel_chr15.fa  -sf fasta -sm 10 -wl 5  \
    -qt protein -st protein
LOXL1 primer 6653880 to 6653929
~/ssaha_v20_linux $ANALYSIS/data/boundary_genes/BLM/BLM.primer.fa \
   $ANALYSIS/_tmp/celera_ini/cel_chr15.fa  -sf fasta -sm 10 -wl 5 \
   -qt protein -st protein
BLM primer 24408150 to 24408199
# So, we need from 6653880 - 5000 to 24408199 + 5000 => 6648880 .. 24413199
SS  $ANALYSIS/_tmp/celera_ini/cel_chr15.fa 6648880 24413199 \
    > $ANALYSIS/fasta/cel/raw/cel_chr15.fa
#To check the result: 17764320
# SS  $ANALYSIS/fasta/cel/raw/cel_chr15.fa 5001 5003
# ATG OK!
# SS  $ANALYSIS/fasta/cel/raw/cel_chr15.fa  17759317 17759320
# TAA OK! 
@ 

<<Goldenpath Annotations>>=
################
## GOLDENPATH ##
# Annotations from golden path

##########
# REFSEQ # 

gawk '$2=="chr15" && $5 > 73853868 && $4 < 95873922'  \
    $GP/database/refGene.txt \
    > $ANALYSIS/annotation/gp_aug01/refseq/gp/gp_aug01
# Converting  gp to GFF-format with the new coordinates  73853868 .. 95873922
# Exons
sed 's/,/ /g' $ANALYSIS/annotation/gp_aug01/refseq/gp/gp_aug01 | \
   gawk 'BEGIN{OFS="\t";coord=ARGV[1];ARGV[1]="";} \
      {num_exons=$8;for (cont=1;cont<=num_exons;cont++) \
      print "chr15gp_aug01","refseq","exon",$(9+cont-1)-coord+2,\
      $(9+cont+num_exons-1)-coord+1,".",$3,".",$1;}' 73853868 \
   | sort +3n > $ANALYSIS/annotation/gp_aug01/refseq/gff/gp_aug01.exon
# CDS 122 CDS 23 amb stop codons
$BIN/gp2gff.awk $ANALYSIS/annotation/gp_aug01/refseq/gp/gp_aug01  |  \
   gawk '{OFS="\t";$1="chr15gp_aug01";$2="refseq";\
      $4=$4-73853868+1;$5=$5-73853868+1;print}' \
    > $ANALYSIS/annotation/gp_aug01/refseq/gff/gp_aug01.cds
# Extracting the cds sequence from the annotations
cd $ANALYSIS/annotation/gp_aug01/refseq/cds
~/software/SSgff2/bin/SSgff $ANALYSIS/fasta/gp_aug01/raw/gp_aug01 \
   $ANALYSIS/annotation/gp_aug01/refseq/gff/gp_aug01.cds | FastaToTbl \
   | gawk '{locus=substr($1,1,length($1)-2);if (substr($1,length($1),1)=="F")\
      CDS[locus]=CDS[locus]$2; else CDS[locus]=$2CDS[locus];} \
      END {for (locus in CDS) print locus, CDS[locus]} ' | TblToFastaFile
# Tranlastion of the cds extracted sequence
cd $ANALYSIS/annotation/gp_aug01/refseq/prot
FastaToTbl $ANALYSIS/annotation/gp_aug01/refseq/cds/* \
     | Translate | TblToFastaFile
# 129 annotated genes 7 entries with the same refseq name #
# NM_006165 have annotation in  chr 11 and 15
# From the 122 refseq 23 have stop codons

###########
# ENSEMBL # not still available in galdenpath aug_01 
#gawk '$2=="chr15" && $5 > 73853868 && $4 < 95873922'  $GP/database/ensGene.txt
# From ensembl server: We have to download from the http export page
gawk 'BEGIN{OFS="\t"}
      {print "chr15gp_aug01","ensembl","exon", $4+1, $5+1, $6,$7,$8,$10;}' \
      $ANALYSIS/_tmp/ensembl_data/exportview1 | \
       sed 's/transcript_id=//;s/;//' \
       >  $ANALYSIS/_tmp/ensembl_data/exportview1.final
gawk 'BEGIN{OFS="\t"}\
      {print "chr15gp_aug01","ensembl","exon", $4+10000000+1, $5+10000000+1,\
      $6,$7,$8,$10;}' \
   $ANALYSIS/_tmp/ensembl_data/exportview2 | \
   sed 's/transcript_id=//;s/;//' \
   > $ANALYSIS/_tmp/ensembl_data/exportview2.final

cat  $ANALYSIS/_tmp/ensembl_data/exportview?.final | sort +3n \
   > $ANALYSIS/annotation/gp_aug01/ensembl/gff/gp_aug01.cds 

 
###########
# GENSCAN
gawk '$2=="chr15" && $5 > 73853868 && $4 < 95873922'  $GP/database/genscan.txt \
   | $BIN/gp2gff.awk |  \
   gawk '{OFS="\t";$1="chr15gp_aug01";$2="genscan";$3="exon";\
       $4=$4-73853868+1;$5=$5-73853868+1;print}' \
    > $ANALYSIS/annotation/gp_aug01/other/gff/genscan

#---### VISUALIZATION ###---#
# Plotting all togheter
GFFIN="$ANALYSIS/annotation/gp_aug01/refseq/gff/gp_aug01.exon" ;
GFFIN="$GFFIN $ANALYSIS/annotation/gp_aug01/refseq/gff/gp_aug01.cds" ; 
GFFIN="$GFFIN $ANALYSIS/annotation/gp_aug01/ensembl/gff/gp_aug01.cds" ; 
GFFIN="$GFFIN $ANALYSIS/annotation/gp_aug01/other/gff/genscan" ; 
run_GFF2PS gp_aug01 "$GFFIN"  chr15q
# Apollo files
cat $ANALYSIS/annotation/gp_aug01/refseq/gff/gp_aug01.exon \
    $ANALYSIS/annotation/gp_aug01/ensembl/gff/gp_aug01.cds \
    $ANALYSIS/annotation/gp_aug01/other/gff/genscan \
 > $ANALYSIS/apollo/gp_aug01/all.gff

@
%$



%%%%%%%%%%%%%%%%%%%% BACKMATTER

% \newpage %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 
% \bibliographystyle{apalike}
% \bibliography{/home1/rguigo/docs/biblio/References}


%
\newpage %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\sctn{Common code blocks}

\subsctn{PERL scripts}

<<PERL shebang>>=
#!/usr/bin/perl -w
# This is perl, version 5.005_03 built for i386-linux
#
<<Program Description>>
#
<<GNU License>>
#
<<Version Control Id Tag>>
#
use strict;
#
<<Program Info>>
my $DATE = localtime;
my $USER = defined($ENV{USER}) ? $ENV{USER} : 'Child Process';
my $host = `hostname`;
chomp($host);
#
@

<<Global Constants - Boolean>>=
my ($T,$F) = (1,0); # for 'T'rue and 'F'alse
@ %def $T $F


\subsubsctn{Timing our scripts}

The '[[Benchmark]]' module encapsulates a number of routines to help to figure out how long it takes to execute a piece of code and the whole script.

<<Use Modules - Benchmark>>=
use Benchmark;
  <<Timer ON>>
@ 

See '[[man Benchmark]]' for further info about this package. 
We set an array to keep record of timing for each section.

<<Timer ON>>=
my @Timer = (new Benchmark);
@ 

<<Common PERL subs - Benchmark>>=
sub timing() {
    push @Timer, (new Benchmark);
    # partial time 
    $_[0] || 
        (return timestr(timediff($Timer[$#Timer],$Timer[($#Timer - 1)])));
    # total time
    return timestr(timediff($Timer[$#Timer],$Timer[0]));
} # timing
@ 


\subsubsctn{Printing complex Data Structures}

With '[[Data::Dumper]]' we are able to pretty print complex data structures for debugging them.


<<Use Modules - Dumper>>=
use Data::Dumper;
local $Data::Dumper::Purity = 0;
local $Data::Dumper::Deepcopy = 1;
@ 


\subsubsctn{Common functions}

<<Skip comments and empty records>>=
next if /^\#/o;
next if /^\s*$/o;
chomp;
@

<<Common PERL subs - Min Max>>=
#
sub max() {
    my $z = shift @_;
    foreach my $l (@_) { $z = $l if $l > $z };
    return $z;
} # max
sub min() {
    my $z = shift @_;
    foreach my $l (@_) { $z = $l if $l < $z };
    return $z;
} # min
@

<<Common PERL subs - Text fill>>=
#
sub fill_right() { $_[0].($_[2] x ($_[1] - length($_[0]))) }
sub fill_left()  { ($_[2] x ($_[1] - length($_[0]))).$_[0] }
sub fill_mid()   { 
    my $l = length($_[0]);
    my $k = int(($_[1] - $l)/2);
    ($_[2] x $k).$_[0].($_[2] x ($_[1] - ($l+$k)));
} # fill_mid
@

These functions are used to report to STDERR a single char for each record processed (useful for reporting parsed records).

<<Common PERL subs - Counter>>=
#
sub counter { # $_[0]~current_pos++ $_[1]~char
    print STDERR "$_[1]";
    (($_[0] % 50) == 0) && (print STDERR "[".&fill_left($_[0],6,"0")."]\n");
} # counter
#
sub counter_end { # $_[0]~current_pos   $_[1]~char
    (($_[0] % 50) != 0) && (print STDERR "[".&fill_left($_[0],6,"0")."]\n");
} # counter_end
@

<<Global Vars - Counter>>=
my ($n,$c); # counter and char (for &counter function)
@ %def $n $c


\subsubsctn{Common functions for reporting program processes}
\label{sec:messagerpt}

Function '[[report]]' requires that a hash variable '[[%MessageList]]' has been set, such hash contains the strings for each report message we will need. The first parameter for '[[report]]' is a key for that hash, in order to retrieve the message string, the other parameters passed are processed by the [[sprintf]] function on that string.

<<Common PERL subs - STDERR>>=
sub report() { print STDERR sprintf($MessageList{ shift @_ },@_) }
@

The same happens to '[[warn]]' function which also requires a hash variable '[[%ErrorList]]' containing the error messages.

<<Common PERL subs - STDERR>>=
sub warn() { print STDERR sprintf($ErrorList{ shift @_ }, @_) }
@

\subsctn{AWK scripts}

<<GAWK shebang>>=
#!/usr/bin/gawk -f
# GNU Awk 3.0.4
<<Version Control Id Tag>>
@

<<gp2gff.awk>>=
<<GAWK shebang>>
# Transfor the goldenpath format to gff file for the cds coordinates.
# USAGE: gp2gff goldenpath_file
# rguigo Monday 22 October 2001
BEGIN{
    OFS="\t";
    source="refseq";
    feature="cds";
    score=".";
    frame=".";

}
{
    gsub (","," ");
    seqname=$2;
    strand=$3;
    group=$1;

    ne=$8;   # number of exons
    cdsi=$6; # init of cds
    cdse=$7; # end of cds


#    print $0;

    for (i=1;i<=ne;i++) {
        exon[i,1]= $(9+i-1)+1;
        exon[i,2]= $(9+i+ne-1);
#       print exon[i,1], exon[i,2];
    }

    j=1;
    while (exon[j,2] < cdsi)
        j++;
 
    exon[j,1]=cdsi+1;
 
    k=j;
    while ((exon[k,1] < cdse) && (k<=ne))
        k++;
    k--
    exon[k,2]=cdse;
#    print "***", ne, j, k;
    for (i=j;i<=k;i++)
        print seqname, source,feature, exon[i,1], exon[i,2],score,strand,frame,group;
 
}
@

\subsctn{BASH scripts}

<<BASH shebang>>=
#!/usr/bin/bash
# GNU bash, version 2.03.6(1)-release (i386-redhat-linux-gnu)
<<Version Control Id Tag>>
#
SECONDS=0 # Reset Timing
# Which script are we running...
L="####################"
{ echo "$L$L$L$L";
  echo "### RUNNING [$0]";
  echo "### Current date:`date`";
  echo "###"; } 1>&2;
@

<<BASH script end>>=
{ echo "###"; echo "### Execution time for [$0] : $SECONDS secs";
  echo "$L$L$L$L";
  echo ""; } 1>&2;
#
exit 0
@
<<BASH Basic Shell Functions>>=
#
# BASIC Shell Functions
#
ChckDirs ()
{
  #
  # USAGE: ChckDirs <path_list>
  #
  for name in "$@" ;
    do {
         [ -d "$name" ] &&
           echo "### Directory Already Exist: $name" ||
             mkdir --verbose $name ;
      } ;
    done ;
}
#
@
<<BASH Functions: Running GFF2PS>>=
#
run_GFF2PS ()
{
  #
  # run_GFF2PS - Making plots with gff2ps (wide formats)
  #
  # USAGE: run_GFF2PS working_dir "GFF_files_list" custom_file_root [ps_tail]
  #
  # 'working_dir' where to save plots
  # "GFF_files_list" a list of GFF files (with full path) to be plotted
  #
  ODIR="$ANALYSIS/gff2ps/$1" ;
  GFFfiles="$2" ;
  PARM="$BIN/param/gff2ps/$3" ;
  [ "$4" ] && XTR="$4" || XTR="";
  #
  ChckDirs $ODIR \
           $ODIR/wide \
           $ODIR/wide/logs ;
  #
  CHR="chr15q" ;
  #
  gff2ps -VC ${PARM}_wide.rc  -- $GFFfiles \
          2>&1 > $ODIR/wide/${CHR}${XTR} | tee $ODIR/wide/logs/${CHR}${XTR} ;

}
#
@

\subsctn{Version control tags}

This document is under Revision Control System (RCS). The version you are currently reading is the following:

<<Version Control Id Tag>>=
# $Id: chr15q.nw,v 1.2 2001-12-13 18:24:33 gparra Exp $
@ 

\newpage %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\sctn{Extracting code blocks from this document}

From this file we can obtain both the code and the
documentation. The following instructions are needed:

\subsctn{Extracts Script code chunks from the {\noweb} file} % \\[-0.5ex]

Remember when tangling that '-L' option allows you to include program line-numbering relative to original {\noweb} file. Then the first line of the executable files is a comment, not a shebang, and must be removed to make scripts runnable.

<<tangling>>=
# showing line numbering comments in program
notangle  -R"gp2gff.awk" $WORK/$nwfile.nw  \
    > $BIN/gp2gff.awk;
chmod a+x $BIN/* ;
@ 

<<tangling>>=
# reformating program with perltidy
notangle -R"chr15q" $WORK/$nwfile.nw | \
    perltidy - | cpif $BIN/chr15q ;
# html pretty-printing program with perltidy
notangle -R"chr15q" $WORK/$nwfile.nw | \
    perltidy -html - | cpif $DOCS/html/chr15q.html ;
#
@ 

\subsctn{Extracting different Config Files} % \\[-0.5ex]

<<tangling>>=
notangle -R"root" $WORK/$nwfile.nw | \
         cpif $DATA/root_config ;
@ %$

\subsctn{Extracting documentation and \LaTeX{}'ing it} % \\[-0.5ex] %'

<<tangling>>=
notangle -Rweaving  $WORK/$nwfile.nw | cpif $WORK/nw2tex ;
notangle -RLaTeXing $WORK/$nwfile.nw | cpif $WORK/ltx ;
chmod a+x $WORK/nw2tex $WORK/ltx;
@ 

<<tangling complementary LaTeX files>>=
notangle -R"HIDE: LaTeX new definitions" $WORK/$nwfile.nw | cpif $DOCS/defs.tex ;
notangle -R"HIDE: TODO" $WORK/$nwfile.nw | cpif $DOCS/todo.tex ; 
@ 

<<weaving>>=
<<BASH shebang>>
# weaving and LaTeXing
<<BASH Environment Variables>>
<<tangling complementary LaTeX files>>
noweave -v -t4 -delay -x -filter 'elide "HIDE: *"' \
        $WORK/$nwfile.nw | cpif $DOCS/$nwfile.tex ;
# noweave -t4 -delay -index $WORK/$nwfile.nw > $DOCS/$nwfile.tex 
pushd $DOCS/ ;
#
latex $nwfile.tex ;
dvips $nwfile.dvi -o $nwfile.ps -t a4 ;
#
popd;
<<BASH script end>>
@ 

<<LaTeXing>>=
<<BASH shebang>>
# only LaTeXing
<<BASH Environment Variables>>
pushd $DOCS/ ;
#
echo "### RUNNING LaTeX on $nwfile.tex" 1>&2 ;
latex $nwfile.tex ; 
latex $nwfile.tex ; 
latex $nwfile.tex ;
dvips $nwfile.dvi -o $nwfile.ps -t a4 ;
#
# pdflatex $nwfile.tex ;
echo "### CONVERTING PS to PDF: $nwfile" 1>&2 ;
ps2pdf $nwfile.ps $nwfile.pdf ;
#
popd ;
<<BASH script end>>
@ %$

\subsctn{Defining working shell variables for the current project} % \\[-0.5ex]

<<BASH Environment Variables>>=
#
# Setting Global Variables
WORK="$HOME/development/projects/chr15q" ;
BIN="$ANALYSIS/bin" ;
PARAM="$BIN/param" ;
SRC="$WORK/src" ; # where to put the distributable files
DOCS="$WORK/docs" ;
DATA="$WORK/data" ;
TEST="$WORK/tests" ;
nwfile="chr15q" ;
export WORK BIN PARAM DOCS DATA nwfile ;
# Setting datasest Varaible
ANALYSIS="/projects/chr15q/" ;
export ANALYSIS;
# Allowing for users and group file permisions
umask 002;
@ 

<<tangling>>=
# 
# BASH Environment Variables
notangle -R'BASH Environment Variables' $WORK/$nwfile.nw | \
         cpif $WORK/.bash_VARS ; 
source $WORK/.bash_VARS ;
#
@

%
\end{document}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
