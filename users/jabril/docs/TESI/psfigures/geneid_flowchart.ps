%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: geneid.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips geneid.dvi -o geneid.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.10.08:0934
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro
%!
% PostScript prologue for pst-grad.tex.
% Version 97, 93/05/12
% For distribution, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.
%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).
%
% Syntax:
%   R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill

/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBlue ED
  /LastGreen ED
  /LastRed ED
  /FirstBlue ED
  /FirstGreen ED
  /FirstRed ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastRed FirstRed add 2 div
  LastGreen FirstGreen add 2 div
  LastBlue FirstBlue add 2 div
  setrgbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
    MidLine { GradientLoop } repeat
  } if
  MidLine NumLines lt
  {
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoop } repeat
  } if
} def
/GradientLoop {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Red Green Blue setrgbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Blue Blue BlueIncrement add def
  /Green Green GreenIncrement add def
  /Red Red RedIncrement add def
} def

end
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (geneid.dvi)
@start
%DVIPSBitmapFont: Fa cmbxti10 24.88 10
/Fa 10 118 df<F0FFF8051FEBFF8094B612E0040715F8041F03FE137F047F9239FF01FF
C04BB800877F030705CF7F4BDAE01F90B57E033FEC00034B01FC01008192B54880020302
E0804A4A804A5C4A91C87E4A496F5C4A5B91B55A49844C605B495C494A5D655B495C6249
91C95DA290B6FC4B5E4864A2485C624899C8FC5D5A6264485CA297B5FC48635DA2614863
5DA261B6615DA2616492C9FCA26152EB7F804A973801FFC01FE04F5D0A8014C0A34A4C5D
0A001480A35313006C606396B54A5AA26C5F4E4C5A6C4D5C6E4B5F6C4D167F4E5F6C6D92
B614FF6C4C606F01075E6C6E4901EF6D485B6C02F0017F01C74A5B6DD9FC03B500876D48
90C7FC6D90B6D8FE0391B5FC6D4C6C5D0107DCF0005D010104C0013F5C6D6C92C76C14E0
021F02FC02075C020302E0020091C8FC9126003FFEC9EA1FF86B606BDD7A>97
D<953807FFF095B6FC050F15E0057F15F80403B712FE040F82043F178093B912C00303DB
807F13E0030F9126F8000713F04B02C06D13F8037F91C8FC92B500FC16FC4A4A14034A02
E0140F4A4A4A13FE021F4A5C4A91C85A4A5B91B54892B5FCA2494A5C495C495C494D14FC
5E5B494A17F8A24991C86C14F090B618E07314C0484A701380741300484AEE0FFCF203C0
4896C8FC5D5AA3485CA35A5DA35A5DA3B6FC5DA492CDFCA55CA77E1CE0F301F0F303F86C
F207FCF30FFEF31FFF6C6D60636C4FB5FC6C4F13FE6F040F13FC6C6E043F13F86C96B512
F06F030314E06C6E030F14806D01FC92B612006D01FF02075C010FDAE001B612F86D91B8
12E06D198001004EC7FC023F17F8020F17C002014CC8FCDA003F15C0030102E0C9FC5860
6BDD6E>99 D<953807FFF04DB6FC051F15E094B712F8040716FE041F82047F17804BB912
C00307DB007F13E04B02F0010F13F0033F02C0010313F84B49C76C13FC4AB548804A02F0
16FE4A4A157F4A5C4A91C913FF4A49825C91B55A495C495C5B494A5E4C17FE5B495C1BFF
4991CA13FC90B65E5013F8484A5E5013F048614B4C13E04896B512C0070314804B031F14
004895B55A060F5C48040FB65A92B912E01B8050C7FC4819F81AC007FCC8FC19C04805C0
C9FC03C0CCFCA45DA2B6FCA292CDFCA65CA27EA51CE06CF201F0F303F8F307FC6C6DF00F
FEF31FFF6C62636C6E4CB5FC5013FE6C070F13FC6C6E043F13F86F93B512F06C6E030314
E06D6D030F14806D6D92B612006D01FF02075C6DDAE001B612F86D91B812E0010119806D
6C4DC7FC6E17F8020717C002014CC8FCDA003F15C0030102E0C9FC58606BDD6E>101
D[<EF01FCEF07FF051F13804D13C04D13E094B512F05E5E19F85EA25E19F0A319E0A270
14C0198070140060705B9338007FF0EF1FC094C8FCB3A8ED1FF892B5FC020714C04A14F0
023F14FC4A8049B7FC498249D9F07F7F491380490100805C494881495A4948814A90B5FC
5A485BA248495AA24813005D48485EA2003F5C495EA2007F5C495E5D6012FF495B007F94
C7FCEA3FC0C85A5F92B5FC5FA25C5FA25C5F5C5FA25C5F5C5FA25C94C8FCA25C5E91B5FC
4CEB03FCF00FFE4917FF4C5B19FE5B5E49163F4C14FCA249167F4C14F8A249EEFFF05E4D
13E0A24C4813C0A24D138019004B5B6D4B5A4D5A6D4B5A17FF6D4A5B040F5B6D90B65A6D
5E6E4AC7FC6E5C020F14F002035C020091C8FCED1FF8>64 146 113
271 73 105 D[<EFFFC0037FB512E091B712F05B5BA218E0A418C07F90C7121FA21880A2
5DA21800A25DA25FA292B5FCA25FA25CA25FA25CA25FA25CA25FA25CA25FA25CA25FA25C
A294C7FCA25CA25EA291B5FCA25EA25BA25EA25BA25EA25BA25EA25BA25EA25BA25EA25B
A293C8FCA25BA25DA290B5FCA25DA25AA25DA25AA25DA25AA25DA25AA25DA25AEE01FE92
388007FF18805A5E03001400A25A4C5A5CA2163FB55D5C5F167FA24A5C16FF5F6C5C5FA2
6C4A5B5D6C93C7FC6C6D5AED3FFE6C90B55A6C5D6C5D6C6C5C6D5C010F91C8FC01035B90
38003FF0>52 145 110 270 61 108 D<DA03FFEF7FFF021F01E00307B512F0027F01FC
033F14FE91B692B77E01036F010316E04903E0010F82496F013F16FC496F4982DAFE1F6D
48B5D8C03F7F49486C4A9038FC000FD97FF86E4801E06D8049486C6D4801806D8002E04B
48C7FC48DDBFFC6E8002C0EDFFF0486002804C8348604B92C8FC4801005D60A248485E4B
5C60485A604B4A5D127F4993C9FCA24B6000FF66495D127FD83FC090B55FC8645FA24A61
675FA24A619CC8FC5F644A63A24D93B5FC665C634D60A24A60665F634A6351EE1FE094C9
4BEB7FF021F84A4E16FF5414F05E6391B5505A21E04C5E535B4996B516C0654C501380A2
4951491300A24C4B4C5A745C49535A555A5E555A49734A5B53485B4C706D485B0C1F90C7
FC75147F4C7090B512FC755D6D91CA6C5D4B715D6D497115806D49063F49C8FC6D01E006
0F13F8DA3F80060013C07D6071DD86>110 D<DA03FFEE1FFF021F01E04AB512F0027F01
FC020F14FE91B6023F6E7E01036F90B712E049DBE0018249DBF00782496F4882DAFE1F6D
48D9F8037F90263FF80F027F903980007FFF017F6F4848C7001F138049486C90B5488002
E004F04A13C0484E147F02C04C91B512E0484E5B028093C75A484D5C4B4A5C4801005D63
495E001F5F5D4E4A14C048485EA24B711480007F1D004993C8FC755B4B715B48487313F0
4D6F5B007F746CC7FCD83FC090B594C8FCC8FC5FA25CA25FA25CA25FA25CA25FA25CA25F
A25CA25FA25CA294CDFCA25CA25EA291B5FCA25EA25BA25EA25BA25EA25BA25EA25BA25E
A35EA26D91CEFC5D6D5B6D5B6D13E0EC3F80636071DD68>114 D<943801FFFC053FEBFF
E04CB612FC040F15FF043F16C04C824BB812F84B83030FDA000F7F4B01F013014B01C06D
6C7E4B90C8001F13804C81DBFFF84B13C04A5F4A495D4C92B5FC4A5E4C5C5C614A5BA34A
1980A21C00824A705B706E5B705E709138007FE004FE031FC7FCDCFFC091C8FC17FEEFFF
F0F0FF806E16F019FC19FF6E17C01AF06E83866E836E836E846E84816F83030F83150315
00041F8216001707DD003F8018071800D91FC082D97FF88248486C160F487F486D824862
486E815AA24862A34F5BB6C9FC63A24A4C5B5C4F90C7FC4A5E6C495F02C04C5A4A16FF6C
48C9485B6D6C03075B6C6D031F5B6C01F0037F5B6C01FE0203B55A6CD9FFE0017F49C8FC
6C91B75A6C18F06D5F011F1780010704FCC9FC010016F0021F92CAFC020014C052606FDD
65>I[<177F933801FFC004077F4C7F4C7F5E4C7FA293B5FCA25DA260A25DA260A25DA260
A25DA260A25DA260A25DA295C8FCA25DA25FA292B5FCA25F001FBA12C05A4819E0A3BBFC
A21AC07E6C1980C7000702F0C8FC5FA25CA25FA25CA25FA25CA294C9FCA25CA25EA291B5
FCA25EA25BA25EA25BA25EA25BA25EA25BA25EA25BA25EA25BA293CAFCA25BF13FC04BED
FFE01AF090B55D1AE05D604819C0604B1680601A00485F4B4A5A61187F4E5A614B5B4D5B
6C4C5B4D5B4D90C7FC6C4C5A4D5A6D6D48485A6D02075BDBF83F5B6D90B65A6D5E6D4BC8
FC01015D6D15F0023F14C0020749C9FC020013F0>68 135 110 260
80 I<ED1FF892B57E020302E0EF03F8020F02F8EF1FFE023F6E4D7E4A6E4D7F91B794B5
FC49704B800107D9F07F6D5D03C06E4B8049130049486D7F4948494D5C494881495A6448
4964485B93B57E48494B5D9CC7FC48495AA24848624B62003F5F495B4E92B5FC007F6549
5B606300FF4A62495E007F5CD83FC093C85AC8635D5F6392B5615FA24A604D60A25C4D5D
665C5F634A98C8FC5FA2634A625FA298B5FC4A50EB07F894C9EE1FFC20FE50163F5314FC
5EA250167F4A5014F8A3F7FFF06E5F655413E0A262504B13C06E4D14C02080505D6E6D92
B615004F5E6E04075F7149161F6E6E013F6F485A6E6E9026FFFE7F4A5A6EDAF80701F86E
485A6F90B6486C90B5FC6F4C6C5D6F4C6C5D0307DC00035D6F03FC6D4AC7FCDB007F02F0
6D6C5B040F02C0020F13F0040001FCC800011380776071DD80>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmtt12 24.88 5
/Fb 5 111 df<060FB512F0063F80874E80A295B6FCA284A284A2180F95C7127FB3A6EE
1FFE4BB512E0030F14FC037F14FF4AB712C04A16F0020F16F84A16FC027F16FF91BAFC5B
5B49ECF801499138C0003F4991C7120F4901FC14034901F08090B5486E7E4B81485C4891
C97E4A824849825C48845C484982A24A825A4A177FA291CBFC5AA25BA312FF5BAD7F127F
A36D18FFA27E6E5EA2616C7FA26E5E6C6D5EA26C6D5E806C606E5E6C6D93B5FC6F5C6C6E
5C6D6D5C03F85C6D01FE143F6D6D6C90B6FC6DDAF00792B512F06D91BA12FC6D846D05FE
15FE6D6C16FC6E04F015FF6E16E0020704C015FE6E1600020003FC6D14FC033F02F07F03
0702806D14F09226003FF8CBFC607F79FD6A>100 D<933807FFC093B512FC0307ECFF80
033F15F092B712FC4A16FF0207834A17E0023F834A8391B97E498449DAFC00804902E001
0F804991C712034901FC02008049496F7F4901E0151F4B6F7F90B5486F7F4891C9FC4A82
4849707F485B737F485B4A177F87484983A2485B1C8091CB7EA25A5BA27413C0A212FF90
BCFCA91C801C006349CEFC127FA37F7EA280A26C7FA26EEF01FE6C4F7E6E4D13806C4F13
C0806C7F6E5F6C7F6C6E5E6F4C13806D6D93B5FC6D01F84B14006D6D5D6D01FF030F5B04
C0023F5B6D02F891B5FC6D9126FF800F5C010092B75A6E606E606E60020795C7FC6E17FC
02005F033F16E0030F1680030103FCC8FCDB001F14C0040101F8C9FC525C75DA6A>I<F3
0FFCDC1FFC92B512C00303B500E0010F14E0031F02FC013F14F8037F02FF90B612FC4AB7
00C115FE4A16E7020F93B8FC5C5C5C91BDFC49F1F87F49DAF007158049DA8000DAFE0013
FE4949C7003F01F8133F4B6EED1FFC4901F002076DEB0FF049496E6DEB01C099C7FC4949
6E7F4B8092C97E90B5844A82A24A82A248864A82A96E5E6C62A26E5EA26E5E6D96C8FC6F
92B5FC6F5C6D6D4A5BA26D6D4A5B6D01FC021F5B6F5C6D6D6C90B55ADCF0075C4991B75A
624995C9FC6161495F19E002FD5EDAF87F92CAFC031F14FC017F010314E09226001FFCCB
FC93CDFCA56D7EA280A2806D7F15E092B712F06DEFFFC06D18FCF2FFC06D19F04919FC49
19FF4986491AE090BC7E4887488703C0C8001F804849CA6C7F4801F8050F14804A170148
01C0716C13C01B1F48497213E091CC7E5B007F7413F04985A2498500FF1CF8A2491A7FA6
6D1AFFA26C6C4F13F0A26D616D616C6D4E13E06E606C6D4E13C002F895B5FC6C01FE0503
14806C6D6C040F14006C02E0043F5B03F893B5FCC6DAFF80020F14F86D02FE0103B65A6D
91B95A6D626D6201034FC7FC010019F86E60021F18C002034DC8FC020017F8030F168003
0003F8C9FC040349CAFC608B7ADA6A>103 D<163E923801FFC04B7F4B7F4B7FA34B7FA5
6F5BA36F5B6F5B6F5BDB003ECAFC93CBFCB30003B712E0000F824882835AA47EA27E7EC9
FCB3B3B3AB000FBA12FE003F851B80481AC0A2BCFCA27EA26C1A801B00000F614A7F70FE
6A>105 D<F01FFF000FB500F049B512F0003F6E010F14FE6F013F80486E90B712C00403
82B64982041F16FC6C5D4C826C92B9FC92BA7E000FEFF007C76C92C7FC05FC6E7F05F080
05C0804D8294C87E5E4C815E884C815EA25EA25EA393C9FCA35DB3B3A8000FB700F0017F
B71280003F04FC90B812E06048704817F0A2B918F8A26C04FE18F0A26C4C6C17E084000F
04F06D1680655A7ED96A>110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr10 10 13
/Fc 13 117 df<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC000787D90F
F0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48481507A248481503
A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A2123F7F
121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D903FE
EB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA41>71
D<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F4848133F48C712
1F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C
13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC007FED3F
F0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C15C06C140F
6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>
83 D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A
6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FE
A31401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F
8007C026277DA52A>97 D<EB03FC90381FFF8090387E03E03901F80070484813F83907E0
01FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14
067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB
07F81F277DA525>99 D<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038
F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E12
7FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381F
FE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D8
07E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127E
A2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03
E090381FFF80903803FC0020277EA525>I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA
03F012FFA312071203B3AA487EB512C0A312387EB717>105 D<EA03F012FFA3120F1203
B3B3AD487EB512C0A3123A7EB917>108 D<2703F00FF0EB1FE000FFD93FFCEB7FF8913A
F03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8
EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903
F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35B
B3A3486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F8
00F84848137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400
FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C
137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<EBFF03000313E738
0F80FF381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F8
6C7F00037FC67F01071380EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC
0F00B4131E38F3C07C38E1FFF038C03F801A277DA521>115 D<1318A51338A31378A313
F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E1300
6D5AEB0FFEEB01F81A347FB220>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr12 14.4 17
/Fd 17 122 df<EE03804C7EA34C7EA34C7EA34C7EA34C7EA24C7E16E7A203017F16C3A2
0303801681A2DB07017F82A2030E80177FA24B80173FA24B6D7EA20378800370130FA203
F0804B1307A20201814B7FA24A488183A24AC78083A2020E82187FA24A6F7E021FB7FC4A
82A30278C8EA1FFC0270150FA202F0824A1507A249488284A249488384A249CA7FA24984
010E177FA2011E84193F133E017F8448486C4C7E000F01E04B487EB500FE037FEBFFFEA4
4F557CD458>65 D<DC1FFC14060303B56C130E031F02F0131E037F14FC912801FFF801FE
133E0207903980001F80DA1FFCC73807C07EDA3FF0913803E0FEDAFFE0EC00F049018015
794990C9123D4948161F4948160F49481607495A494816034A160113FF484916004890CB
FC1A7E485AA24848183EA2121F49181EA2123F5B1A0E127FA397C7FC5B12FFAE127F6D4B
B612FEA4003F93C7003F13806D94380FFE001907121FA27F120FA26C7EA26C7EA26C7F6C
7F137F806D7E6D6C160F6D7E6D7E6D6C161F6D01C0153D6D6D157DDA3FF815F8DA1FFE91
3803F07E912607FFC090380FE03E020101FC90387F801E6E6CB538FE000E031F02F81306
030302E090C7FC9226001FFEC9FC4F567AD35C>71 D<B70107B612F8A4C66C48C80003EB
F0006D486F5B6D486F5BB3AD91B9FCA402F8C9FCB3B1496C4B7F496C4B7FB70107B612F8
A44D527BD158>I<ECFFC0010F13F8013F13FE9039FF00FF80D801F0EB3FE0D803C0EB0F
F0486C6D7E01F86D7E000F816D13016F7EA3707E6C5AEA01E0C9FCA6ED3FFF020FB5FC91
38FFFC7F01071300EB1FF0EB7FC04848C7FCEA03FC485A485A485A123F5B485A187012FF
90C8FCA216FFA35D6D14BF007F14036DEB073F6C6C90390F1FC0E06C6C131E6C6C90393C
0FE1C02707FE01F013FF0001B5486C13806C6C90398003FE00D907FCC712F834367BB43B
>97 D<17FF4BB5FCA4ED0007160182B3A6EC0FF8EC7FFF49B512E0903907FC03F090391F
E0007C49487F49C7120F01FE80484880485A000781484880A2485AA2485AA2127FA35B12
FFAB127FA27FA2123FA27F121FA26C6C5C00075D7F6C6C5C6C6C5C6C6C021E7F6D6C017C
13E0D91FC049EBFF8090390FF807E00103B512800100495ADA1FF091C7FC39547CD241>
100 D<EC0FF891B5FC010314C090390FF80FF090391FC003FC90397F8001FE49C77E4848
EC7F804848143F49EC1FC0485A000FED0FE05B001F16F01607485AA2007F16F8A25B1603
12FF90B7FCA30180C9FCA8127F7FA2123FA26D1538121F17786C6C1570000716F06D15E0
6C6C14016C6CEC03C06C6C15806D6C130F6D6CEB1F00D90FF0133C903907FE01F80101B5
12E06D6C1380DA07FCC7FC2D367DB434>I<157F913803FFE0020F13F091383FC0F89138
7F01FC903901FE03FE903803FC0714F81307EB0FF0A290391FE003FCED01F892C7FC495A
B3B612FEA426003FC0C7FCB3B3A580EBFFF0007FEBFFF8A427547DD324>I<EF1FC0DA3F
E0EBFFE0902701FFFC0313F001079039FF07E1F8903A1FE03FCF01903A3F800FFC03903A
7F0007F80101FE010314F04848903901FC004000036F1300491300000781A24980000F82
A8000793C7FC6D5CA200035D6D130100015D6C6C495A017F495A6E485A9039FFE03FC0D8
01C7B5C8FC01C113FC3903803FE091CAFCA57FA27F7F7F6CB612E016FF6C16C017F0013F
15FC8390B8FCD803F8C7001F1380D80FE0020113C04848EC007F4848ED1FE090C9120F12
7EEF07F012FE481603A56C1607007E17E0007F160F6C6CED1FC06C6CED3F806C6CED7F00
6C6C15FED803FCEC03FCC6B4EC0FF0D93FF0EBFFC0010FB6C7FC010114F8D9001F138035
4E7DB43B>I<1378EA01FE487E487FA66C90C7FC6C5AEA007890C8FCB0EB7F80B5FCA412
03C6FC137FB3B3A43801FFE0B61280A419507CCF21>105 D<EB7F80B5FCA41203C6FC13
7FB3B3B3B13801FFE0B612C0A41A537CD221>108 D<01FFD907FEEC03FFB590261FFFC0
010F13E0037F01F0013F13F8912701F80FFC9038FC07FE913D03C003FE01E001FF000390
260700019038038000C6010E6D6C48C76C7E6D48DA7F8E6E7E4A159CA24ADA3FF86E7E02
605D14E04A5DA34A5DB3AD2601FFE0DAFFF0EC7FF8B6D8C07F9026FFE03FB512F0A45C34
7CB363>I<01FFEB07FCB590383FFF8092B512E0913901F00FF8913903C007FC000349C6
6C7EC6010E13016D486D7E5C143002706E7E146014E05CA35CB3AD2601FFE0903801FFE0
B600C0B612C0A43A347CB341>I<EC0FFC91387FFF8049B512E0903907F807F890391FE0
01FE90393F80007F017EC7EA1F80496E7E48486E7E00038248486E7EA248486E7EA24848
6E7EA2003F82A24848ED7F80A400FF17C0AB007F1780A26D15FFA2003F1700A2001F5E6D
1401000F5E6D140300075E6C6C4A5A6C6C4A5AA2D8007FEC3F806D6C49C7FC90391FE001
FE903907F807F86DB55AD9007F1380DA0FFCC8FC32367CB43B>I<01FFEB1F80B5EB7FF0
913801FFF8913803E1FC91380783FE0003EB0F07C6131EEB7F1C1438143091387003FC91
386000F0160014E05CA45CB3AA8048487EB612F0A427347DB32E>114
D<D907FE13C090387FFF8148B512E33907F803FF390FC0007F4848133F48C7121F003E14
0F007E1407127C00FC1403A315017EA27E7F6C6C90C7FC13F013FF6C13F86CEBFF806C14
E06C14F86C14FEC680013F1480010714C0D9003F13E014039138007FF0151F00E0140FED
07F8A26C1403A215017EA36C15F0A26C14036C15E015076DEB0FC06DEB1F80D8FDF0EB3F
0039F8FC01FE39F07FFFF8D8E01F13E0D8C00390C7FC25367CB42E>I<EB01C0A71303A4
1307A3130FA2131FA2133F137F13FF5A5A001F90B512E0B7FCA326003FC0C7FCB3A71638
AC6E1378011F1470A26D6C13F016E0903807F801903903FC03C0903901FE07806DB51200
EC3FFCEC07F0254B7EC92E>I<B60103B51280A4000301F09039007FF800C601C0EC3FE0
017FED1F8095C7FC133F6E141E131F171C6E143C010F15388001075DA26E14F001035D80
01014A5AA26E13036D5D1580027F49C8FCA26F5A023F130E15E0021F5BA2EDF03C020F13
3815F802075BA2EDFCF002035B15FE6E6C5AA36E5BA26FC9FCA3153EA2151CA2153C1538
15781570A215F05D14015DA2003E495A127F486C48CAFCA2140E141E495A6C5B007C5B38
3F03E06CB45A00075BD801FCCBFC394B7EB23E>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmcsc10 20.74 8
/Fe 8 116 df<193F4F7EA34F7EA24E7FA34E7FA34E7FA34E7FA26086A24E7FA34E80F0
7E7FA206FE804E7EA20501814E7E05038118F08505078118E085050F814E7EA2051F814E
7E053F81A295C7FC4D82177E8605FE824D80A20401834D80A20403834D800407835F8604
0F834D80A2041F834D80A2043F8394C9FC4C84167E8704FE845E870301854C82A2030385
4C82A24BBA7EA24B85A34B850480C91201A2033F8593CBFCA24B86037E8403FE865D8802
01875D880203874B84A20207874B84020F87A24B84021F875D023F858A027F858102FF88
5B496D87010F01F84E80013F6D4E800003B66C053F14FEB700FC043FB812C0A67A7C78FB
8C>65 D<952601FFFC161C067FD9FFC0153C0507B600FC157C053F03FF15FC4CB812C004
0705F01301041FDAE00101FC1303047F01FCC7EA1FFE4BB500E0DA03FF13074B91C9EBC0
0F030F01FCEE3FE04B01F093380FF01F037F01C0933807F83F92B5CAEA01FC4A49943800
FE7F4A01F8F07FFF4A49844A4984023F49844C844A90CCFC4A4885494985495B49498549
1C7F5D49491A3F5B4B1A1F5B90B5CE120FA2485B1E075A5C481D035C5A1E01A2485BA348
1D005CA35A9CC8FCA35CA2B5FCB07EA28050B912C0A37EA28097C8EDC0006C0A0F49C7FC
89775B6C7FA36C7FA27E807EA26C7FA26D7F7F816D7F7F816D7F7F6D7F6D7F6E6C616E7F
82020F6D606E6D606E13FC6E6D606E6D6CEF7FBF6F6DEFFF1F031F01F0933801FE0F6F01
FC933807FC070303D9FF8092381FF8036F02F092387FF0016F6C01FE913903FFE000041F
D9FFF0017F0180137C040791B648C7123C040105F8141CDC003F04E091C8FC050793CBFC
DD007F14F8060149CCFC7A7E74F993>71 D<DDFFFC15E0041FD9FFC0130193B600F01303
030703FC1307031F15FF037FD9F003EBC00F4AB5C7383FE01F4A01F891380FF03F020F01
C0EC03FC4A90C9EAFE7FDA7FFEEE7FFFDAFFF8824949824949824949824949824990CA7E
494883495A1B7F495A4849183FA24849181F5A1B0F485BA24A18075AA25A91CC1203A25A
A398C7FC5B12FFAE127F7FA3F303E07EA2807EA26C1A07801CC06C7F1B0F6C1B806C7F1B
1F6C6D19006D6C601B3E6D6C187E6D6C606D7F6D6D4C5A6D6D4C5A6D6D4C5A6D6D4C5ADA
7FFEEE3F8091261FFF804BC7FC6E6DEC01FE020301F8EC07FC6E01FFEC3FF86E6C9039F0
01FFE0031F90B61280030793C8FC030015F8041F14C0040001FCC9FC535C77D966>99
D<BC12F0A5C602E0C86C7F011F4915074B15006D183F1A1F1A0F1A071A03A21A01871A00
A41B7CA5061F80A598C7FCA260A360A2601703171F92B7FCA5923880001F1703170084A2
84A384F303E0A3F307C0A395C8FCA31B0F1C80A31B1FA31B3F1C0063A26362A262F20FFE
1A1F49187F6FED03FF90B56C153FBCFCA263A3535879D760>101
D<B712FEA5C66CEBFC00011F13F06D5B6D5BB3B3B3B2497F497F017F13FCB712FEA52758
7AD734>105 D<B66C0603B6FC6F606F60A3C66E4E1400011F1CF8DABFF8183E010F64A2
DA9FFC60A2DA8FFE60A3DA87FF4D5AA202836D4C5AA302816D4C5AA202806D4C5AA36F6C
4C5AA26F6C163EA36F6C5EA26F6C5EA36F6C4B5AA26F6D4A5AA36F6D4A5AA26F6D4A5AA3
706C4AC7FCA2706C143EA3706C5CA2706C5CA3706C495AA2706D485AA2706D485AA3706D
485AA2716C48C8FCA394383FF83EA2716C5AA3716C5AA2716C5AA2497E715B497E715B49
6C4F7F3801FFFC000FD9FF806D49020F13FFB600F8050FB7FC72C7FCA3183E705878D781
>109 D<B66C0303B612E08181A281D8003F6DDB003FEBFE00010F060713F06F040113C0
6F705B8102BF72C7FC82029F6D163E028F7FA202877F02837F02817FA202807F6F7E6F7F
A26F7F6F7F81836F7F6F7F8183707E707F8284707F707FA2707F707F707FA2717E717F71
7FA2717F717F8385717F717F187F857213807213C0A27213E07213F07213F8A27213FC72
13FEF17FFFA27313BE7313FE85A2858585A2851A7F1A3F497E1A1F496C170FA2496C1707
2601FFFC1703000FD9FF801601B612F81A001B7E1B3E1B1C5B5879D76A>I<912607FF80
EB0380027F01F8130749B6130F010715C0011FEDF01F90263FFC00EBF83FD97FE090380F
FC7FD9FF80903803FEFF4848C8B5FC4848153F4848814848814848818348488183127F49
167FA2183F12FFA2181FA27FA26D160FA27FA26C6C93C7FC7F13FF6C13C014F014FF6C14
F06C14FF16F86CEDFF806C16F06C16FC6C826D6F7E6D826D82010782010182D9003F8102
0781DA003F801503DB003F14801601706C13C0171F050713E08383A27113F0187F127800
F8173FA3181FA27EA319E07EA26CEF3FC0A27FF07F807F6DEEFF006D4B5A01FC15036D4B
5A6D6C4A5A02E04A5AD91FFCEC7FE03CFE0FFFE003FFC0D8FC0390B6C7FC48C65D023F14
F848010714E0489026003FFEC8FC3C5C77D94F>115 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmtt12 14.4 2
/Ff 2 72 df<007FB812F0B9FC18F8A47EC690C81207A9EF03F0A294C7FCA9167EA216FF
A491B6FCA791C7FCA4167EA293C8FCB3A2007FEBFF80B67EA56C5C35497CC83E>70
D<DA03FE131E91391FFF803F027FEBE07F49B512F8496E5A4991B5FC5B49130390383FF8
00D97FE0133F49487F48497F91C7FC484880484880A2485A825B121F4980123F5BA3007F
167E4992C7FCA412FF90CBFCAA93B512F04B14F85D7F127F816F14F0040013007F123F5E
A27F121F7F000F5D7FA26C6C5CA26C6C5C6C7E6E5B6C6D5B6D6C5BD93FF890B5FC90381F
FE036DB7FC6D5C6D5C6D5C6D6C13E0021FEB807EDA03FCC8FC354B7CC93E>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmcsc10 14.4 5
/Fg 5 121 df<BB12FCA4C66C90C81203D91FFE9238003FFE010F1707190319001A7EA2
1A3E1A1EA286A486A506E0EB0380A497C7FCA31701A317031707170F177F91B7FCA44AC7
127F170F170717031701A31700A31B38A31B7095C8FCA41BF01BE0A31A01A3F203C0A21A
07A21A0F1A1F1A3FF27F801AFF1903011F171FD97FFF4BB5FCBCFC1B00A34D5279D159>
69 D<B500C0021FB5FC80A2C66D020113F06D6C9138007FC06EED3F80F01F00EB77FED9
73FF150E01717FA201707F6E7E143F816E7E6E7EA26E7E6E7E6E7FA26E7F6F7E6F7EA26F
7E6F7E6F7EA26F7E6F13806F13C0A2EE7FE0EE3FF0EE1FF8A2EE0FFCEE07FEEE03FFA270
138E7013CE177F18EEEF3FFE171FA2170F17071703A201F815011700486C167E487E260F
FF80153EB500F8151E180EA2403D7CBC49>110 D<ED3FF80203B57E021F14F091397FE0
0FFC9139FF0001FED903FE6D6C7ED907F8EC3FC0D91FF0EC1FF049486E7E49486E7E4948
6E7E91C8120148486F7E000318804848EE7FC0A24848EE3FE0A2001F18F049161F003F18
F8A3007F18FC49160FA300FF18FEAC6C6CEE1FFCA4003F18F86D163F001F18F0A36C6CEE
7FE0000718C06D16FF000318806C6C4B13006E5C6C5F6D6C4A5A6D6C4A5A6D6C4A5AD907
F8EC3FC0D903FEECFF80902701FF800390C7FC903A007FF01FFC021FB512F00203148091
26003FF8C8FC3F417ABE4C>I<D903FE130690391FFFE00E017FEBF81E3A01FE01FC3E3A
03F0003F7E4848EB0FFED80F801307001F140190C7FC003E1400007E157E127C163E12FC
161EA36C150EA27EA26D91C7FC6C7E13F013FC6CB47E14FC6CEBFFC06C14FC6C14FF6C15
C06C816C6C80011F80010380D9003F7F14039138003FFF03071380150181EE7FC0163FA2
00E0151FA2160FA37EA217807E161F6C16006C5D163E6C6C5C6D14FC6D495AD8FDFC495A
3AF87FC01FC0D8F01FB55AD8E00349C7FC39C0003FF02A417ABE37>115
D<007FB56C90B512F0A3000149C7003F13006C6C48EC1FFC013F16F06D4815C06E5D010F
93C7FC6D6C141E6E141C6D153C6D6D5B6D6D137017F06E6C485A6E6C485A03F85B021F13
076E6C48C8FCEDFE1E0207131C913803FF3C6E13F85E806F5A82153F6F7E6F7E151F824B
7E037B7F157103F07F4A487F913803C07F4B6C7E02076D7EDA0F007F021E130F021C6D7E
023C804A7F02706D7F02F06D7F495A49486E7E4A6E7E010782010F151F011F6F7E013F82
01FF8200034C1380000F6D4A13E0B500F091B6FCA3403D7CBC49>120
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmti12 14.4 21
/Fh 21 121 df<F001E01803851807A2180F181FA2183FA2187FA218FFA25F5F18DFEF07
9F85EF0F1F180F171E173E173C177C177817F0A2EE01E0160317C016071780DC0F007FA2
161E18075E167C16785EA24B5AA24B5A15075E150F93C7FC031E81A24B1403A25D92B7FC
A25CA2DA03C0C71203A24A5A140F92C8FC141E855C845C14F85C13015C495A13075C130F
131F133F017F84496C5D00076D030F7FB500FE0203B61280A24A5CA2495579D457>65
D<020FB912FCA25CA29126000FFEC712016F48EC001F1A0F030FEE03F8A24C1501A2151F
1A005EA2033F17F0A25EA2157FA24C1501A203FFDA07C013E019805EA24A030F90C7FC96
C8FC93C7FC605C183E5D187E020715FEEF07FC92B6FCA25C609238F8000F1703021F1401
605DA2143F605DA2027F0203141F4E131E5D1A3E02FF91C8123CA24B167C1A784918F862
92C91201A2494D5AA24A4C5AA20107170F624A161F193F010F4DC7FC614A4B5A1803011F
160FF07FFC017FED07FFBA5AA3614E5278D14F>69 D<020FB912F8A49126000FFEC71203
6F48EC003F1A0F030FEE07F0A24C1503A2151F1A015EA2033F17E0A25EA2157FA24C1503
A203FF17C0A24CEB0780A24A030F90C7FC96C8FC93C7FCA24A5D181E4B143EA20207157E
604B1301170F4AB6FCA260A291391FF8000FEF03F05D1701143F605DA2027F1403605DA2
02FF1407604B90CAFCA25BA292CCFCA25BA25CA21307A25CA2130FA25CA2131FA2EB7FFC
007FB67EB7FC93CBFCA24D5278D14C>I<DC07FCEB038093393FFF800793B500E0130003
03ECF80F923A0FF807FC1F923A3FC000FE3F4B48EB3F3E03FEC7EA1F7E4A48EC0FFE4A5A
4A486E5A4A5A18034A5A4A485DA24AC81201A24A5E5CA301015FA3180361A295C8FC80A2
8181816D13F815FF16E06E13FE6EEBFFC017F86E80020714FF6E81020081031F801501DB
003F7F16071600EF3FF8171FA2170FA21707A4D803C01503A217071207605BA2000F160F
60A24D5A487E4D5AA24DC8FC486C157E17FE6D4A5A6D4A5A007F4B5A01FE4A5AD87E7FEC
3FC0267C3FC0495A28F81FF803FEC9FC0107B55AD8F00114F0486C6C138048D907FCCAFC
415677D342>83 D<EC01FCEC07FF021FEBC0E091397F03E3F8903901FC01F3903903F800
FF4948137F49485C4948133F495A137F49C76C5A5B1201485A5F120749143F120F495D12
1F167F123F4992C7FCA25E127F495CA21501A248485CA21503EF03C016F890C7FC150717
076CDA0FF01380A2031F130F033F14006C6CEB7FE003FF5B001FD901F7131E9026C003E7
133E000F903907C3F03C2707E00F83137C3B03F03F01F8F83B01FFFC00FFF026007FF06D
5AD91FC0EB1F80323574B33C>97 D<EB03FEEA03FF485BA3EA00075C13031307A25CA213
0FA25CA2131FA25CA2133FA25CA2137FA291C8FCA25BA25BEC01FC0001EB0FFF4A13C090
39FC7E07E09138F803F03A03FFF001F802C013FCEC800091C712FE485AA249147F5B120F
5B4914FFA2121FA25BA2003F5CA25BA2007F5C16FE90C7FCA2150716FC12FEA2ED0FF8A2
16F0151F16E048143F6C15C0007EEC7F8016005D4A5A003E5C003F495A6C495A6D485A39
0FC03F806C6C48C7FC3803FFFCC613F0EB3F80285473D236>I<ED3FC0913801FFF8020F
13FE91383FE07F91397F001F80D901FE130FD903F8EB07C0494813034948131F4948133F
4948137F137F49C7FC485A17804848EC3F00000715084991C7FC120FA2485AA2123F5BA3
127F5BA4485AA5127FA2EE0180EE03C01607003FED0F80161FEE3F006C6C147E5E6C6CEB
03F06C6CEB0FE06C6CEB3F802701FE03FEC7FC39007FFFF8011F13E0D907FEC8FC2A3574
B336>I<EF07FCEE07FF4C13F8A3EE000F18F01707170FA218E0A2171FA218C0A2173FA2
1880A2177FA21800A25FA25FA21601A25FEC01FC913807FF03021F13C391397F03E3F890
3901FC01F3903903F800FF4948137F49485C4948133F495A137F49C76C5A5B1201485A5F
120749143F120F495D121F167F123F4992C7FCA25E127F495CA21501A248485CA21503EF
03C016F890C7FC150717076CDA0FF01380A2031F130F033F14006C6CEB7FE003FF5B001F
D901F7131E9026C003E7133E000F903907C3F03C2707E00F83137C3B03F03F01F8F83B01
FFFC00FFF026007FF06D5AD91FC0EB1F80365474D23C>I<ED7F80913807FFF0021F7F91
387F80FE903901FE003FD907F87F49481480D91FC0130F495A137F49C7FC485A485A0007
151F491500000F5D49147E001F15FE4B5A4848EB07F0ED7FE091387FFF8048B548C7FC15
E00280C8FC01C0C9FC12FF5BA590CAFCA66C1503EE0780160FEE1F006C6C5C167E001F5D
6D495A000FEC07E06C6CEB1FC06C6C017FC7FC3901FC07FC6CB512F0013F13C0D907FCC8
FC293573B336>I<ED07F0ED1FFC92397FFF0380913A01FC0F8FE0913907F007CF91390F
E003FF4A487EDA3F8014C04AC7FC14FE13014948EC7F80495AA2495A1800495A013F5DA2
4A5C137F160113FF4A5CA216035A91C75BA21607A2495D1203160FA25F6C5A161FA24C5A
167F6D14FF12004B5B017E5B017F5B6D5B90271F803E7FC7FC90380FC0FC6DB4485A0101
13E06D6CC65A91C7FC1501A25EA21503A25EA215075E150F001E5DD87F80131F5E00FF4A
5A4BC8FC15FE90380003FC48495AEC3FE0007FB51280001F49C9FC000313E0334C7AB336
>103 D<EC01E0EC03F0EC07F8140FA315F015E0EC038091C7FCB2EB07C0EB3FF0EB7FFC
EBF87C3801E07E3803C03E3807803F120F495A5A121E123E003C5B5C127CEA78015CEAF8
035C120013075CA2130F5CA2131F5C133F5CA2137F91C7FCA24913785BA2000114F84913
F01203EBF80115E0A2EC03C013F0EC0780140F15000001131EEBF87C6CB45AEB7FE0EB1F
801D5077CE24>105 D<ECFF8090B5FC15005AA2EA00016D5AA21301A25CA21303A25CA2
1307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C7FCA25BA25BA21201A25BA2
1203A25BA21207A25BA2120FA25BA2121FA25BA2123FA25BA2127F14781300A24813F85C
5AA213015C12FC13035C1307007E5B130F6C48C7FCEA1FFE6C5AEA03F0195475D21E>
108 D<013EDA1FE0EC7F80D9FFC0D9FFFC903803FFF048D9E0036D010F7F3F03E3F00FE0
7F803F81FE2907C1F81F001F90387C007ED80F81017EDAC1F8137F902601FCF890260FC3
E07F001FD9FDF0DAE7C080001E4A5D02FF15EF003E4A02FFC7FC003C4A5C92C75B5B007C
495D12784A5DD8F807031F157F4A4B92C7FC12004A5D010F033F5D634A5DA2011F037F14
01634A92C7FC1A03013F4B5DA24A4A140763017F1401080FEB078091C74915E0A2490203
031F130F09C01300494B143F515A00010307171EA2494B5E1B000003030F5F1CF8494B5E
97381F81E0F387C0494B6EB45A7448C7FCD801C06EC912F8593577B360>I<013EEC1FE0
D9FFC0EBFFFC48D9E0037F3C03E3F00FE07F803B07C1F81F001FD80F81017E80902601FC
F8130F001FD9FDF080001E5C14FF003E5C003C5C92C7FC5B007C5B12785CD8F807151F4A
5D12005C010F153F605CA2011F157F95C7FC5C5F013F5DA24A13015F137F0403EB01E091
C713F8A2490207130305F013C049140FEFE00700011880A249EE0F0017C00003171E183E
49163C706C5AEFE1F0496EB45A701380D801C0DA003EC7FC3B3577B342>I<ED3FC09138
01FFF8020F13FE91393FE07F8091397F001FC0D901FEEB0FE0D903F8EB07F0495A4948EB
03F8495A4948EB01FC137F49C713FE485AA2485A12075B120FA2485A1603123F5BA21607
007F16FC5BA2160F17F8485AA2EE1FF0A2EE3FE0007F16C0167F178016FF1700003F4A5A
4B5A5E6C6C495A4B5A6C6C495A6C6CEB7F806C6C01FEC7FC3901FE07F839007FFFE0011F
1380D907FCC8FC2F3574B33C>I<023E147F913AFFC003FFC0496D4813F0903B03E3F01F
81F8903B07C1F83E00FCD90F8101FC137E912601FDF0137F011FD9FFE07F011E4A14805E
133E013C91C7EA1FC05D1403017C5B017849143FA2EBF807A201005BA2020F157FA25DA2
021F15FF19805DA2023F5C19005DA2027F4A5AA292C75B17074A5D170F604D5A495E173F
6F495A95C7FC496D13FE4C5A9139FBE003F89139F9F00FE0903A07F8F81FC0DB7FFFC8FC
9138F03FFCED0FE0010F90CAFCA25CA2131FA25CA2133FA25CA2137FA291CBFCA25B5A00
7FEBFF80A2B6CAFCA23A4B7FB33C>I<013F14FF9026FFC00313C048D9E00F13F03B03E3
F03F01F83B07C1F87C007C018149137E3B0F01FDF001FE9138FFE003001E14C0A2003E91
388007FC003CEC000317F84948EB01E0007C92C7FC00785BA238F807F8A200005BA2130F
A25CA2131FA25CA2133FA25CA2137FA291C9FCA25BA25BA21201A25BA21203A25BA35BA2
EA01C02F3577B331>114 D<EC01FE91380FFFC0023F13F09138FE03F8903901F000FC49
48137C4948133E4948131E011F143E91C712FE1501133EA2137E16FCED00F8017F1400A2
808014FC90383FFFE015F86D13FE6D7F6D1480010114C06D6C13E014079138007FF0151F
150F15071503A2121FEA7F80A200FF15E0A390C7EA07C05A00F8EC0F80151F1600007C14
3E007E14FC6C495A391FE00FE00007B51280000149C7FC38003FF0273577B330>I<140F
4A7E143FA3147F92C7FCA35C5CA313015CA313035CA313075CA2007FB61280B7FC1600A2
26000FE0C7FC131F5CA3133F5CA3137F91C8FCA35B5BA312015BA312035BA312075BA300
0F143C5B157C1578121F4913F85D14014A5A01805B14074A5A92C7FC380FC03E5C3807E1
F86CB45A6C13C0D8007EC8FC214C75CA27>I<EB0FC0D93FF0EC03C0D97FFCEC07E0D9F0
7C140F3801E07E2603C03E141F2607803F15C0120F495A48163F001E1780123E003C5B4A
147F007C1700EA78015CD8F8035D4A5C120013074A13015F130F5C1603011F5D5CA21607
013F5D5CA2160F017FEDE00F91C7FCA2161FEFC01F181EA2043F133E047F133C17806D02
FF137C4B14786E4814F8011F903907CFC0F09139C00F8FC1903B0FF03F07E3E0903B03FF
FC03FFC06DD9F0011380903B003FC0007E00383577B33F>I<DA3F80137E913AFFE003FF
C00103D9F80713E0903B0FC0FC1F83F0903B1F007E3E00F8013ED93E7C13FC4990383F78
0349ECF80749EB1FF0484814E00003EE0FF849ECC007000717F049013FEB03C0000F4BC7
FC90C7FCA248147FA2C890C8FCA25D5DA314015DA314035DA314074BEB03C0A3020F1407
1880001E5CD83F80ED0F00007F131F00FF161E023F143E173CD9007F5CDA7BF013F800FC
01F3495A3B7C01E1F803E03B7E07C0FC0F80283FFF807FFFC7FC3A0FFE001FFCD803F8EB
07F036357AB336>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmtt12 20.74 5
/Fi 5 111 df<94380FFFFE4D6D7E5F4D80A4838383EF0001B3A2ED07FF037F13E00203
B512FC020F14FF023F15C14A15E149B712F94916FD4993B5FC5B4949C6FC4901E0131F49
0180130790B5C77E4801FC804A6E7E485B4849814A8148498191C9FC48834982A2485A84
5B127F5BA312FF5BAC7F127FA2607F123F607F001F5F7F606C7E6E5D6C6D5DA26C6D92B5
FC6E5C6C6D5C6C01FE140F6E5C6D01C0137F6DD9F803B712F86D90B600FD14FC6D04F914
FE6D04F114FF6D16E1010016816E1501021FDAFC0014FE020702F015FC020002C0013F13
F8DB1FFCCAFC506A7AE859>100 D<923807FFC0033F13FC4AB67E020715E0021F15F802
7F8191B8FC010383498349834949C6804901F0130F49018001037F90B5C87F02FC157F48
496F7E4849151F4A6F7E485B4A6F1380488391C914C0485A84484818E0A24982127FA249
18F0A200FF187FA290BAFCA71AE0A21A8001F0CCFCA2127FA37F123F7FA2121F6DEF0F80
6DEF3FE07E6EEE7FF06C7F6C6D16FF806C6D4B13E06C6D5D6E4B13C06D6C6C141F6D01E0
4A13806D01FC49B5FC6D9026FFC01F14006D91B65A6D5F6D5F6D6C5E6E16C0020F5E0203
4BC7FC020015F0031F14C0030101F8C8FC444D76CB59>I<F2FF80DB07FF020F13F0033F
01E0017F13FC4AB5D8FC01B57E0207DAFF0780021F15CF4A92B712805C49BBFC5B491807
DBFE0302F81400499026F0007F13C04901C0011F6E5A4B6DEC00FC4948C700036D90C7FC
4A80017F834A8049486F7EA24A153FA248844A151FA86E153F6C60A26E157FA26D6C4B5A
6E5C013F5F6E5C6D6C6C010F5B6F5B6D01F0017F5BDBFE03B5C9FC92B7FC495E604916F0
6060D97FE792CAFC02C114FCDAC03F13E0030790CBFC92CDFCA480A2806D7E80806DB712
E0F0FF806D17F06D17FE49717E013F18E04918F890BA7E488548854801FCC8003F804801
E00300800280161F4890CA00077F4917014848717F49187F4848851A3F49181F8712FF49
180FA66D181FA26C6C4E5A6D187FA2D83FFE4D485A6D5F6C6D4C5B6C01E0041F5B02F816
7F6C01FE4BB55A6CD9FFE0021F91C7FC6C02FF0103B55A6C92B75A013F18F06D60010718
8001014DC8FC6D6C16F8021F16E0020393C9FCDA007F14F8030149CAFC51747BCB59>
103 D<ED1F80ED7FE04B7E4A7FA24A7FA66E5BA26E5B6F5AED1F8092CAFCB00007B612E0
001F15F8A24881A47EA21207C8121FB3B3B2001FB912E04818F04818F819FCBAFCA27E19
F86C18F06C18E03E6A72E959>105 D<EF3FF8261FFFFC0103B57E4801FF011F14E04803
7F14F8B66CB67E038315FF038782159F6C02BF826C91B87E6CEEC01FD800039126FE0003
7F04F87F04E07F4C6E7E5E93C8123F5D4B824B151F5DA25DA25DA45DB3B3001FB600F090
B71280486F4816C0486F4816E0B76C4816F0A46C4B6C16E06C4B6C16C06C4B6C1680544B
7ECA59>110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr17 24.88 9
/Fj 9 118 df[<1AF04F7E4F7EA34F7EA34F7EA34F7FA34F7FA34F7FA396B57E19FB0601
8019F319F106038019E119E0060780611A7F060F804F7EA2061F814F7EA24E81063E7FA2
067E81067C7FA24E8186050182608605038260860507824E147FA2050F824E80A2051F83
95C87EA24D83053E81A24D838705FC835F870401845F870403845F870407844D167FA204
0F844D82A2041F8594CA7EA2043E8588047E85167C8804FC855E884BBB7EA34B86A3DB07
E0CB7F4C187FA2030F864C84A2031F8793CC7EA2033E8789037E87157C8903FC875D8902
01885D890203884B85A20207884B1A7FA2020F884B86A24ACE808A4A89A24A878C5C8A49
8A497F010F6D507F496D88017F6D083F7F0007B500FE4FB612C0B700C095B812F0A6>
132 146 123 273 143 65 D[<BCFC1BF8F3FF801CF01CFC1CFFD8001F0280C8000F14C0
010349CA6C13F06D49050F7F090313FE6D07007F0A3F7F0A0F13E0767F0A017F767F777E
777E0B0F7F777FA2777F777F777F787EA2787E787EA2787FA2787F8C8A8C8A8CA28A8CA2
797EA3797EA32180A28BA221C0A421E08BA621F0B321E0A66721C0A42180A267A22100A2
6768A2681FFFA268666866686668545BA25490C7FCA2545A545A545AA2535B535B535B53
5B5390C8FC535A535A52485A525B0A0F5B525B0A7F5B494F4848C9FC090F5B496D057F13
F0011F6D6C030FB512C0BECAFC1CFC1CF01C8009FCCBFC1B80>124
141 117 268 146 68 D[<B600FC060FB7FC8181A282A2D800076EDD003F14C001006E06
07EBFE000B0113F870725B02F7755A02F36D735A70735A14F102F07F7073C7FC8183816F
7F838183816F7F83816F7FA2707E8482707FA2707F8482707F84828482717E8583858371
7F8583717FA2717F8583727EA2727F8684727F86848684727F86848685737F8785737FA2
737F8785737FA2737F8786747F88868886747F88868886747F8887751380A27513C01DE0
877513F0A27513F81DFC877513FE1DFF881E8F887613CF1EEF881EFF8888A28888A289A2
8989A2496C86A289496C86497E496C86497F017F01E0850003B500FC86B712F08AA28A8A
A2>120 141 117 268 143 78 D<EE1FFE4BB512E0030F14FC033F14FF9226FFF00113C0
0203903980001FF0DA0FFEC7EA03F8DA1FF8EC00FE4A48157FDAFFE0ED1F8049496F7E49
496F7E4990C912034948707E4948707EA24948177C4948EE07FC01FF171F4A163F484E7E
484916FFA25A5C5AA291CAFC48725AA2F11FF04848715A96C8FCA2127FA35BA312FFAF12
7F7FA4123FA27FA27EA2806CF10780A26C6D170F1B007E6E5F6C191E806C6D173E017F60
6E17786D6C17F8011F606D6C16016D6D4B5A6D6D4B5A6D6D4B5A6D6D4BC7FC6E6C153EDA
1FFE15FC6E6C6C495A020301E0EB0FE0020001FCEB7FC0033FB6C8FC030F14FC030114E0
9226001FFEC9FC495E7ADB54>99 D<EE7FFC0307B512C0033F14F892B612FE02039039E0
1FFF804AD9000313E0DA1FFC01007FDA3FF0EC3FF84A486E7E4A48EC07FE4949814990C8
6C7F49486F7F49486F7F495A013F717E495A737E49488348181F5C48854A160F5A864890
CAFC85481A80A25B123FA37313C0127FA25BA312FF90BBFCA401FCCDFCAB127FA27FA312
3FA36C7EA36CF103C0807E1A076C6D1880A26C190F6E18006C616D6C171E6E173E013F60
6D6C17786D6C17F801074D5A6D6C4C5A6D6D4B5A6D6D4B5ADA7FF04BC7FC6E6C157EDA1F
FE5D912607FF80EB03F86E01E0EB1FF0020001FEEBFFC0033FB6C8FC030F14FC030114F0
DB001F90C9FC4A5E7BDB54>101 D<023F913801FFE00003B5021F13FEB6027FEBFFC04C
B612F0932607FC0113FC933A0FC0003FFE4CC7EA0FFF047E02037FC603F86E7F011F4948
826D4A806D49486F7E4B5A6D49C96C7EA2151E031C707E153C153815780370707E15F05D
A45DA45DB3B3B0496D4C7E496D4C7F013F01F893B512E0B700FE0103B712F8A65D5B79DA
6A>110 D<DC1FFC153C4BB512C0030F02F0147C033F14FC9239FFFC00FF020301E0D91F
8013FC020F0180EB07E04A48C76C7E4A48EC00F8DAFFF8ED7C014949153E4949151E4949
ED0F03494916834990C9EA07C3494816031AE749481601494817F7F100FF485B48197F5C
48193F5C5A5C48191FA291CBFC5AA35B127FA5485AAF127F7FA56C7EA37E80A27E806C19
3FA2806C197F6C7F1AFF6C7F616D6C5E6D6C17DF011FEF079F6E160F6D6DED1F1F6D6D15
3E6D6D157C6D6D15F86D6C6CEC01F06E6CEC07E06EB4EC0FC002076DEB7F8002019039F0
03FE006E6CB512F8031F14E0030391C7FC9238003FF893C9FCB3AB507E507E4FB512C006
07B712F0A65C837ADA64>113 D<DBFFF8EB01C0021F9038FF800391B612E00107EDF807
011F90390007FE0FD93FF0903800FF1FD9FF80EC3F9F4848C8EA0FFF4848814848814848
8149814848167F123F49163F181F127F90CA120FA25A1807A47F18037FA27F6C7E7F7F6C
6C93C7FC7F6C13C014F86C13FF6C14F8EDFFC06C15FEC6EDFFC06D15F86D15FE010F6F7E
6D16E0010182D9003F81020715FEDA007F8003031580ED003F040114C0DC003F13E0050F
13F0170300F07013F883187F6CEF3FFC181F180F19FE18077E1803A36C1701A37EA36D17
FCA26D1603A26D17F818076D17F06D160F19E06D161F01BEEE3FC0011FEE7F806EEDFF00
26FE0FE04A5A6D6CEC07FC26FC01FCEC3FF03CF800FFC003FFE0023FB6128048010F4AC7
FC020314F0489026003FFEC8FC3F5E7BDB4A>115 D<DA1F80177E0003B593380FFFFEB6
0303B5FCA6C6EF0003011FEF007F6D183F6D181FA26D180FB3B3AF1A1FA41A3FA31A7FA2
7F1AFF1AEF6F15011ACF6D1703F1078F6E6C83F10F0F6E6C031E80073C806E6C037814F8
6E6CDA01F0ECFFF86E6CEC03E06E6C6CEB0FC0020001F8EBFF806FB5EAFE00031F14F803
0302E0EDFE009226001FFEC701C0C7FC5D5D79DA6A>117 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Black Black Black Black Black -9 5620 a
 tx@Dict begin CP CP translate 0.9  0.9  scale NET  end
 -9 5620
a 1095 119 a
 tx@Dict begin tx@NodeDict begin {27.79782 15.63937 168.05386 84.02693
6.07922 } false /N@A 16 {InitRnode } NewNode end end
 1095 119 a 90 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  1.5 true 10.8 neg 15.63937
neg 157.25386 27.79782 .5 Frame  gsave gsave 0.60 0.38 0.00 0.00  setcmykcolor
currentrgbcolor grestore gsave 0.00 0.00 1.00 0.00  setcmykcolor currentrgbcolor
grestore 300 0.9 30. tx@GradientDict begin GradientFill end grestore
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end


@endspecial Fj(DNA)62 b(sequence)747 574 y Fi(geneid)21
5620 y @beginspecial @setspecial
 tx@Dict begin STP newpath 2.0 SLW 0  setgray  0.15 true 85.35823 113.81097
341.43292 597.50761 .5 Frame  gsave gsave 0.00 0.70 1.00 0.30  setcmykcolor
currentrgbcolor grestore gsave 0.00 0.00 1.00 0.00  setcmykcolor currentrgbcolor
grestore 300 0.9 30. tx@GradientDict begin GradientFill end grestore
gsave 2.0 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.0 SLW 0  setgray  0. true 113.81097 384.11203
312.98018 554.82849 .5 Frame  gsave 1.0 SLW 0  setgray 5.0 3.0 2 DashLine
 grestore end
 
@endspecial 1112 1279 a
 tx@Dict begin tx@NodeDict begin {20.79999 13.59999 163.86378 81.93188
3.59999 } false /N@B 16 {InitRnode } NewNode end end
 1112 1279 a 90 w
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.5 true 10.8 neg 13.59999
neg 153.06378 20.79999 .5 Frame  gsave gsave 0.00 0.00 1.00 0.00  setcmykcolor
currentrgbcolor grestore gsave 0.00 0.60 0.60 0.00  setcmykcolor currentrgbcolor
grestore 300 0.9 0. tx@GradientDict begin GradientFill end grestore
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial 159 w Fh(Signal)41
b(pr)-6 b(e)g(diction)1112 1763 y
 tx@Dict begin tx@NodeDict begin {20.64 10.8 163.86378 81.93188 4.92
} false /N@C 16 {InitRnode } NewNode end end
 1112 1763 a 90 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.5 true 10.8 neg 10.8
neg 153.06378 20.64 .5 Frame  gsave gsave 0.00 0.00 1.00 0.00  setcmykcolor
currentrgbcolor grestore gsave 0.00 0.60 0.60 0.00  setcmykcolor currentrgbcolor
grestore 300 0.9 0. tx@GradientDict begin GradientFill end grestore
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial 123 w Fh(Exon)41 b(c)-6 b(onstruction)1112
2224 y
 tx@Dict begin tx@NodeDict begin {20.79999 13.59999 163.86378 81.93188
3.59999 } false /N@D 16 {InitRnode } NewNode end end
 1112 2224 a 90 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.5 true 10.8 neg 13.59999
neg 153.06378 20.79999 .5 Frame  gsave gsave 0.00 0.00 1.00 0.00  setcmykcolor
currentrgbcolor grestore gsave 0.00 0.60 0.60 0.00  setcmykcolor currentrgbcolor
grestore 300 0.9 0. tx@GradientDict begin GradientFill end grestore
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
204 w Fh(Filtering)42 b(exons)1409 2944 y
 tx@Dict begin tx@NodeDict begin {20.63998 10.8 92.29765 46.14882 4.91998
} false /N@E 16 {InitRnode } NewNode end end
 1409 2944 a
90 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  1.5 true 10.8 neg 10.8
neg 81.49765 20.63998 .5 Frame  gsave gsave 0.60 0.38 0.00 0.00  setcmykcolor
currentrgbcolor grestore gsave 0.00 0.00 1.00 0.00  setcmykcolor currentrgbcolor
grestore 300 0.9 30. tx@GradientDict begin GradientFill end grestore
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial Fg(Ex)m(ons)d
Ff(GFF)21 5620 y @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0  setgray  0. true 113.81097 156.49008
312.98018 270.30106 .5 Frame  gsave 1.0 SLW 0  setgray 5.0 3.0 2 DashLine
 grestore end
 
@endspecial
958 3316 a Fe(GenAmic)1112 3641 y
 tx@Dict begin tx@NodeDict begin {20.64 13.59999 163.86378 81.93188
3.52 } false /N@F 16 {InitRnode } NewNode end end
 1112 3641 a 90 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.5 true 10.8 neg 13.59999
neg 153.06378 20.64 .5 Frame  gsave gsave 0.00 0.00 1.00 0.00  setcmykcolor
currentrgbcolor grestore gsave 0.00 0.60 0.60 0.00  setcmykcolor currentrgbcolor
grestore 300 0.9 0. tx@GradientDict begin GradientFill end grestore
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial 240 w Fh(Sorting)i(exons)1112
4114 y
 tx@Dict begin tx@NodeDict begin {20.79999 13.59999 163.86378 81.93188
3.59999 } false /N@G 16 {InitRnode } NewNode end end
 1112 4114 a 90 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.5 true 10.8 neg 13.59999
neg 153.06378 20.79999 .5 Frame  gsave gsave 0.00 0.00 1.00 0.00  setcmykcolor
currentrgbcolor grestore gsave 0.00 0.60 0.60 0.00  setcmykcolor currentrgbcolor
grestore 300 0.9 0. tx@GradientDict begin GradientFill end grestore
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
139 w Fh(Assembling)f(exons)1429 5324 y
 tx@Dict begin tx@NodeDict begin {50.89433 36.72202 87.61633 43.80817
7.08615 } false /N@H 16 {InitRnode } NewNode end end
 1429 5324 a 102
w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  63.00893 2 div 14.17232
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 10.0 add CLW 2 div add 0
360 arc closepath gsave gsave 0.00 0.00 0.00 0.40  setcmykcolor currentrgbcolor
grestore gsave 0.00 0.00 0.00 0.00  setcmykcolor currentrgbcolor grestore
300 0.9 30. tx@GradientDict begin GradientFill end grestore gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial Fe(Genes)1793
659 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@INI
16 {InitRnode } NewNode end end
 1793 659 a 1793 4675 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@END
16 {InitRnode } NewNode end end
 1793 4675 a 21 5620 a
 tx@Dict begin gsave STV newpath 2.6 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow 1.
 1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow  } def /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@A /N@INI InitNC { NCLine
 } if end gsave 2.6 SLW 0  setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1  setgray stroke grestore gsave ArrowBc ArrowB pop pop pop
pop grestore  grestore end
 21
5620 a 21 5620 a
 tx@Dict begin gsave STV newpath 2.6 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow 1.
 1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow  } def /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@B /N@C InitNC { NCLine
 } if end gsave 2.6 SLW 0  setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1  setgray stroke grestore gsave ArrowBc ArrowB pop pop pop
pop grestore  grestore end
 21 5620 a 21 5620 a
 tx@Dict begin gsave STV newpath 2.6 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow 1.
 1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow  } def /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@C /N@D InitNC { NCLine
 } if end gsave 2.6 SLW 0  setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1  setgray stroke grestore gsave ArrowBc ArrowB pop pop pop
pop grestore  grestore end
 21 5620 a 21 5620
a
 tx@Dict begin gsave STV newpath 2.6 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow 1.
 1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow  } def /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@D /N@E InitNC { NCLine
 } if end gsave 2.6 SLW 0  setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1  setgray stroke grestore gsave ArrowBc ArrowB pop pop pop
pop grestore  grestore end
 21 5620 a 21 5620 a
 tx@Dict begin gsave STV newpath 2.6 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow 1.
 1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow  } def /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@E /N@F InitNC { NCLine
 } if end gsave 2.6 SLW 0  setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1  setgray stroke grestore gsave ArrowBc ArrowB pop pop pop
pop grestore  grestore end
 21 5620 a 21 5620 a
 tx@Dict begin gsave STV newpath 2.6 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow 1.
 1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow  } def /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@F /N@G InitNC { NCLine
 } if end gsave 2.6 SLW 0  setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1  setgray stroke grestore gsave ArrowBc ArrowB pop pop pop
pop grestore  grestore end
 21 5620 a 21
5620 a
 tx@Dict begin gsave STV newpath 2.6 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow 1.
 1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow  } def /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@END /N@H InitNC { NCLine
 } if end gsave 2.6 SLW 0  setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1  setgray stroke grestore gsave ArrowBc ArrowB pop pop pop
pop grestore  grestore end
 21 5620 a 3201 3234 a
 tx@Dict begin tx@NodeDict begin {49.53116 26.6912 144.3534 72.1767
11.41998 } false /N@EVI 16 {InitRnode } NewNode end end
 3201 3234 a 363 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /Lineto /lineto load
def false pop .5 36.08835 2 mul 19.05559 2 mul 0 28.45274 11.41998
Diamond  gsave gsave 0.00 0.00 1.00 0.00  setcmykcolor currentrgbcolor
grestore gsave 0.60 0.00 0.60 0.00  setcmykcolor currentrgbcolor grestore
300 0.9 30. tx@GradientDict begin GradientFill end grestore gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial 3529 3127 a Fd(Annotated)3666
3234 y(Genes)1793 3139 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@EXONS
16 {InitRnode } NewNode end end
 1793 3139 a 21 5620 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale {1  setgray true} false /DS
1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@EVI /N@EXONS InitNC {
NCLine  } if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
 grestore end
 21 5620
a 3201 2030 a
 tx@Dict begin tx@NodeDict begin {53.97115 28.17119 144.3534 72.1767
12.89998 } false /N@SR 16 {InitRnode } NewNode end end
 3201 2030 a 363 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /Lineto /lineto load
def false pop .5 36.08835 2 mul 20.53558 2 mul 0 28.45274 12.89998
Diamond  gsave gsave 0.00 0.00 1.00 0.00  setcmykcolor currentrgbcolor
grestore gsave 0.60 0.00 0.60 0.00  setcmykcolor currentrgbcolor grestore
300 0.9 30. tx@GradientDict begin GradientFill end grestore gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore end


@endspecial 3543 1899 a Fd(Homology)3503 2030 y(information)1793
1923 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@SCORE
16 {InitRnode } NewNode end end
 1793 1923 a 21 5620 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale {1  setgray true} false /DS
1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@SR /N@SCORE InitNC { NCLine
 } if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 21 5620 a 2006 2578 a Fc(Statistical)28
b(mo)r(del)2191 4467 y(Gene)g(mo)r(del)509 -473 y Fb(geneid)79
b Fa(internal)86 b(structur)-12 b(e)-9 5620 y
 tx@Dict begin CP CP translate 1 0.9 div 1 0.9 div scale NET  end
 -9 5620
a Black Black Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
