#
# CVS FAQ ! : Advanced Topics : Internal errors :
#
# $Id: CVS_FAQ,v 1.1 2001-06-27 15:27:15 adminmonstre Exp $
#

################################################################################
# Login pserver answer: cannot open /root/.cvsignore: Permission denied
################################################################################

   Under the following conditions:

     - Running pserver as root
     - Using password authentication
     - User account used in $CVSROOT/CVSROOT/passwd exists

   The following message is received:

     cvs server: cannot open /root/.cvsignore: Permission denied
     cvs [server aborted]: can't chdir(/root): Permission denied

   Using root as account for the user in passwd works,
   but what is a true fix?
__________________________________________________ 4ljm3@qlink.queensu.ca

   This is an error i also encountered. The reason seems to be, that
   the $HOME environment variable is set when inetd starts the CVS
   pserver. My solutions is to use a proxy shellscript that unsets
   HOME and starts the appropriate cvs command.

   My shell script (/root/bin/cvspserver):

     ---snip snip snip---
     #!/bin/sh /usr/bin/cvs --allow-root=/usr/cvsroot -T /tmp pserver
     ---snip snip snip---
  
   Excerpt from inetd.conf (all in one line):

     ---snip snip snip---
     cvspserver stream tcp nowait root /root/bin/cvspserver cvs \
                --allow-root=/usr/cvsroot -T /tmp pserver
     ---snip snip snip---

   I hope that helps
__________________________________________________ marte@insol.at

   This happens when the inet deamon is restarted.  To get things back
   to normal:

   reboot the machine (the M$ answer to everything)  OR

   1) su to root,
      set your HOME variable to '/'
   2) execute path_to_init_scripts/inet stop
              path_to_init_scripts/inet start

   where path_to_init_scripts is the full path from the root to the
   init script which starts the internet daemon.  Note that your
   internet daemon may not be 'inet', for standard Debian Linux
   systems it is usually 'rinetd'.
   
   i.e. (for a standard RedHat Linux System)
   
        /bin/su -
        export HOME="/"
        /etc/rc.d/init.d/inet stop
        /etc/rc.d/init.d/inet start
__________________________________________________ xycard@clark.net

   The solution that worked for me on a RedHat 6.2 machine:

   Changed the inetd.conf file to contain a -f between
   -T (temp) and pserver as in the following example
   (split into 2 lines by myself for display purposes):

   cvspserver  stream  tcp  nowait  root /usr/local/bin/cvs cvs
   --allow-root=/usr/cvsroot  -T/tmp -f pserver

     su
     export HOME=""
     /etc/rc.d/init.d/inet stop;/etc/rc.d/init.d/inet start
     export HOME="/root"   

   The man page explains that -f skips the reading of .cvsrc.

   Why it works, I wish I had more of an explanation.
__________________________________________________ toddm@piperstudiosinc.com

   I also had this problem w/ RedHat 6.2 My solution:

    1. Get CVS source. After running Configure script,
       edit src/options.h and enable
       SETXID_SUPPORT. Compile and install
    2. Create a cvs group (e.g. "cvsg").
    3. Chgrp the cvs exec to "cvsg". Chmod the cvs 
       exec to SGID "cvsg" (chmod g+s cvs)
    4. Add root to cvsg. Change group access for all
       files in CVSROOT to "cvsg".

   I am not sure what the security implications are here, but as our
   CVS server is protected by a firewall, I am not terribly concerned.
__________________________________________________ jhowell@quantumbridge.com

   I was hit by this error-message, too. I think I found quite a good
   (and secure) solution for this problem : tcpserver

   tcpserver is a server like inetd which starts programs as requests
   on certain ports appear. You can find it on
   http://cr.yp.to/ucspi-tcp.html It's easy to install and sets the
   $HOME variable perfectly right. The bonus you get with this :
   tcpserver provides tcp-rules which are more effectiv than
   /etc/hosts.allow etc.

   Running cvs as server looks here like this :

   /usr/local/bin/tcpserver -x /etc/cvs-rules.cdb 0 cvspserver \
        /usr/local/bin/cvs --allow-root=/usr/local/cvs pserver

   Where the 0 specifies the host (localhost). -x /etc/cvs-rules.cdb
   specifies the rule-file which should be used for cvs.  It took me
   about 20 minutes to read the tcpserver-Doc, install it and set it
   ip properly. It's really great !

   Would be glad to hear comments on this.

__________________________________________________ christian@ping.de

   Using xinetd (RedHat/KRUD 7), you can use the "env" setting to set a
   variable, and "passenv" to tell what variables to pass on to the clients.
   If you want to clear the environment and then set HOME=/home/cvs, you can
   use something like this:

   service cvspserver
   {
           socket_type         = stream
           protocol            = tcp
           wait                = no
           user                = cvs
           server              = /usr/bin/cvs
           server_args         = --allow-root=/home/cvs -f pserver
           disable             = no
           env                 = HOME=/home/cvs
           passenv             =
   }

   Note that this runs as user "cvs", you may need to change that part
   depending on your setup.  The "-f" option didn't seem to get rid of
   the message, but I left it in place.
__________________________________________________ jafo-cvsbubbles@tummy.com

   This last solution works for me without the env spec (using RH 7.0)--i.e.,

   service cvspserver
   {
           socket_type         = stream
           protocol            = tcp
           wait                = no
           user                = cvs
           server              = /usr/bin/cvs
           server_args         = --allow-root=/home/cvs1 --allow-root=/home/cvs2 -f pserver
           disable             = no
           passenv             =
   }

   This way I can specify multiple cvs roots without creating any confusion about
   which value HOME should really have. Leaving out the -f flag for me creates
   problems in this configuration.
__________________________________________________ jdramsey@andrew.cmu.edu

   on the root directory do:  chmod a+rx root
__________________________________________________ austin-cvs@swinney.org

################################################################################