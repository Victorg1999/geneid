%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: GF004.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o GF004.ps GF004
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2000.06.08:1705
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (GF004.dvi)
@start
%DVIPSBitmapFont: Fa cmr17 17.28 13
/Fa 13 120 df<4AB4FC021F13F0027F13FC903901FF01FF903A03F8003F80D90FE0EB0F
E049486D7E49486D7E49C76C7E017E140049157E0001167F49810003178049151F000717
C049150F000F17E0A3001F17F0491507A2003F17F8A54848ED03FCA700FF17FEB3A8007F
17FCA56D1507A3003F17F8A4001F17F06D150FA2000F17E0A36C6CED1FC0A2000317806D
153F000117006D5D6C6C15FE017E5D017F14016D6C495A6D6C495A6D6C495AD903F8EB3F
806DB448B4C7FC9039007FFFFC021F13F0020190C8FC37607BDD42>48
D<1778A217F81601A216031607A2160F161FA2163FA2167F16FF16EF1501ED03CF168F15
07160F150E151E151C153C1578157015F015E0EC01C0140315801407EC0F00140E141E14
1C5C1478147014F0495A5C13035C49C7FC5B130E131E5B133813785B5B12015B1203485A
90C8FC5A121E121C123C12385A12F0BA12E0A4C9D80FF8C7FCB34C7EEE7FFF4AB712C0A4
3B5F7DDE42>52 D<BB12FCA4C601FCC8120FD93FF89238007FFE011F171F190719031900
A21A7E1A3EA21A1EA21A1F86A486A6F20380A318E0A297C7FCA61701A417031707170F17
1F17FF91B7FCA402F8C7FC171F170F170717031701A41700A895C9FCB3A580133F90B57E
B712E0A4496279E156>70 D<DDFFF015C0040F01FF1401047F14E00303B600F81303030F
9038E003FEDB3FFCC7007F1307DBFFE0EC0FC002030180913803E00F4A48C83801F01F4A
48ED0078DA3FF0EE3C3F4A48161E4A48EE0F7F4949EE07FF4990CA7E495A494883494883
5C013F197F4948183F495A1B1F485B1B0F4890CCFCA248481907A2485A1B03121F5BA212
3F1B015BA2127F98C8FCA35B12FFB06C7EA24EB712E0A3123F95C7000FEBF0006D06015B
64001F857FA2120F7F1207A26C7EA26C7FA26C7FA26D7E6D7E131F806D7E6D6C5F6D7E6D
6D5E6D7F6E6CEE07BFDA3FF8EE0F3FDA0FFCEE1F1F6EB4163E6E01C0EDFC0F020001F091
3801F807DB3FFEEC0FE092260FFFF09038FF8003030390B538FE0001DB007F02F8130004
0F02C091C7FC040001F8CAFC5B667AE368>I<EC03FE91381FFFE091B512F8903901FE03
FE903A07F0007F8049486D7ED93FC06D7E49C76C7E496E7E491403484881484814010007
82491400000F8283485A1880123F49153FA2007F17C0A35BA212FF90B8FCA30180CAFCA9
127F7FA3123FA27F121FEF01C06C7E17036C6C1680A26C6C15070001EE0F006D150E6C6C
151E6D6C5C6D6C5C6D6C5CD907F0EB03E0D903FC495A902700FF803FC7FC91383FFFFC02
0F13F00201138032417CBF3A>101 D<F03F80DA03FC903801FFE091273FFFC00713F091
B539F01FC1F8903B03FC03FC3E03903A07F000FE784948EB7FE04948EB3FC04948011FEB
01F049C76C6CC7FC01FE6E7EA248486E7EA2000382A2491401000782AA00035E6D1403A2
00015EA26C6C4A5AA2017F4A5A6D6C495A6D6C495A496C49C8FCD937F013FE903973FC03
FC0160B512F0D9E03F13C0DA03FCC9FC4848CBFCA57FA27FA27F6C7E13FF91B512FE6DEC
FFF06D15FE6D6F7E6D16E084013F16FC01FEC700017FD803F8EC001FD807E0ED03FF4848
030013804848167F003FEF3FC090CA121F127EF00FE012FE481707A66C170F007E18C0A2
007F171F6C6CEE3F806C6CEE7F00000F177ED807F04B5A6C6C4B5A6C6C4B5AD8007FED1F
C0D93FE0ECFF80D90FFED90FFEC7FC0101B612F0D9003F1480020101F0C8FC3D5E7DBF42
>103 D<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FE0923803FFFC030F13FFDB
3F0013C00378EB1FE04B6D7EDAC1C06D7EDAC3808002C7C7120302CE81170114DC14D802
F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0A442647DE349>I<D903C0
D9FFC0EC07FED807FF010301F891381FFFC0B5010F01FE027F13F0923D3F00FF8001F807
FC0378903B3FC003C001FEDAC1E090261FE00FC77E0001D9C3C090260FF01E6E7ED8007F
49902607F81C6E7E02C7C75CD93FCE6E6C486E7E02CC166002DC16E002D85E02F8DA01FF
6F7E4A5EA24A93C8FCA44A5DB3B3496C4A6C4B7E496C4A6D4A7EB6D8F007B6D8803FB512
FCA4663F7CBE6F>109 D<D903C0EB7FE0D807FF903803FFFCB5010F13FFDB3F0013C003
78EB1FE04B6D7E0001D9C1C06D7E27007FC3808002C7C71203D93FCE81170114DC14D802
F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0A4423F7DBE49>I<EDFF80
020F13F8023F13FE9139FF007F80D903FCEB1FE0D907F0EB07F0D90FC0EB01F8D93F80EB
00FE49C8127F017E81496F7E48486F7E00038349150700078348486F7EA2001F83491501
A2003F83A348486F7EA400FF1880AC007F1800A26D5DA2003F5FA36C6C4B5AA36C6C4B5A
00075FA26C6C4B5A6C6C4B5AA26C6C4B5A017F4BC7FC6D6C14FE6D6C495AD90FF0EB07F8
D903FCEB1FE0D900FFEB7F806EB5C8FC020F13F8020113C039417CBF42>I<9039078003
F8D807FFEB0FFFB5013F13C092387C0FE0913881F01F9238E03FF00001EB838039007F87
00148FEB3F8E029CEB1FE0EE0FC00298EB030002B890C7FCA214B014F0A25CA55CB3B049
7EEBFFF8B612FCA42C3F7CBE33>114 D<1438A71478A414F8A31301A31303A21307130F
131FA2137F13FF1203000F90B6FCB8FCA3260007F8C8FCB3AE17E0AE6D6CEB01C0A31603
6D6C148016076D6C14006E6C5A91383FC01E91381FF07C6EB45A020313E09138007F802B
597FD733>116 D<B6D8801FB500E090B512F8A4000301F0C7D87FFCC7001F1380C601C0
DA3FF0913807FE00051F6F5A017F030F6F5A64133F05075E6E81011F030F5EA26E6F1403
010F031F5E171D6E6F14070107033D93C7FC17386E6F5C01030378150EEF707F6E70131E
010103F0151CEFE03F6E70133C6D02011638EFC01F03806F1378027F01031670EF800F03
C06F13F0023F01075EEF000703E0EDF801021F495E040E130303F0EDFC03020F011E5E04
1C130103F8EDFE070207013C93C8FC0438130003FC6F5A02030178150E0470147F03FE16
9E020101F0159C4C143F03FF16FC6E5F4C141FA2037F5E4C140FA2033F5E93C81207A26F
5E031E1503030E5E5D3F7FBD60>119 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 1195 -323 a Fa(GF004)43 b(gro)l(wth)g(hormone)-12
1995 y @beginspecial 0 @llx 120 @lly 595 @urx 822 @ury
2211 @rwi @clip @setspecial
%%BeginDocument: GF004.8.ps
%!PS-Adobe-3.0
%%Title: 
%%Creator: aplot
%%Version: v1.9
%%CreationDate: 2000/06/07 10:32:11
%%For: rguigo
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 0 0 595 842
%%EndComments
%
%    Author : Josep Francesc ABRIL FERRANDO
%    e-mail :        jabril@imim.es
%
% ------------------------------------------------------------------------
%                     PostScript Output from GFF2APLOT
% ------------------------------------------------------------------------
%
%         Converting GFF files for an alignment to PostScript.
%
%          Copyright (C) 1999 - Josep Francesc ABRIL FERRANDO  
%                                       Thomas WIEHE                   
%                                      Roderic GUIGO SERRA       
%
%    This program is free software; you can redistribute it and/or modify
%    it under the terms of the GNU General Public License as published by
%    the Free Software Foundation; either version 2 of the License, or
%    (at your option) any later version.
%
%    This program is distributed in the hope that it will be useful,
%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%    GNU General Public License for more details.
%
%    You should have received a copy of the GNU General Public License
%    along with this program; if not, write to the Free Software
%    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%
% ------------------------------------------------------------------------
%
%
%%BeginProlog
%
%%BeginProcSet: ShortNames 1.0 0
/tflg false def % test flag
/bdf { bind def } bind def
/xdf { exch def } bdf
/cm { 28.35 mul } bdf
/ivcm { 28.35 div } bdf
/in { 72    mul } bdf
%%EndProcSet:   ShortNames 1.0 0
%
%%BeginProcSet: Constants 1.0 0
% Printing Offset
/VUpOS 0.25 cm def  % offset defines non printable
/VDnOS 0.25 cm def  % paper area for pages (printer outlimits).
/HLtOS 0.25 cm def
/HRtOS 0.25 cm def
% /pgA4 { 595 842 } def
% Fixed Color Variables (CMYK)
/black                { 0.00 0.00 0.00 1.00 } def
/verydarkgrey         { 0.00 0.00 0.00 0.80 } def
/darkgrey             { 0.00 0.00 0.00 0.60 } def
/grey                 { 0.00 0.00 0.00 0.40 } def
/lightgrey            { 0.00 0.00 0.00 0.20 } def
/verylightgrey        { 0.00 0.00 0.00 0.10 } def
/white                { 0.00 0.00 0.00 0.00 } def
/verydarkmagenta      { 0.00 1.00 0.00 0.30 } def
/darkmagenta          { 0.00 0.80 0.00 0.05 } def
/magenta              { 0.00 0.60 0.00 0.00 } def
/lightmagenta         { 0.00 0.40 0.00 0.00 } def
/verylightmagenta     { 0.00 0.20 0.00 0.00 } def
/verydarkviolet       { 0.45 0.85 0.00 0.00 } def
/darkviolet           { 0.30 0.65 0.00 0.00 } def
/violet               { 0.22 0.55 0.00 0.00 } def
/lightviolet          { 0.15 0.40 0.00 0.00 } def
/verylightviolet      { 0.10 0.20 0.00 0.00 } def
/verydarkblue         { 1.00 1.00 0.00 0.20 } def
/darkblue             { 0.90 0.90 0.00 0.00 } def
/blue                 { 0.75 0.75 0.00 0.00 } def
/lightblue            { 0.50 0.50 0.00 0.00 } def
/verylightblue        { 0.30 0.30 0.00 0.00 } def
/verydarkskyblue      { 0.90 0.50 0.00 0.15 } def
/darkskyblue          { 0.75 0.45 0.00 0.00 } def
/skyblue              { 0.60 0.38 0.00 0.00 } def
/lightskyblue         { 0.45 0.25 0.00 0.00 } def
/verylightskyblue     { 0.30 0.15 0.00 0.00 } def
/verydarkcyan         { 1.00 0.00 0.00 0.10 } def
/darkcyan             { 0.80 0.00 0.00 0.00 } def
/cyan                 { 0.60 0.00 0.00 0.00 } def
/lightcyan            { 0.40 0.00 0.00 0.00 } def
/verylightcyan        { 0.20 0.00 0.00 0.00 } def
/verydarkseagreen     { 0.75 0.00 0.45 0.00 } def
/darkseagreen         { 0.62 0.00 0.38 0.00 } def
/seagreen             { 0.50 0.00 0.30 0.00 } def
/lightseagreen        { 0.38 0.00 0.22 0.00 } def
/verylightseagreen    { 0.25 0.00 0.15 0.00 } def
/verydarkgreen        { 1.00 0.00 1.00 0.25 } def
/darkgreen            { 0.80 0.00 0.80 0.00 } def
/green                { 0.60 0.00 0.60 0.00 } def
/lightgreen           { 0.40 0.00 0.40 0.00 } def
/verylightgreen       { 0.20 0.00 0.20 0.00 } def
/verydarklimegreen    { 0.50 0.00 1.00 0.10 } def
/darklimegreen        { 0.40 0.00 0.95 0.00 } def
/limegreen            { 0.30 0.00 0.80 0.00 } def
/lightlimegreen       { 0.20 0.00 0.65 0.00 } def
/verylightlimegreen   { 0.10 0.00 0.50 0.00 } def
/verydarkyellow       { 0.00 0.00 1.00 0.25 } def
/darkyellow           { 0.00 0.00 1.00 0.10 } def
/yellow               { 0.00 0.00 1.00 0.00 } def
/lightyellow          { 0.00 0.00 0.50 0.00 } def
/verylightyellow      { 0.00 0.00 0.25 0.00 } def
/verydarkorange       { 0.00 0.50 0.80 0.10 } def
/darkorange           { 0.00 0.40 0.80 0.00 } def
/orange               { 0.00 0.30 0.80 0.00 } def
/lightorange          { 0.00 0.20 0.75 0.00 } def
/verylightorange      { 0.00 0.15 0.70 0.00 } def
/verydarkred          { 0.00 1.00 1.00 0.15 } def
/darkred              { 0.00 0.80 0.80 0.00 } def
/red                  { 0.00 0.60 0.60 0.00 } def
/lightred             { 0.00 0.40 0.40 0.00 } def
/verylightred         { 0.00 0.20 0.20 0.00 } def
/verydarkbrown        { 0.35 0.85 1.00 0.40 } def
/darkbrown            { 0.30 0.70 1.00 0.35 } def
/brown                { 0.25 0.75 1.00 0.25 } def
/lightbrown           { 0.20 0.60 0.70 0.15 } def
/verylightbrown       { 0.15 0.45 0.55 0.00 } def
/htag   0 def
/Xmarg  5.0 cm def       % Starting Point (upper left corner)
/Ymarg  842 2 cm sub def
/Y Ymarg def
/PlotWidth  14 cm def    % Blocks Size
/Spacer   1.00 cm def    % BBox relative to dotplot
/BBoxX  PlotWidth def    % SBox relative to percent box
/BBoxY   14.00 cm def    % XBox relative to extra box
/SBoxX  PlotWidth def
/SBoxY    2.25 cm def
/XBoxX  PlotWidth def
/XBoxY    3.00 cm def
/WBox     0.50 cm def    % TagBox Size
/HWBox WBox 2 div    def
/Warw  WBox 0.75 mul def
/HWarw Warw 2 div    def
%  Paper Sizes  (in points)
/pagedict 34 dict def pagedict begin % 32+2 sizes defined
/pg10x14        {  720 1008 } def
/pga0           { 2384 3370 } def
/pga10          {   73  105 } def
/pga1           { 1684 2384 } def
/pga2           { 1190 1684 } def
/pga3           {  842 1190 } def
/pga4           {  595  842 } def
/pga5           {  420  595 } def
/pga6           {  297  420 } def
/pga7           {  210  297 } def
/pga8           {  148  210 } def
/pga9           {  105  148 } def
/pgb0           { 2920 4127 } def
/pgb10          {   91  127 } def
/pgb1           { 2064 2920 } def
/pgb2           { 1460 2064 } def
/pgb3           { 1032 1460 } def
/pgb4           {  729 1032 } def
/pgb5           {  516  729 } def
/pgb6           {  363  516 } def
/pgb7           {  258  363 } def
/pgb8           {  181  258 } def
/pgb9           {  127  181 } def
/pgexecutive    {  540  720 } def
/pgfolio        {  612  936 } def
/pglegal        {  612 1008 } def
/pgletter       {  612  792 } def
/pgquarto       {  610  780 } def
/pgstatement    {  396  612 } def
/pgtabloid      {  792 1224 } def
/pguserdefined  {  595 2384 } def
end % pagedict
%%EndProcSet:   Constants 1.0 0
/flglscape false def
/flgcrd true def
%% page size in points used for plot % pgA4 == 595  842
/Dpage { pagedict begin pga4 flglscape { exch } if end } bdf
% margins (1 cm) (Up Down Left Right - margins are XY independent)
/UpM 1 cm def
/DnM 1 cm def
/LtM 1 cm def
/RtM 1 cm def
%
% Defining background-color for objects.
/BGcolor { white } def
/FGcolor { black } def
/BBoxcol { white } def
/SBoxcol { white } def
/XBoxcol { white } def
/BBXtickflg 1 def  % Blocks TickFlags
/SBXtickflg 1 def  % 0:no tickscale
/XBXtickflg 1 def  % 1:put tickscale
/BBYtickflg 1 def
/SBYtickflg 1 def
/XBYtickflg 1 def
/ShowTicks 1 def
/axesp  1 def % axesp 0 => Y==X : 1 => X=14 Y=14
/ZoomON 0 def % 0 Switch off zoom-marks - 1 Switch on zoom-marks
/GridON 0 def % 0 Switch off grid - 1 Switch on grid
/tickmx -1 def   % tickmarks
/tickmn -1 def
/maxtck 2 def
/mintck 5 def
/pctmxt 5 def
/pctmnt 5 def
/xtrmxt 2 def
/xtrmnt 5 def
/SBoxLab ( ) def
/XBoxLab ( ) def
/SBoxSLab ( ) def
/XBoxSLab ( ) def
%
/FTXangle 0 def
/GPXangle 0 def
/FTYangle 0 def
/GPYangle 0 def
/FTLbsc  1 def
/GPLbsc  1 def
/MxFtLBL 0 def
/MxGpLBL 5 def
/putExon  1 def
/putExLbl 1 def
/putGnLbl 1 def
%%EndProcSet:   Setting_Vars 1.0 0
%
/TitleFont    { 24 /Times-Bold  } def
/SubTtFont    { 16 /Times-Roman } def
/ElmFont      { 12 FTLbsc mul /Times-Roman } def
/TagFont      { 14 GPLbsc mul /Times-Roman } def
/TagLabelFont { 16 /Times-Bold  } def
/TickFont     { 10 /Helvetica } def
%
/xBDspl  1.8 putExon add putExLbl add putGnLbl add def % 1.25
/xGLDspl 1.0 putExon add putExLbl add def              % 0.85
/xGDspl  0.75 putExon add putExLbl add def
/FBDspl 0.60 def % For example, for mRNA.
%
/vertical   { /htag 0 def } bdf
/horizontal { /htag 1 def } bdf
%
/FSF 4 def % Point size for Credits for A4
/CSF { pagedict begin pga4 pop end Dpage pop exch div mul } bdf
% End of user-defined variables...
%
%%BeginProcSet: Page_Layout 1.0 0
% checking if margins are within the defined offset
flglscape {
 UpM HLtOS lt { /UpM HLtOS def } if % Checking margins for flglscape mode
 DnM HRtOS lt { /DnM HRtOS def } if
 LtM VDnOS lt { /LtM VDnOS def } if
 RtM VUpOS lt { /RtM VUpOS def } if
 } {
  UpM VUpOS lt { /UpM VUpOS def } if % Checking margins for portrait mode
  DnM VDnOS lt { /DnM VDnOS def } if
  LtM HLtOS lt { /LtM HLtOS def } if
  RtM HRtOS lt { /RtM HRtOS def } if
  } ifelse
% defining pagelimits and X - Y scales (Xlim Ylim)
/pglim { Dpage pop LtM RtM add sub Dpage exch pop UpM DnM add sub } def
% Defining starting point on page.
/XORI LtM def
/YORI UpM def
%%EndProcSet:   Page_Layout 1.0 0
%
%%BeginProcSet: functions 1.0 0
/F { scale } bdf
/T { translate } bdf
/S { gsave } bdf
/R { grestore } bdf
/m { moveto } bdf
/rm { rmoveto } bdf
/l { lineto } bdf
/rl { rlineto } bdf
/K { stroke } bdf
/scmyk { setcmykcolor } bdf
/slw { setlinewidth } bdf
/bbox { 4 copy 3 1 roll exch 6 2 roll 8 -2 roll m l l l closepath } bdf
/dotted { [ 1 ] 0 setdash } def
%%EndProcSet:   functions 1.0 0
%
%%BeginProcSet: text_functions 1.0 0
/sfont { findfont exch scalefont setfont } bdf
/tshow { S scmyk sfont m rotate show R } bdf
/ctshow { 10 -1 roll dup 11 1 roll 7 -2 roll 2 copy 9 2 roll S sfont stringwidth pop R 2 div htag 1 eq { 9 -1 roll exch sub 8 1 roll } { 8 -1 roll exch sub 7 1 roll } ifelse tshow } bdf
/ltshow { 10 -1 roll dup 11 1 roll 7 -2 roll 2 copy 9 2 roll S sfont stringwidth pop R htag 1 eq { 9 -1 roll exch sub 8 1 roll } { 8 -1 roll exch sub 7 1 roll } ifelse tshow } bdf
%
% X Y angle string valign halign fnt color ttxt
 % valign : tv (top)  cv (middle) bv (bottom)
 % halign : lh (left) ch (center) rh (right)
/chrh { S newpath 0 0 m false charpath flattenpath pathbbox exch pop 3 -1 roll pop R } bdf
/strh { 2 dict begin /lly 0.0 def /ury 0.0 def { ( ) dup 0 4 -1 roll put chrh dup ury gt { /ury xdf } { pop } ifelse dup lly lt { /lly xdf } { pop } ifelse } forall ury end } bdf
/ttxt { S scmyk sfont 8 dict begin /h xdf /v xdf /lbl xdf /angle xdf /y xdf /x xdf /hs lbl stringwidth pop neg def /vs lbl strh neg def x y T angle rotate h (rh) eq { hs } { h (ch) eq { hs 2 div } { 0 } ifelse } ifelse v (tv) eq { vs } { v (cv) eq { vs 2 div } { 0 } ifelse } ifelse m lbl show end R } bdf
%
/Title { S 0 Xmarg Y TitleFont FGcolor tshow R /Y Y 0.75 cm sub def } bdf 
/SubTitle { S 0 Xmarg Y SubTtFont FGcolor tshow R /Y Y 2.5 cm sub def } bdf 
%%EndProcSet:   text_functions 1.0 0
%
%%BeginProcSet: aplotdict 1.0 0
/aplot 120 dict def aplot begin
/min { 2 copy gt { exch } if pop } bdf 
/max { 2 copy lt { exch } if pop } bdf
/Xscm { Xscale mul } bdf /Xscme { Xscm exch } bdf
/Yscm { Yscale mul } bdf /Yscme { Yscm exch } bdf
/fmt { Yscme Xscme m } bdf /flt { Yscme Xscme l } bdf
/line { scmyk slw m l K } bdf
/uline { scmyk slw m S htag 1 eq { 0 -0.1 cm } { 0.1 cm 0 } ifelse rl K R l S htag 1 eq { 0 -0.1 cm } { 0.1 cm 0 } ifelse rl K R K } bdf
/ZoomTicks { /zmdict 3 dict def zmdict begin /r { TxWB BDspl mul Xscm } def /s { TyWB BDspl mul Yscm } def /corner { S 10 -2 roll m 2 { rl S BGcolor scmyk .4 slw K R rl S FGcolor scmyk 2 slw [1 3] 0 setdash K R } repeat R } def 4 copy 3 1 roll exch 0 s 0 s neg r neg 0 r 0 corner 0 s neg 0 s r 0 r neg 0 corner 0 s neg 0 s r neg 0 r 0 corner 0 s 0 s neg r 0 r neg 0 corner end } def
/Line { S 9 5 roll 2 { Yscm 4 1 roll Xscm 4 1 roll } repeat 9 4 roll line R } bdf
/Xline { S 3 1 roll Xscme Xscme 3 -1 roll Yscm xwdt sub dup 3 1 roll xwdt 9 -4 roll line R } bdf
/Bline { S htag 1 eq { Xscme Xscme y0 Yscme y1 Yscm bbox } { Yscme Yscme X0 Xscm 3 1 roll X1 Xscme bbox } ifelse S scmyk fill R scmyk slw K R } bdf
/Bsquare { S Yscme Yscme 4 2 roll Xscme Xscme 4 1 roll exch bbox S scmyk fill R scmyk slw K R } bdf
/Msquare { S Yscme Yscme 4 2 roll Xscme Xscme 4 1 roll exch bbox scmyk slw K R } bdf
/Mcircle { S Yscme Xscme 3 -1 roll Xscm 0 360 arc closepath scmyk slw K R } bdf
/Join { S 2 copy 2 copy pop sub 2 div add exch htag 1 eq { y1 TyWB add dup dup TyWB 0.75 mul add 4 1 roll 5 1 roll } { X0 TxWB sub dup dup TxWB 0.75 mul sub 5 1 roll 6 1 roll exch } ifelse 3 { Yscme Xscme 6 2 roll } repeat m l l 0.25 slw scmyk K R } bdf
/Arrow { /acol [ 9 -4 roll ] def /acolor { acol aload pop } def S 1 eq { exch /sn { 1 mul } def } { /sn { 1 neg mul } def } ifelse htag 1 eq { Xscm dup y1 Yscm HWBox add m HWarw sn HWarw rl 0 Warw neg rl HWarw neg sn HWarw rl closepath S acolor scmyk fill R y1 Yscm HWBox add m Xscm y1 Yscm HWBox add l acolor scmyk 1 slw K } { Yscm dup X0 Xscm HWBox sub exch m HWarw neg HWarw sn rl Warw 0 rl HWarw neg HWarw neg sn rl closepath S acolor scmyk fill R X0 Xscm HWBox sub exch m Yscm X0 Xscm HWBox sub exch l acolor scmyk 1 slw K } ifelse R } bdf
/FBox { htag 1 eq { Xscme Xscme y1 Yscme y1 TyWB FBDspl mul add Yscm bbox } { Yscme Yscme X0 Xscm 3 1 roll X0 TxWB FBDspl mul sub Xscme bbox } ifelse S scmyk fill R FGcolor scmyk 1 slw K } bdf
/FTalgn { htag 1 eq { FTXangle 0 eq { (bv) (ch) } { (cv) (lh) } ifelse } { FTYangle 0 eq { (cv) (rh) } { (bv) (rh) } ifelse } ifelse } bdf
/GPalgn { htag 1 eq { GPXangle 0 eq { (bv) (ch) } { (cv) (lh) } ifelse } { GPYangle 0 eq { (cv) (rh) } { (bv) (rh) } ifelse } ifelse } bdf
/Box { 2 copy 2 copy pop sub 2 div add 7 1 roll S htag 1 eq { Xscme Xscme y1 Yscme y1 TyWB add Yscm bbox } { Yscme Yscme X0 Xscm 3 1 roll X0 TxWB sub Xscme bbox } ifelse S scmyk fill R FGcolor scmyk 1 slw K htag 1 eq { Xscm y1 TyWB 1.75 mul add Yscm FTXangle } { Yscm X0 TxWB 1.75 mul sub Xscme FTYangle } ifelse 6 -1 roll FTalgn 8 -2 roll FGcolor ttxt R } bdf
%
/GDmore { MxFtLBL S ElmFont sfont (M) stringwidth pop R mul htag 1 eq { FTXangle sin } { FTYangle cos } ifelse abs mul ivcm add } bdf
/BDmore { MxGpLBL S TagFont sfont (M) stringwidth pop R mul htag 1 eq { GPXangle sin } { GPYangle cos } ifelse abs mul ivcm add } bdf
%
/GnBanner{ S 1 eq { 2 copy htag 1 eq { Xscme Xscme y1 TyWB GDspl mul add dup Yscme Yscm 3 1 roll } { Yscme Yscme X0 TxWB GDspl mul sub dup Xscme Xscme 4 1 roll exch } ifelse 0.5 FGcolor uline } if 2 copy pop sub 2 div add htag 1 eq { Xscm y1 TyWB GLDspl mul add Yscm GPXangle } { Yscm X0 TxWB GLDspl mul sub Xscme GPYangle } ifelse 6 -1 roll GPalgn 8 -2 roll FGcolor ttxt R } bdf
/SbBanner { S htag 1 eq { 0 X0 X1 X0 sub 2 div add Xscm y1 TyWB GDspl mul add Yscm } { 90 X0 TxWB GDspl mul sub Xscm y0 y1 y0 sub 2 div add Yscm } ifelse 5 -2 roll FGcolor ctshow R } bdf
/Banner { S htag 1 eq { 0 X0 X1 X0 sub 2 div add Xscm y1 TyWB BDspl mul add Yscm } { 90 X0 TxWB BDspl mul sub Xscm y0 y1 y0 sub 2 div add Yscm } ifelse 5 -2 roll FGcolor ctshow R } bdf
%
% mxt mnt xp yp ori end htick
/tckdict 15 dict def tckdict begin /mkmxt { dup 0 lt { neg } if dup 10 lt { 10 mul log round 10 exch exp cvi } { log round 10 exch exp cvi } ifelse } def /nwmod { dup 1 le { 100 mul cvi exch 100 mul cvi exch mod 100 div } { exch dup 1 le { 100 mul cvi exch 100 mul cvi mod 100 div } { cvi exch cvi mod } ifelse } ifelse } def /isltone { dup 1 lt { 100 mul cvi 100 div } if } def end
/htick { S tckdict begin horizontal /yp exch Yscm def /xp exch Xscm def /xend xdf /xori xdf /nmnt exch cvi def /nmxt exch cvi def /mxt exch dup 0 lt { pop xend xori sub mkmxt } if def /mnt exch dup 0 lt { pop mxt nmnt div } if def /lori xori dup mnt nwmod sub mnt add def /lend xend dup mnt nwmod sub mnt sub def xp yp T lori mnt lend { isltone dup dup xori gt exch xend lt and { dup Xscm 0 m dup dup Xscme mxt nwmod 0 eq { 7.5 } { 4 } ifelse neg l 1 slw FGcolor scmyk K GridON 1 eq { S 0 y0 Yscm neg T dup Xscm dup y0 Yscm m y1 Yscm l 0.1 slw verylightgrey scmyk K R } if dup mxt nwmod 0 eq { dup xend mnt sub exch ge { dup dup 1 ge { cvi } if 10 string cvs 0 3 -1 roll Xscm -18 TickFont FGcolor ctshow } if } { pop } ifelse } if } for xori Xscm dup 0 m 7.5 neg l 2 slw FGcolor scmyk K xori 10 string cvs 0 xori Xscm ZoomON 1 eq { 4 sub } if -18 TickFont FGcolor ZoomON 0 eq { ctshow } { ltshow } ifelse xend Xscm dup 0 m 7.5 neg l 2 slw FGcolor scmyk K xend 10 string cvs 0 xend Xscm ZoomON 1 eq { 4 add } if -18 TickFont FGcolor ZoomON 0 eq { ctshow } { tshow } ifelse end R } def
/vtick { S tckdict begin vertical /yp exch Yscm def /xp exch Xscm def /xend xdf /xori xdf /nmnt exch cvi def /nmxt exch cvi def /mxt exch dup 0 lt { pop xend xori sub mkmxt } if def /mnt exch dup 0 lt { pop mxt nmnt div } if def /lori xori dup mnt nwmod sub mnt add def /lend xend dup mnt nwmod sub mnt sub def xp yp T lori mnt lend { isltone dup dup xori gt exch xend lt and { dup Yscm 0 exch m dup dup Yscme mxt nwmod 0 eq { 7.5 } { 4 } ifelse exch l 1 slw FGcolor scmyk K GridON 1 eq { S X0 Xscm 0 T dup Yscm dup X0 neg Xscme m X1 neg Xscme l 0.1 slw verylightgrey scmyk K R } if dup 0 eq { S dup dup X0 Xscme Yscm m X1 neg Xscme Yscm l 0.1 slw FGcolor scmyk K R } if dup mxt nwmod 0 eq { dup xend mnt sub exch ge { dup dup 1 ge { cvi } if 10 string cvs 0 10 4 -1 roll Yscm 2.5 sub TickFont FGcolor tshow } if } { pop } ifelse } if } for 7.5 xori Yscm dup 0 exch m l 2 slw FGcolor scmyk K xori 10 string cvs 0 10 xori Yscm ZoomON 0 eq { 2.5 sub } { 2.5 add } ifelse TickFont FGcolor tshow 7.5 xend Yscm dup 0 exch m l 2 slw FGcolor scmyk K xend 10 string cvs 0 10 xend Yscm ZoomON 0 eq { 2.5 sub } { 2.5 add } ifelse TickFont FGcolor tshow end R } def
/nucltick { tickmn tickmx maxtck mintck X0 X1 0 y0 htick } def
/pctmarks { S y0 10 y1 { Yscm dup X0 Xscm X1 Xscm 3 1 roll 4 1 roll 0.5 FGcolor line } for R } bdf
%
/beginfunct { R S 3 dict begin /maxx exch ceiling def /minx exch floor def /Yscale XBoxY maxx minx sub div def minx 0 lt { 0 minx neg Yscm T } if S XBYtickflg 1 eq { -1 -1 xtrmxt xtrmnt minx maxx X1 0 vtick S X0 Xscm 0 m X1 Xscm 0 l dotted FGcolor scmyk K R } if R } def /endfunct { end R } def
end % aplot dict
%%EndProcSet:   aplotdict 1.0 0
%
%%BeginProcSet: main_function_calls 1.0 0
%
/s_credits { S 1 dict begin /fs_cd FSF def pagedict begin pga4 pop end 1 cm sub DnM T 0 0 0 (This plot has been obtained using GFF2APLOT. The most recent version of GFF2APLOT is freely available at \042http:\/\/www1.imim.es/\176jabril/\042. Copyright      1999 by Josep F. ABRIL, Thomas WIEHE & Roderic GUIGO) (cv) (rh) fs_cd /Times-Roman FGcolor ttxt S fs_cd /Times-Roman sfont (   1999 by Josep F. ABRIL, Thomas WIEHE & Roderic GUIGO) stringwidth pop neg R 0 0 (\343) (cv) (ch) fs_cd /Symbol FGcolor ttxt end R } bdf
%
/estlbl { S 3 dict begin /lbl xdf /ypos xdf /xpos xdf horizontal 0 Xlwdt 4 div neg T lbl 0 xpos Xscm ypos Yscm 5 /Helvetica black ctshow vertical end R } bdf
%
/GsclonX { /Y exch Y Spacer sub exch sub def Xmarg Y T axesp 0 eq { /Xscale { BBoxX X1 X0 sub Y1 Y0 sub max div } def } { /Xscale { BBoxX X1 X0 sub div } def } ifelse } bdf
%
% DOTPLOT BOX
/begindata { aplot begin S /y1 Y1 def /y0 Y0 def BBoxY GsclonX axesp 0 eq { /Yscale Xscale def } { /Yscale { BBoxY y1 y0 sub div } def } ifelse /TxWB { WBox Xscale div } def /TyWB { WBox Yscale div } def /GDspl { xGDspl GDmore } def /GLDspl { xGLDspl GDmore } def /BDspl { xBDspl GDmore BDmore } def X0 Xscm neg y0 Yscm neg T S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox BBoxcol scmyk fill R S X0 Xscm y0 Yscm X1 Xscm y1 Yscm ZoomON 1 eq { 4 copy ZoomTicks } if bbox 2 slw FGcolor scmyk K R S BBXtickflg 1 eq { nucltick /Spacer 1 cm def } { /Spacer 0.5 cm def } ifelse BBYtickflg 1 eq { tickmn tickmx maxtck mintck y0 y1 X1 0 vtick } if R newpath } def /enddata { R /GDspl xGDspl def /GLDspl xGLDspl def /BDspl xBDspl def end } def
%
% PERCENT BOX
/beginmatches { aplot begin /ZoomON 0 def S /y1 xdf /y0 xdf SBoxY GsclonX /Yscale SBoxY y1 y0 sub div def X0 Xscm neg y0 Yscm neg T S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox S S SBoxcol scmyk fill R S SBoxLab TagLabelFont Banner SBoxSLab TagFont SbBanner SBXtickflg 1 eq { nucltick /Spacer 1 cm def } { /Spacer 0.5 cm def } ifelse R S SBYtickflg 1 eq { -1 -1 pctmxt pctmnt y0 y1 X1 0 vtick } if R S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox 2 slw FGcolor scmyk K R R clip newpath } def /endmatches { R R end } def
%
% EXTRA BOX
/beginextra { aplot begin S /nlines xdf /y0 0 def XBoxY GsclonX /Yscale XBoxY nlines 1 add div def /Xlwdt Yscale 0.75 mul def /xwdt Yscale 2 div def /y1 XBoxY Yscale div def X0 Xscm neg 0 T S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox S XBoxcol scmyk fill R S XBoxLab TagLabelFont Banner XBoxSLab TagFont SbBanner XBXtickflg 1 eq { nucltick } if R newpath } def /endextra { /Yscale XBoxY nlines 1 add div def X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox 2 slw FGcolor scmyk K R  R end } def
%
%%EndProcSet:   main_function_calls 1.0 0
%
%%EndProlog
%
%%BeginSetup
%
% initgraphics
% true setpacking
true setstrokeadjust
0.125 setlinewidth
0 setlinejoin
0 setlinecap
%
%%EndSetup
%
%%Page: 1 1
%%BeginPageSetup
%
% Saving current page settings
/pgsave save def
% Setting BGcolor for sheet 
Dpage 0 0 bbox S BGcolor scmyk fill R clip newpath
% Setting page-size scale
1 CSF dup F
%%EndPageSetup
%
%
% New BLOCK ---> LABELS
%
% (label) Title
(MusMusculus x RattusNorvegicus) Title
% (label) SubTitle
( ) SubTitle
%
% New BLOCK ---> APLOT
%
% xori xend yori yend
/X0 1 def
/X1 2026 def
/Y0 1 def
/Y1 1488 def
%
begindata
%
horizontal
%
% lwidth lcolor bcol ori end Bline
% x0 y0 x1 y1 lwidth lcolor Line
0.25 lightgrey lightgrey 51 60 Bline
0.25 lightgrey lightgrey 246 406 Bline
0.25 lightgrey lightgrey 1125 1241 Bline
0.25 lightgrey lightgrey 1401 1562 Bline
0.25 lightgrey lightgrey 1776 1976 Bline
% tag definitions: Box,Join,Arrow,Banner
% (label) ElmFont bcol ori end Box
% color ori end dir Arrow % dir: 0=left 1=rigth
% jcol ori end Join
() ElmFont red 51 60 Box
() ElmFont red 246 406 Box
() ElmFont red 1125 1241 Box
() ElmFont red 1401 1562 Box
() ElmFont red 1776 1976 Box
black 60 246 Join
black 406 1125 Join
black 1241 1401 Join
black 1562 1776 Join
% (label) TagFont ori end GnBanner
(gene1) TagFont 51 1976 1 GnBanner
% (label) TagLabelFont Banner
(RNGROW3.PE1) TagLabelFont Banner 
%
vertical
%
% lwidth lcolor bcol ori end Bline
% x0 y0 x1 y1 lwidth lcolor Line
0.25 lightgrey lightgrey 51 60 Bline
0.25 lightgrey lightgrey 244 404 Bline
0.25 lightgrey lightgrey 593 709 Bline
0.25 lightgrey lightgrey 878 1039 Bline
0.25 lightgrey lightgrey 1238 1438 Bline
%%
% tag definitions: Box,Join,Arrow,Banner
% (label) ElmFont bcol ori end Box
% color ori end dir Arrow % dir: 0=left 1=rigth
% jcol ori end Join
() ElmFont red 51 60 Box
() ElmFont red 244 404 Box
() ElmFont red 593 709 Box
() ElmFont red 878 1039 Box
() ElmFont red 1238 1438 Box
black 60 244 Join
black 404 593 Join
black 709 878 Join
black 1039 1238 Join
% (label) TagFont ori end GnBanner
(gene1) TagFont 51 1438 1 GnBanner
% (label) TagLabelFont Banner
(MMGHGPRO.PE1) TagLabelFont Banner 
%
% Extra Features: Nice Band Lines Finishing for Seq1lines, Bsquare
%
% lwidth lcolor bcolor Hori Hend Vori Vend Bsquare
%
%
% DATA ---> Alignment...
%
1761 1223 2003 1465 2 black Line
236 234 463 461 2 black Line
25 25 96 96 2 black Line
96 97 185 186 2 black Line
2006 1467 2026 1487 2 black Line
1281 749 1084 552 2 red Line
1573 1050 1388 865 2 red Line
1387 854 1286 753 2 red Line
1758 1213 1681 1136 2 red Line
21 20 4 3 2 red Line
1672 1123 1631 1082 2 red Line
%
%
% Plot - Remarks...
%
%
enddata
%
%
% New BLOCK ---> MATCHES
%
% xpct ypct
 0 200 beginmatches
%
horizontal
% lwidth lcolor bcol ori end Bline
% x0 y0 x1 y1 lwidth lcolor Line
0.25 lightgrey lightgrey 51 60 Bline
0.25 lightgrey lightgrey 246 406 Bline
0.25 lightgrey lightgrey 1125 1241 Bline
0.25 lightgrey lightgrey 1401 1562 Bline
0.25 lightgrey lightgrey 1776 1976 Bline
%
vertical
%
pctmarks
%
%
% DATA ---> Alignment...
%
1761 387 2003 387 2 black Line
236 332 463 332 2 black Line
25 131 96 131 2 black Line
96 91 185 91 2 black Line
2006 34 2026 34 2 black Line
1281 326 1084 326 2 black Line
1573 306 1388 306 2 black Line
1387 134 1286 134 2 black Line
1758 67 1681 67 2 black Line
21 37 4 37 2 black Line
1672 37 1631 37 2 black Line
%
endmatches
%
%
flgcrd { s_credits } if
grestoreall
pgsave restore
showpage
%
% PageEND: 1 1
%
%%Trailer
%
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 0 0 595 842
%%EOF

%%EndDocument
 @endspecial 1942 w @beginspecial 0 @llx 120 @lly 595
@urx 822 @ury 2211 @rwi @clip @setspecial
%%BeginDocument: GF004.4.ps
%!PS-Adobe-3.0
%%Title: 
%%Creator: aplot
%%Version: v1.9
%%CreationDate: 2000/06/07 10:32:08
%%For: rguigo
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 0 0 595 842
%%EndComments
%
%    Author : Josep Francesc ABRIL FERRANDO
%    e-mail :        jabril@imim.es
%
% ------------------------------------------------------------------------
%                     PostScript Output from GFF2APLOT
% ------------------------------------------------------------------------
%
%         Converting GFF files for an alignment to PostScript.
%
%          Copyright (C) 1999 - Josep Francesc ABRIL FERRANDO  
%                                       Thomas WIEHE                   
%                                      Roderic GUIGO SERRA       
%
%    This program is free software; you can redistribute it and/or modify
%    it under the terms of the GNU General Public License as published by
%    the Free Software Foundation; either version 2 of the License, or
%    (at your option) any later version.
%
%    This program is distributed in the hope that it will be useful,
%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%    GNU General Public License for more details.
%
%    You should have received a copy of the GNU General Public License
%    along with this program; if not, write to the Free Software
%    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%
% ------------------------------------------------------------------------
%
%
%%BeginProlog
%
%%BeginProcSet: ShortNames 1.0 0
/tflg false def % test flag
/bdf { bind def } bind def
/xdf { exch def } bdf
/cm { 28.35 mul } bdf
/ivcm { 28.35 div } bdf
/in { 72    mul } bdf
%%EndProcSet:   ShortNames 1.0 0
%
%%BeginProcSet: Constants 1.0 0
% Printing Offset
/VUpOS 0.25 cm def  % offset defines non printable
/VDnOS 0.25 cm def  % paper area for pages (printer outlimits).
/HLtOS 0.25 cm def
/HRtOS 0.25 cm def
% /pgA4 { 595 842 } def
% Fixed Color Variables (CMYK)
/black                { 0.00 0.00 0.00 1.00 } def
/verydarkgrey         { 0.00 0.00 0.00 0.80 } def
/darkgrey             { 0.00 0.00 0.00 0.60 } def
/grey                 { 0.00 0.00 0.00 0.40 } def
/lightgrey            { 0.00 0.00 0.00 0.20 } def
/verylightgrey        { 0.00 0.00 0.00 0.10 } def
/white                { 0.00 0.00 0.00 0.00 } def
/verydarkmagenta      { 0.00 1.00 0.00 0.30 } def
/darkmagenta          { 0.00 0.80 0.00 0.05 } def
/magenta              { 0.00 0.60 0.00 0.00 } def
/lightmagenta         { 0.00 0.40 0.00 0.00 } def
/verylightmagenta     { 0.00 0.20 0.00 0.00 } def
/verydarkviolet       { 0.45 0.85 0.00 0.00 } def
/darkviolet           { 0.30 0.65 0.00 0.00 } def
/violet               { 0.22 0.55 0.00 0.00 } def
/lightviolet          { 0.15 0.40 0.00 0.00 } def
/verylightviolet      { 0.10 0.20 0.00 0.00 } def
/verydarkblue         { 1.00 1.00 0.00 0.20 } def
/darkblue             { 0.90 0.90 0.00 0.00 } def
/blue                 { 0.75 0.75 0.00 0.00 } def
/lightblue            { 0.50 0.50 0.00 0.00 } def
/verylightblue        { 0.30 0.30 0.00 0.00 } def
/verydarkskyblue      { 0.90 0.50 0.00 0.15 } def
/darkskyblue          { 0.75 0.45 0.00 0.00 } def
/skyblue              { 0.60 0.38 0.00 0.00 } def
/lightskyblue         { 0.45 0.25 0.00 0.00 } def
/verylightskyblue     { 0.30 0.15 0.00 0.00 } def
/verydarkcyan         { 1.00 0.00 0.00 0.10 } def
/darkcyan             { 0.80 0.00 0.00 0.00 } def
/cyan                 { 0.60 0.00 0.00 0.00 } def
/lightcyan            { 0.40 0.00 0.00 0.00 } def
/verylightcyan        { 0.20 0.00 0.00 0.00 } def
/verydarkseagreen     { 0.75 0.00 0.45 0.00 } def
/darkseagreen         { 0.62 0.00 0.38 0.00 } def
/seagreen             { 0.50 0.00 0.30 0.00 } def
/lightseagreen        { 0.38 0.00 0.22 0.00 } def
/verylightseagreen    { 0.25 0.00 0.15 0.00 } def
/verydarkgreen        { 1.00 0.00 1.00 0.25 } def
/darkgreen            { 0.80 0.00 0.80 0.00 } def
/green                { 0.60 0.00 0.60 0.00 } def
/lightgreen           { 0.40 0.00 0.40 0.00 } def
/verylightgreen       { 0.20 0.00 0.20 0.00 } def
/verydarklimegreen    { 0.50 0.00 1.00 0.10 } def
/darklimegreen        { 0.40 0.00 0.95 0.00 } def
/limegreen            { 0.30 0.00 0.80 0.00 } def
/lightlimegreen       { 0.20 0.00 0.65 0.00 } def
/verylightlimegreen   { 0.10 0.00 0.50 0.00 } def
/verydarkyellow       { 0.00 0.00 1.00 0.25 } def
/darkyellow           { 0.00 0.00 1.00 0.10 } def
/yellow               { 0.00 0.00 1.00 0.00 } def
/lightyellow          { 0.00 0.00 0.50 0.00 } def
/verylightyellow      { 0.00 0.00 0.25 0.00 } def
/verydarkorange       { 0.00 0.50 0.80 0.10 } def
/darkorange           { 0.00 0.40 0.80 0.00 } def
/orange               { 0.00 0.30 0.80 0.00 } def
/lightorange          { 0.00 0.20 0.75 0.00 } def
/verylightorange      { 0.00 0.15 0.70 0.00 } def
/verydarkred          { 0.00 1.00 1.00 0.15 } def
/darkred              { 0.00 0.80 0.80 0.00 } def
/red                  { 0.00 0.60 0.60 0.00 } def
/lightred             { 0.00 0.40 0.40 0.00 } def
/verylightred         { 0.00 0.20 0.20 0.00 } def
/verydarkbrown        { 0.35 0.85 1.00 0.40 } def
/darkbrown            { 0.30 0.70 1.00 0.35 } def
/brown                { 0.25 0.75 1.00 0.25 } def
/lightbrown           { 0.20 0.60 0.70 0.15 } def
/verylightbrown       { 0.15 0.45 0.55 0.00 } def
/htag   0 def
/Xmarg  5.0 cm def       % Starting Point (upper left corner)
/Ymarg  842 2 cm sub def
/Y Ymarg def
/PlotWidth  14 cm def    % Blocks Size
/Spacer   1.00 cm def    % BBox relative to dotplot
/BBoxX  PlotWidth def    % SBox relative to percent box
/BBoxY   14.00 cm def    % XBox relative to extra box
/SBoxX  PlotWidth def
/SBoxY    2.25 cm def
/XBoxX  PlotWidth def
/XBoxY    3.00 cm def
/WBox     0.50 cm def    % TagBox Size
/HWBox WBox 2 div    def
/Warw  WBox 0.75 mul def
/HWarw Warw 2 div    def
%  Paper Sizes  (in points)
/pagedict 34 dict def pagedict begin % 32+2 sizes defined
/pg10x14        {  720 1008 } def
/pga0           { 2384 3370 } def
/pga10          {   73  105 } def
/pga1           { 1684 2384 } def
/pga2           { 1190 1684 } def
/pga3           {  842 1190 } def
/pga4           {  595  842 } def
/pga5           {  420  595 } def
/pga6           {  297  420 } def
/pga7           {  210  297 } def
/pga8           {  148  210 } def
/pga9           {  105  148 } def
/pgb0           { 2920 4127 } def
/pgb10          {   91  127 } def
/pgb1           { 2064 2920 } def
/pgb2           { 1460 2064 } def
/pgb3           { 1032 1460 } def
/pgb4           {  729 1032 } def
/pgb5           {  516  729 } def
/pgb6           {  363  516 } def
/pgb7           {  258  363 } def
/pgb8           {  181  258 } def
/pgb9           {  127  181 } def
/pgexecutive    {  540  720 } def
/pgfolio        {  612  936 } def
/pglegal        {  612 1008 } def
/pgletter       {  612  792 } def
/pgquarto       {  610  780 } def
/pgstatement    {  396  612 } def
/pgtabloid      {  792 1224 } def
/pguserdefined  {  595 2384 } def
end % pagedict
%%EndProcSet:   Constants 1.0 0
/flglscape false def
/flgcrd true def
%% page size in points used for plot % pgA4 == 595  842
/Dpage { pagedict begin pga4 flglscape { exch } if end } bdf
% margins (1 cm) (Up Down Left Right - margins are XY independent)
/UpM 1 cm def
/DnM 1 cm def
/LtM 1 cm def
/RtM 1 cm def
%
% Defining background-color for objects.
/BGcolor { white } def
/FGcolor { black } def
/BBoxcol { white } def
/SBoxcol { white } def
/XBoxcol { white } def
/BBXtickflg 1 def  % Blocks TickFlags
/SBXtickflg 1 def  % 0:no tickscale
/XBXtickflg 1 def  % 1:put tickscale
/BBYtickflg 1 def
/SBYtickflg 1 def
/XBYtickflg 1 def
/ShowTicks 1 def
/axesp  1 def % axesp 0 => Y==X : 1 => X=14 Y=14
/ZoomON 0 def % 0 Switch off zoom-marks - 1 Switch on zoom-marks
/GridON 0 def % 0 Switch off grid - 1 Switch on grid
/tickmx -1 def   % tickmarks
/tickmn -1 def
/maxtck 2 def
/mintck 5 def
/pctmxt 5 def
/pctmnt 5 def
/xtrmxt 2 def
/xtrmnt 5 def
/SBoxLab ( ) def
/XBoxLab ( ) def
/SBoxSLab ( ) def
/XBoxSLab ( ) def
%
/FTXangle 0 def
/GPXangle 0 def
/FTYangle 0 def
/GPYangle 0 def
/FTLbsc  1 def
/GPLbsc  1 def
/MxFtLBL 0 def
/MxGpLBL 5 def
/putExon  1 def
/putExLbl 1 def
/putGnLbl 1 def
%%EndProcSet:   Setting_Vars 1.0 0
%
/TitleFont    { 24 /Times-Bold  } def
/SubTtFont    { 16 /Times-Roman } def
/ElmFont      { 12 FTLbsc mul /Times-Roman } def
/TagFont      { 14 GPLbsc mul /Times-Roman } def
/TagLabelFont { 16 /Times-Bold  } def
/TickFont     { 10 /Helvetica } def
%
/xBDspl  1.8 putExon add putExLbl add putGnLbl add def % 1.25
/xGLDspl 1.0 putExon add putExLbl add def              % 0.85
/xGDspl  0.75 putExon add putExLbl add def
/FBDspl 0.60 def % For example, for mRNA.
%
/vertical   { /htag 0 def } bdf
/horizontal { /htag 1 def } bdf
%
/FSF 4 def % Point size for Credits for A4
/CSF { pagedict begin pga4 pop end Dpage pop exch div mul } bdf
% End of user-defined variables...
%
%%BeginProcSet: Page_Layout 1.0 0
% checking if margins are within the defined offset
flglscape {
 UpM HLtOS lt { /UpM HLtOS def } if % Checking margins for flglscape mode
 DnM HRtOS lt { /DnM HRtOS def } if
 LtM VDnOS lt { /LtM VDnOS def } if
 RtM VUpOS lt { /RtM VUpOS def } if
 } {
  UpM VUpOS lt { /UpM VUpOS def } if % Checking margins for portrait mode
  DnM VDnOS lt { /DnM VDnOS def } if
  LtM HLtOS lt { /LtM HLtOS def } if
  RtM HRtOS lt { /RtM HRtOS def } if
  } ifelse
% defining pagelimits and X - Y scales (Xlim Ylim)
/pglim { Dpage pop LtM RtM add sub Dpage exch pop UpM DnM add sub } def
% Defining starting point on page.
/XORI LtM def
/YORI UpM def
%%EndProcSet:   Page_Layout 1.0 0
%
%%BeginProcSet: functions 1.0 0
/F { scale } bdf
/T { translate } bdf
/S { gsave } bdf
/R { grestore } bdf
/m { moveto } bdf
/rm { rmoveto } bdf
/l { lineto } bdf
/rl { rlineto } bdf
/K { stroke } bdf
/scmyk { setcmykcolor } bdf
/slw { setlinewidth } bdf
/bbox { 4 copy 3 1 roll exch 6 2 roll 8 -2 roll m l l l closepath } bdf
/dotted { [ 1 ] 0 setdash } def
%%EndProcSet:   functions 1.0 0
%
%%BeginProcSet: text_functions 1.0 0
/sfont { findfont exch scalefont setfont } bdf
/tshow { S scmyk sfont m rotate show R } bdf
/ctshow { 10 -1 roll dup 11 1 roll 7 -2 roll 2 copy 9 2 roll S sfont stringwidth pop R 2 div htag 1 eq { 9 -1 roll exch sub 8 1 roll } { 8 -1 roll exch sub 7 1 roll } ifelse tshow } bdf
/ltshow { 10 -1 roll dup 11 1 roll 7 -2 roll 2 copy 9 2 roll S sfont stringwidth pop R htag 1 eq { 9 -1 roll exch sub 8 1 roll } { 8 -1 roll exch sub 7 1 roll } ifelse tshow } bdf
%
% X Y angle string valign halign fnt color ttxt
 % valign : tv (top)  cv (middle) bv (bottom)
 % halign : lh (left) ch (center) rh (right)
/chrh { S newpath 0 0 m false charpath flattenpath pathbbox exch pop 3 -1 roll pop R } bdf
/strh { 2 dict begin /lly 0.0 def /ury 0.0 def { ( ) dup 0 4 -1 roll put chrh dup ury gt { /ury xdf } { pop } ifelse dup lly lt { /lly xdf } { pop } ifelse } forall ury end } bdf
/ttxt { S scmyk sfont 8 dict begin /h xdf /v xdf /lbl xdf /angle xdf /y xdf /x xdf /hs lbl stringwidth pop neg def /vs lbl strh neg def x y T angle rotate h (rh) eq { hs } { h (ch) eq { hs 2 div } { 0 } ifelse } ifelse v (tv) eq { vs } { v (cv) eq { vs 2 div } { 0 } ifelse } ifelse m lbl show end R } bdf
%
/Title { S 0 Xmarg Y TitleFont FGcolor tshow R /Y Y 0.75 cm sub def } bdf 
/SubTitle { S 0 Xmarg Y SubTtFont FGcolor tshow R /Y Y 2.5 cm sub def } bdf 
%%EndProcSet:   text_functions 1.0 0
%
%%BeginProcSet: aplotdict 1.0 0
/aplot 120 dict def aplot begin
/min { 2 copy gt { exch } if pop } bdf 
/max { 2 copy lt { exch } if pop } bdf
/Xscm { Xscale mul } bdf /Xscme { Xscm exch } bdf
/Yscm { Yscale mul } bdf /Yscme { Yscm exch } bdf
/fmt { Yscme Xscme m } bdf /flt { Yscme Xscme l } bdf
/line { scmyk slw m l K } bdf
/uline { scmyk slw m S htag 1 eq { 0 -0.1 cm } { 0.1 cm 0 } ifelse rl K R l S htag 1 eq { 0 -0.1 cm } { 0.1 cm 0 } ifelse rl K R K } bdf
/ZoomTicks { /zmdict 3 dict def zmdict begin /r { TxWB BDspl mul Xscm } def /s { TyWB BDspl mul Yscm } def /corner { S 10 -2 roll m 2 { rl S BGcolor scmyk .4 slw K R rl S FGcolor scmyk 2 slw [1 3] 0 setdash K R } repeat R } def 4 copy 3 1 roll exch 0 s 0 s neg r neg 0 r 0 corner 0 s neg 0 s r 0 r neg 0 corner 0 s neg 0 s r neg 0 r 0 corner 0 s 0 s neg r 0 r neg 0 corner end } def
/Line { S 9 5 roll 2 { Yscm 4 1 roll Xscm 4 1 roll } repeat 9 4 roll line R } bdf
/Xline { S 3 1 roll Xscme Xscme 3 -1 roll Yscm xwdt sub dup 3 1 roll xwdt 9 -4 roll line R } bdf
/Bline { S htag 1 eq { Xscme Xscme y0 Yscme y1 Yscm bbox } { Yscme Yscme X0 Xscm 3 1 roll X1 Xscme bbox } ifelse S scmyk fill R scmyk slw K R } bdf
/Bsquare { S Yscme Yscme 4 2 roll Xscme Xscme 4 1 roll exch bbox S scmyk fill R scmyk slw K R } bdf
/Msquare { S Yscme Yscme 4 2 roll Xscme Xscme 4 1 roll exch bbox scmyk slw K R } bdf
/Mcircle { S Yscme Xscme 3 -1 roll Xscm 0 360 arc closepath scmyk slw K R } bdf
/Join { S 2 copy 2 copy pop sub 2 div add exch htag 1 eq { y1 TyWB add dup dup TyWB 0.75 mul add 4 1 roll 5 1 roll } { X0 TxWB sub dup dup TxWB 0.75 mul sub 5 1 roll 6 1 roll exch } ifelse 3 { Yscme Xscme 6 2 roll } repeat m l l 0.25 slw scmyk K R } bdf
/Arrow { /acol [ 9 -4 roll ] def /acolor { acol aload pop } def S 1 eq { exch /sn { 1 mul } def } { /sn { 1 neg mul } def } ifelse htag 1 eq { Xscm dup y1 Yscm HWBox add m HWarw sn HWarw rl 0 Warw neg rl HWarw neg sn HWarw rl closepath S acolor scmyk fill R y1 Yscm HWBox add m Xscm y1 Yscm HWBox add l acolor scmyk 1 slw K } { Yscm dup X0 Xscm HWBox sub exch m HWarw neg HWarw sn rl Warw 0 rl HWarw neg HWarw neg sn rl closepath S acolor scmyk fill R X0 Xscm HWBox sub exch m Yscm X0 Xscm HWBox sub exch l acolor scmyk 1 slw K } ifelse R } bdf
/FBox { htag 1 eq { Xscme Xscme y1 Yscme y1 TyWB FBDspl mul add Yscm bbox } { Yscme Yscme X0 Xscm 3 1 roll X0 TxWB FBDspl mul sub Xscme bbox } ifelse S scmyk fill R FGcolor scmyk 1 slw K } bdf
/FTalgn { htag 1 eq { FTXangle 0 eq { (bv) (ch) } { (cv) (lh) } ifelse } { FTYangle 0 eq { (cv) (rh) } { (bv) (rh) } ifelse } ifelse } bdf
/GPalgn { htag 1 eq { GPXangle 0 eq { (bv) (ch) } { (cv) (lh) } ifelse } { GPYangle 0 eq { (cv) (rh) } { (bv) (rh) } ifelse } ifelse } bdf
/Box { 2 copy 2 copy pop sub 2 div add 7 1 roll S htag 1 eq { Xscme Xscme y1 Yscme y1 TyWB add Yscm bbox } { Yscme Yscme X0 Xscm 3 1 roll X0 TxWB sub Xscme bbox } ifelse S scmyk fill R FGcolor scmyk 1 slw K htag 1 eq { Xscm y1 TyWB 1.75 mul add Yscm FTXangle } { Yscm X0 TxWB 1.75 mul sub Xscme FTYangle } ifelse 6 -1 roll FTalgn 8 -2 roll FGcolor ttxt R } bdf
%
/GDmore { MxFtLBL S ElmFont sfont (M) stringwidth pop R mul htag 1 eq { FTXangle sin } { FTYangle cos } ifelse abs mul ivcm add } bdf
/BDmore { MxGpLBL S TagFont sfont (M) stringwidth pop R mul htag 1 eq { GPXangle sin } { GPYangle cos } ifelse abs mul ivcm add } bdf
%
/GnBanner{ S 1 eq { 2 copy htag 1 eq { Xscme Xscme y1 TyWB GDspl mul add dup Yscme Yscm 3 1 roll } { Yscme Yscme X0 TxWB GDspl mul sub dup Xscme Xscme 4 1 roll exch } ifelse 0.5 FGcolor uline } if 2 copy pop sub 2 div add htag 1 eq { Xscm y1 TyWB GLDspl mul add Yscm GPXangle } { Yscm X0 TxWB GLDspl mul sub Xscme GPYangle } ifelse 6 -1 roll GPalgn 8 -2 roll FGcolor ttxt R } bdf
/SbBanner { S htag 1 eq { 0 X0 X1 X0 sub 2 div add Xscm y1 TyWB GDspl mul add Yscm } { 90 X0 TxWB GDspl mul sub Xscm y0 y1 y0 sub 2 div add Yscm } ifelse 5 -2 roll FGcolor ctshow R } bdf
/Banner { S htag 1 eq { 0 X0 X1 X0 sub 2 div add Xscm y1 TyWB BDspl mul add Yscm } { 90 X0 TxWB BDspl mul sub Xscm y0 y1 y0 sub 2 div add Yscm } ifelse 5 -2 roll FGcolor ctshow R } bdf
%
% mxt mnt xp yp ori end htick
/tckdict 15 dict def tckdict begin /mkmxt { dup 0 lt { neg } if dup 10 lt { 10 mul log round 10 exch exp cvi } { log round 10 exch exp cvi } ifelse } def /nwmod { dup 1 le { 100 mul cvi exch 100 mul cvi exch mod 100 div } { exch dup 1 le { 100 mul cvi exch 100 mul cvi mod 100 div } { cvi exch cvi mod } ifelse } ifelse } def /isltone { dup 1 lt { 100 mul cvi 100 div } if } def end
/htick { S tckdict begin horizontal /yp exch Yscm def /xp exch Xscm def /xend xdf /xori xdf /nmnt exch cvi def /nmxt exch cvi def /mxt exch dup 0 lt { pop xend xori sub mkmxt } if def /mnt exch dup 0 lt { pop mxt nmnt div } if def /lori xori dup mnt nwmod sub mnt add def /lend xend dup mnt nwmod sub mnt sub def xp yp T lori mnt lend { isltone dup dup xori gt exch xend lt and { dup Xscm 0 m dup dup Xscme mxt nwmod 0 eq { 7.5 } { 4 } ifelse neg l 1 slw FGcolor scmyk K GridON 1 eq { S 0 y0 Yscm neg T dup Xscm dup y0 Yscm m y1 Yscm l 0.1 slw verylightgrey scmyk K R } if dup mxt nwmod 0 eq { dup xend mnt sub exch ge { dup dup 1 ge { cvi } if 10 string cvs 0 3 -1 roll Xscm -18 TickFont FGcolor ctshow } if } { pop } ifelse } if } for xori Xscm dup 0 m 7.5 neg l 2 slw FGcolor scmyk K xori 10 string cvs 0 xori Xscm ZoomON 1 eq { 4 sub } if -18 TickFont FGcolor ZoomON 0 eq { ctshow } { ltshow } ifelse xend Xscm dup 0 m 7.5 neg l 2 slw FGcolor scmyk K xend 10 string cvs 0 xend Xscm ZoomON 1 eq { 4 add } if -18 TickFont FGcolor ZoomON 0 eq { ctshow } { tshow } ifelse end R } def
/vtick { S tckdict begin vertical /yp exch Yscm def /xp exch Xscm def /xend xdf /xori xdf /nmnt exch cvi def /nmxt exch cvi def /mxt exch dup 0 lt { pop xend xori sub mkmxt } if def /mnt exch dup 0 lt { pop mxt nmnt div } if def /lori xori dup mnt nwmod sub mnt add def /lend xend dup mnt nwmod sub mnt sub def xp yp T lori mnt lend { isltone dup dup xori gt exch xend lt and { dup Yscm 0 exch m dup dup Yscme mxt nwmod 0 eq { 7.5 } { 4 } ifelse exch l 1 slw FGcolor scmyk K GridON 1 eq { S X0 Xscm 0 T dup Yscm dup X0 neg Xscme m X1 neg Xscme l 0.1 slw verylightgrey scmyk K R } if dup 0 eq { S dup dup X0 Xscme Yscm m X1 neg Xscme Yscm l 0.1 slw FGcolor scmyk K R } if dup mxt nwmod 0 eq { dup xend mnt sub exch ge { dup dup 1 ge { cvi } if 10 string cvs 0 10 4 -1 roll Yscm 2.5 sub TickFont FGcolor tshow } if } { pop } ifelse } if } for 7.5 xori Yscm dup 0 exch m l 2 slw FGcolor scmyk K xori 10 string cvs 0 10 xori Yscm ZoomON 0 eq { 2.5 sub } { 2.5 add } ifelse TickFont FGcolor tshow 7.5 xend Yscm dup 0 exch m l 2 slw FGcolor scmyk K xend 10 string cvs 0 10 xend Yscm ZoomON 0 eq { 2.5 sub } { 2.5 add } ifelse TickFont FGcolor tshow end R } def
/nucltick { tickmn tickmx maxtck mintck X0 X1 0 y0 htick } def
/pctmarks { S y0 10 y1 { Yscm dup X0 Xscm X1 Xscm 3 1 roll 4 1 roll 0.5 FGcolor line } for R } bdf
%
/beginfunct { R S 3 dict begin /maxx exch ceiling def /minx exch floor def /Yscale XBoxY maxx minx sub div def minx 0 lt { 0 minx neg Yscm T } if S XBYtickflg 1 eq { -1 -1 xtrmxt xtrmnt minx maxx X1 0 vtick S X0 Xscm 0 m X1 Xscm 0 l dotted FGcolor scmyk K R } if R } def /endfunct { end R } def
end % aplot dict
%%EndProcSet:   aplotdict 1.0 0
%
%%BeginProcSet: main_function_calls 1.0 0
%
/s_credits { S 1 dict begin /fs_cd FSF def pagedict begin pga4 pop end 1 cm sub DnM T 0 0 0 (This plot has been obtained using GFF2APLOT. The most recent version of GFF2APLOT is freely available at \042http:\/\/www1.imim.es/\176jabril/\042. Copyright      1999 by Josep F. ABRIL, Thomas WIEHE & Roderic GUIGO) (cv) (rh) fs_cd /Times-Roman FGcolor ttxt S fs_cd /Times-Roman sfont (   1999 by Josep F. ABRIL, Thomas WIEHE & Roderic GUIGO) stringwidth pop neg R 0 0 (\343) (cv) (ch) fs_cd /Symbol FGcolor ttxt end R } bdf
%
/estlbl { S 3 dict begin /lbl xdf /ypos xdf /xpos xdf horizontal 0 Xlwdt 4 div neg T lbl 0 xpos Xscm ypos Yscm 5 /Helvetica black ctshow vertical end R } bdf
%
/GsclonX { /Y exch Y Spacer sub exch sub def Xmarg Y T axesp 0 eq { /Xscale { BBoxX X1 X0 sub Y1 Y0 sub max div } def } { /Xscale { BBoxX X1 X0 sub div } def } ifelse } bdf
%
% DOTPLOT BOX
/begindata { aplot begin S /y1 Y1 def /y0 Y0 def BBoxY GsclonX axesp 0 eq { /Yscale Xscale def } { /Yscale { BBoxY y1 y0 sub div } def } ifelse /TxWB { WBox Xscale div } def /TyWB { WBox Yscale div } def /GDspl { xGDspl GDmore } def /GLDspl { xGLDspl GDmore } def /BDspl { xBDspl GDmore BDmore } def X0 Xscm neg y0 Yscm neg T S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox BBoxcol scmyk fill R S X0 Xscm y0 Yscm X1 Xscm y1 Yscm ZoomON 1 eq { 4 copy ZoomTicks } if bbox 2 slw FGcolor scmyk K R S BBXtickflg 1 eq { nucltick /Spacer 1 cm def } { /Spacer 0.5 cm def } ifelse BBYtickflg 1 eq { tickmn tickmx maxtck mintck y0 y1 X1 0 vtick } if R newpath } def /enddata { R /GDspl xGDspl def /GLDspl xGLDspl def /BDspl xBDspl def end } def
%
% PERCENT BOX
/beginmatches { aplot begin /ZoomON 0 def S /y1 xdf /y0 xdf SBoxY GsclonX /Yscale SBoxY y1 y0 sub div def X0 Xscm neg y0 Yscm neg T S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox S S SBoxcol scmyk fill R S SBoxLab TagLabelFont Banner SBoxSLab TagFont SbBanner SBXtickflg 1 eq { nucltick /Spacer 1 cm def } { /Spacer 0.5 cm def } ifelse R S SBYtickflg 1 eq { -1 -1 pctmxt pctmnt y0 y1 X1 0 vtick } if R S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox 2 slw FGcolor scmyk K R R clip newpath } def /endmatches { R R end } def
%
% EXTRA BOX
/beginextra { aplot begin S /nlines xdf /y0 0 def XBoxY GsclonX /Yscale XBoxY nlines 1 add div def /Xlwdt Yscale 0.75 mul def /xwdt Yscale 2 div def /y1 XBoxY Yscale div def X0 Xscm neg 0 T S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox S XBoxcol scmyk fill R S XBoxLab TagLabelFont Banner XBoxSLab TagFont SbBanner XBXtickflg 1 eq { nucltick } if R newpath } def /endextra { /Yscale XBoxY nlines 1 add div def X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox 2 slw FGcolor scmyk K R  R end } def
%
%%EndProcSet:   main_function_calls 1.0 0
%
%%EndProlog
%
%%BeginSetup
%
% initgraphics
% true setpacking
true setstrokeadjust
0.125 setlinewidth
0 setlinejoin
0 setlinecap
%
%%EndSetup
%
%%Page: 1 1
%%BeginPageSetup
%
% Saving current page settings
/pgsave save def
% Setting BGcolor for sheet 
Dpage 0 0 bbox S BGcolor scmyk fill R clip newpath
% Setting page-size scale
1 CSF dup F
%%EndPageSetup
%
%
% New BLOCK ---> LABELS
%
% (label) Title
(HomoSapiens x MusMusculus) Title
% (label) SubTitle
( ) SubTitle
%
% New BLOCK ---> APLOT
%
% xori xend yori yend
/X0 1 def
/X1 1488 def
/Y0 1 def
/Y1 1568 def
%
begindata
%
horizontal
%
% lwidth lcolor bcol ori end Bline
% x0 y0 x1 y1 lwidth lcolor Line
0.25 lightgrey lightgrey 51 60 Bline
0.25 lightgrey lightgrey 244 404 Bline
0.25 lightgrey lightgrey 593 709 Bline
0.25 lightgrey lightgrey 878 1039 Bline
0.25 lightgrey lightgrey 1238 1438 Bline
% tag definitions: Box,Join,Arrow,Banner
% (label) ElmFont bcol ori end Box
% color ori end dir Arrow % dir: 0=left 1=rigth
% jcol ori end Join
() ElmFont red 51 60 Box
() ElmFont red 244 404 Box
() ElmFont red 593 709 Box
() ElmFont red 878 1039 Box
() ElmFont red 1238 1438 Box
black 60 244 Join
black 404 593 Join
black 709 878 Join
black 1039 1238 Join
% (label) TagFont ori end GnBanner
(gene1) TagFont 51 1438 1 GnBanner
% (label) TagLabelFont Banner
(MMGHGPRO.PE1) TagLabelFont Banner 
%
vertical
%
% lwidth lcolor bcol ori end Bline
% x0 y0 x1 y1 lwidth lcolor Line
0.25 lightgrey lightgrey 51 60 Bline
0.25 lightgrey lightgrey 321 481 Bline
0.25 lightgrey lightgrey 691 810 Bline
0.25 lightgrey lightgrey 903 1067 Bline
0.25 lightgrey lightgrey 1321 1518 Bline
%%
% tag definitions: Box,Join,Arrow,Banner
% (label) ElmFont bcol ori end Box
% color ori end dir Arrow % dir: 0=left 1=rigth
% jcol ori end Join
() ElmFont red 51 60 Box
() ElmFont red 321 481 Box
() ElmFont red 691 810 Box
() ElmFont red 903 1067 Box
() ElmFont red 1321 1518 Box
black 60 321 Join
black 481 691 Join
black 810 903 Join
black 1067 1321 Join
% (label) TagFont ori end GnBanner
(gene1) TagFont 51 1518 1 GnBanner
% (label) TagLabelFont Banner
(HUMGHCSA.PE1) TagLabelFont Banner 
%
% Extra Features: Nice Band Lines Finishing for Seq1lines, Bsquare
%
% lwidth lcolor bcolor Hori Hend Vori Vend Bsquare
%
%
% DATA ---> Alignment...
%
219 296 449 526 2 black Line
854 879 985 1010 2 black Line
629 730 715 816 2 black Line
593 691 628 726 2 black Line
1090 1140 1116 1166 2 black Line
1422 1505 1213 1296 2 red Line
74 74 9 9 2 red Line
1074 1102 988 1016 2 red Line
1205 1253 1119 1167 2 red Line
215 257 150 192 2 red Line
1460 1563 1446 1549 2 red Line
%
%
% Plot - Remarks...
%
%
enddata
%
%
% New BLOCK ---> MATCHES
%
% xpct ypct
 0 200 beginmatches
%
horizontal
% lwidth lcolor bcol ori end Bline
% x0 y0 x1 y1 lwidth lcolor Line
0.25 lightgrey lightgrey 51 60 Bline
0.25 lightgrey lightgrey 244 404 Bline
0.25 lightgrey lightgrey 593 709 Bline
0.25 lightgrey lightgrey 878 1039 Bline
0.25 lightgrey lightgrey 1238 1438 Bline
%
vertical
%
pctmarks
%
%
% DATA ---> Alignment...
%
219 228 449 228 2 black Line
854 141 985 141 2 black Line
629 95 715 95 2 black Line
593 44 628 44 2 black Line
1090 31 1116 31 2 black Line
1422 199 1213 199 2 black Line
74 80 9 80 2 black Line
1074 71 988 71 2 black Line
1205 64 1119 64 2 black Line
215 40 150 40 2 black Line
1460 31 1446 31 2 black Line
%
endmatches
%
%
flgcrd { s_credits } if
grestoreall
pgsave restore
showpage
%
% PageEND: 1 1
%
%%Trailer
%
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 0 0 595 842
%%EOF

%%EndDocument
 @endspecial -12 4205 a @beginspecial 0 @llx 120 @lly
595 @urx 822 @ury 2211 @rwi @clip @setspecial
%%BeginDocument: GF004.2.ps
%!PS-Adobe-3.0
%%Title: 
%%Creator: aplot
%%Version: v1.9
%%CreationDate: 2000/06/07 10:32:07
%%For: rguigo
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 0 0 595 842
%%EndComments
%
%    Author : Josep Francesc ABRIL FERRANDO
%    e-mail :        jabril@imim.es
%
% ------------------------------------------------------------------------
%                     PostScript Output from GFF2APLOT
% ------------------------------------------------------------------------
%
%         Converting GFF files for an alignment to PostScript.
%
%          Copyright (C) 1999 - Josep Francesc ABRIL FERRANDO  
%                                       Thomas WIEHE                   
%                                      Roderic GUIGO SERRA       
%
%    This program is free software; you can redistribute it and/or modify
%    it under the terms of the GNU General Public License as published by
%    the Free Software Foundation; either version 2 of the License, or
%    (at your option) any later version.
%
%    This program is distributed in the hope that it will be useful,
%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%    GNU General Public License for more details.
%
%    You should have received a copy of the GNU General Public License
%    along with this program; if not, write to the Free Software
%    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%
% ------------------------------------------------------------------------
%
%
%%BeginProlog
%
%%BeginProcSet: ShortNames 1.0 0
/tflg false def % test flag
/bdf { bind def } bind def
/xdf { exch def } bdf
/cm { 28.35 mul } bdf
/ivcm { 28.35 div } bdf
/in { 72    mul } bdf
%%EndProcSet:   ShortNames 1.0 0
%
%%BeginProcSet: Constants 1.0 0
% Printing Offset
/VUpOS 0.25 cm def  % offset defines non printable
/VDnOS 0.25 cm def  % paper area for pages (printer outlimits).
/HLtOS 0.25 cm def
/HRtOS 0.25 cm def
% /pgA4 { 595 842 } def
% Fixed Color Variables (CMYK)
/black                { 0.00 0.00 0.00 1.00 } def
/verydarkgrey         { 0.00 0.00 0.00 0.80 } def
/darkgrey             { 0.00 0.00 0.00 0.60 } def
/grey                 { 0.00 0.00 0.00 0.40 } def
/lightgrey            { 0.00 0.00 0.00 0.20 } def
/verylightgrey        { 0.00 0.00 0.00 0.10 } def
/white                { 0.00 0.00 0.00 0.00 } def
/verydarkmagenta      { 0.00 1.00 0.00 0.30 } def
/darkmagenta          { 0.00 0.80 0.00 0.05 } def
/magenta              { 0.00 0.60 0.00 0.00 } def
/lightmagenta         { 0.00 0.40 0.00 0.00 } def
/verylightmagenta     { 0.00 0.20 0.00 0.00 } def
/verydarkviolet       { 0.45 0.85 0.00 0.00 } def
/darkviolet           { 0.30 0.65 0.00 0.00 } def
/violet               { 0.22 0.55 0.00 0.00 } def
/lightviolet          { 0.15 0.40 0.00 0.00 } def
/verylightviolet      { 0.10 0.20 0.00 0.00 } def
/verydarkblue         { 1.00 1.00 0.00 0.20 } def
/darkblue             { 0.90 0.90 0.00 0.00 } def
/blue                 { 0.75 0.75 0.00 0.00 } def
/lightblue            { 0.50 0.50 0.00 0.00 } def
/verylightblue        { 0.30 0.30 0.00 0.00 } def
/verydarkskyblue      { 0.90 0.50 0.00 0.15 } def
/darkskyblue          { 0.75 0.45 0.00 0.00 } def
/skyblue              { 0.60 0.38 0.00 0.00 } def
/lightskyblue         { 0.45 0.25 0.00 0.00 } def
/verylightskyblue     { 0.30 0.15 0.00 0.00 } def
/verydarkcyan         { 1.00 0.00 0.00 0.10 } def
/darkcyan             { 0.80 0.00 0.00 0.00 } def
/cyan                 { 0.60 0.00 0.00 0.00 } def
/lightcyan            { 0.40 0.00 0.00 0.00 } def
/verylightcyan        { 0.20 0.00 0.00 0.00 } def
/verydarkseagreen     { 0.75 0.00 0.45 0.00 } def
/darkseagreen         { 0.62 0.00 0.38 0.00 } def
/seagreen             { 0.50 0.00 0.30 0.00 } def
/lightseagreen        { 0.38 0.00 0.22 0.00 } def
/verylightseagreen    { 0.25 0.00 0.15 0.00 } def
/verydarkgreen        { 1.00 0.00 1.00 0.25 } def
/darkgreen            { 0.80 0.00 0.80 0.00 } def
/green                { 0.60 0.00 0.60 0.00 } def
/lightgreen           { 0.40 0.00 0.40 0.00 } def
/verylightgreen       { 0.20 0.00 0.20 0.00 } def
/verydarklimegreen    { 0.50 0.00 1.00 0.10 } def
/darklimegreen        { 0.40 0.00 0.95 0.00 } def
/limegreen            { 0.30 0.00 0.80 0.00 } def
/lightlimegreen       { 0.20 0.00 0.65 0.00 } def
/verylightlimegreen   { 0.10 0.00 0.50 0.00 } def
/verydarkyellow       { 0.00 0.00 1.00 0.25 } def
/darkyellow           { 0.00 0.00 1.00 0.10 } def
/yellow               { 0.00 0.00 1.00 0.00 } def
/lightyellow          { 0.00 0.00 0.50 0.00 } def
/verylightyellow      { 0.00 0.00 0.25 0.00 } def
/verydarkorange       { 0.00 0.50 0.80 0.10 } def
/darkorange           { 0.00 0.40 0.80 0.00 } def
/orange               { 0.00 0.30 0.80 0.00 } def
/lightorange          { 0.00 0.20 0.75 0.00 } def
/verylightorange      { 0.00 0.15 0.70 0.00 } def
/verydarkred          { 0.00 1.00 1.00 0.15 } def
/darkred              { 0.00 0.80 0.80 0.00 } def
/red                  { 0.00 0.60 0.60 0.00 } def
/lightred             { 0.00 0.40 0.40 0.00 } def
/verylightred         { 0.00 0.20 0.20 0.00 } def
/verydarkbrown        { 0.35 0.85 1.00 0.40 } def
/darkbrown            { 0.30 0.70 1.00 0.35 } def
/brown                { 0.25 0.75 1.00 0.25 } def
/lightbrown           { 0.20 0.60 0.70 0.15 } def
/verylightbrown       { 0.15 0.45 0.55 0.00 } def
/htag   0 def
/Xmarg  5.0 cm def       % Starting Point (upper left corner)
/Ymarg  842 2 cm sub def
/Y Ymarg def
/PlotWidth  14 cm def    % Blocks Size
/Spacer   1.00 cm def    % BBox relative to dotplot
/BBoxX  PlotWidth def    % SBox relative to percent box
/BBoxY   14.00 cm def    % XBox relative to extra box
/SBoxX  PlotWidth def
/SBoxY    2.25 cm def
/XBoxX  PlotWidth def
/XBoxY    3.00 cm def
/WBox     0.50 cm def    % TagBox Size
/HWBox WBox 2 div    def
/Warw  WBox 0.75 mul def
/HWarw Warw 2 div    def
%  Paper Sizes  (in points)
/pagedict 34 dict def pagedict begin % 32+2 sizes defined
/pg10x14        {  720 1008 } def
/pga0           { 2384 3370 } def
/pga10          {   73  105 } def
/pga1           { 1684 2384 } def
/pga2           { 1190 1684 } def
/pga3           {  842 1190 } def
/pga4           {  595  842 } def
/pga5           {  420  595 } def
/pga6           {  297  420 } def
/pga7           {  210  297 } def
/pga8           {  148  210 } def
/pga9           {  105  148 } def
/pgb0           { 2920 4127 } def
/pgb10          {   91  127 } def
/pgb1           { 2064 2920 } def
/pgb2           { 1460 2064 } def
/pgb3           { 1032 1460 } def
/pgb4           {  729 1032 } def
/pgb5           {  516  729 } def
/pgb6           {  363  516 } def
/pgb7           {  258  363 } def
/pgb8           {  181  258 } def
/pgb9           {  127  181 } def
/pgexecutive    {  540  720 } def
/pgfolio        {  612  936 } def
/pglegal        {  612 1008 } def
/pgletter       {  612  792 } def
/pgquarto       {  610  780 } def
/pgstatement    {  396  612 } def
/pgtabloid      {  792 1224 } def
/pguserdefined  {  595 2384 } def
end % pagedict
%%EndProcSet:   Constants 1.0 0
/flglscape false def
/flgcrd true def
%% page size in points used for plot % pgA4 == 595  842
/Dpage { pagedict begin pga4 flglscape { exch } if end } bdf
% margins (1 cm) (Up Down Left Right - margins are XY independent)
/UpM 1 cm def
/DnM 1 cm def
/LtM 1 cm def
/RtM 1 cm def
%
% Defining background-color for objects.
/BGcolor { white } def
/FGcolor { black } def
/BBoxcol { white } def
/SBoxcol { white } def
/XBoxcol { white } def
/BBXtickflg 1 def  % Blocks TickFlags
/SBXtickflg 1 def  % 0:no tickscale
/XBXtickflg 1 def  % 1:put tickscale
/BBYtickflg 1 def
/SBYtickflg 1 def
/XBYtickflg 1 def
/ShowTicks 1 def
/axesp  1 def % axesp 0 => Y==X : 1 => X=14 Y=14
/ZoomON 0 def % 0 Switch off zoom-marks - 1 Switch on zoom-marks
/GridON 0 def % 0 Switch off grid - 1 Switch on grid
/tickmx -1 def   % tickmarks
/tickmn -1 def
/maxtck 2 def
/mintck 5 def
/pctmxt 5 def
/pctmnt 5 def
/xtrmxt 2 def
/xtrmnt 5 def
/SBoxLab ( ) def
/XBoxLab ( ) def
/SBoxSLab ( ) def
/XBoxSLab ( ) def
%
/FTXangle 0 def
/GPXangle 0 def
/FTYangle 0 def
/GPYangle 0 def
/FTLbsc  1 def
/GPLbsc  1 def
/MxFtLBL 0 def
/MxGpLBL 5 def
/putExon  1 def
/putExLbl 1 def
/putGnLbl 1 def
%%EndProcSet:   Setting_Vars 1.0 0
%
/TitleFont    { 24 /Times-Bold  } def
/SubTtFont    { 16 /Times-Roman } def
/ElmFont      { 12 FTLbsc mul /Times-Roman } def
/TagFont      { 14 GPLbsc mul /Times-Roman } def
/TagLabelFont { 16 /Times-Bold  } def
/TickFont     { 10 /Helvetica } def
%
/xBDspl  1.8 putExon add putExLbl add putGnLbl add def % 1.25
/xGLDspl 1.0 putExon add putExLbl add def              % 0.85
/xGDspl  0.75 putExon add putExLbl add def
/FBDspl 0.60 def % For example, for mRNA.
%
/vertical   { /htag 0 def } bdf
/horizontal { /htag 1 def } bdf
%
/FSF 4 def % Point size for Credits for A4
/CSF { pagedict begin pga4 pop end Dpage pop exch div mul } bdf
% End of user-defined variables...
%
%%BeginProcSet: Page_Layout 1.0 0
% checking if margins are within the defined offset
flglscape {
 UpM HLtOS lt { /UpM HLtOS def } if % Checking margins for flglscape mode
 DnM HRtOS lt { /DnM HRtOS def } if
 LtM VDnOS lt { /LtM VDnOS def } if
 RtM VUpOS lt { /RtM VUpOS def } if
 } {
  UpM VUpOS lt { /UpM VUpOS def } if % Checking margins for portrait mode
  DnM VDnOS lt { /DnM VDnOS def } if
  LtM HLtOS lt { /LtM HLtOS def } if
  RtM HRtOS lt { /RtM HRtOS def } if
  } ifelse
% defining pagelimits and X - Y scales (Xlim Ylim)
/pglim { Dpage pop LtM RtM add sub Dpage exch pop UpM DnM add sub } def
% Defining starting point on page.
/XORI LtM def
/YORI UpM def
%%EndProcSet:   Page_Layout 1.0 0
%
%%BeginProcSet: functions 1.0 0
/F { scale } bdf
/T { translate } bdf
/S { gsave } bdf
/R { grestore } bdf
/m { moveto } bdf
/rm { rmoveto } bdf
/l { lineto } bdf
/rl { rlineto } bdf
/K { stroke } bdf
/scmyk { setcmykcolor } bdf
/slw { setlinewidth } bdf
/bbox { 4 copy 3 1 roll exch 6 2 roll 8 -2 roll m l l l closepath } bdf
/dotted { [ 1 ] 0 setdash } def
%%EndProcSet:   functions 1.0 0
%
%%BeginProcSet: text_functions 1.0 0
/sfont { findfont exch scalefont setfont } bdf
/tshow { S scmyk sfont m rotate show R } bdf
/ctshow { 10 -1 roll dup 11 1 roll 7 -2 roll 2 copy 9 2 roll S sfont stringwidth pop R 2 div htag 1 eq { 9 -1 roll exch sub 8 1 roll } { 8 -1 roll exch sub 7 1 roll } ifelse tshow } bdf
/ltshow { 10 -1 roll dup 11 1 roll 7 -2 roll 2 copy 9 2 roll S sfont stringwidth pop R htag 1 eq { 9 -1 roll exch sub 8 1 roll } { 8 -1 roll exch sub 7 1 roll } ifelse tshow } bdf
%
% X Y angle string valign halign fnt color ttxt
 % valign : tv (top)  cv (middle) bv (bottom)
 % halign : lh (left) ch (center) rh (right)
/chrh { S newpath 0 0 m false charpath flattenpath pathbbox exch pop 3 -1 roll pop R } bdf
/strh { 2 dict begin /lly 0.0 def /ury 0.0 def { ( ) dup 0 4 -1 roll put chrh dup ury gt { /ury xdf } { pop } ifelse dup lly lt { /lly xdf } { pop } ifelse } forall ury end } bdf
/ttxt { S scmyk sfont 8 dict begin /h xdf /v xdf /lbl xdf /angle xdf /y xdf /x xdf /hs lbl stringwidth pop neg def /vs lbl strh neg def x y T angle rotate h (rh) eq { hs } { h (ch) eq { hs 2 div } { 0 } ifelse } ifelse v (tv) eq { vs } { v (cv) eq { vs 2 div } { 0 } ifelse } ifelse m lbl show end R } bdf
%
/Title { S 0 Xmarg Y TitleFont FGcolor tshow R /Y Y 0.75 cm sub def } bdf 
/SubTitle { S 0 Xmarg Y SubTtFont FGcolor tshow R /Y Y 2.5 cm sub def } bdf 
%%EndProcSet:   text_functions 1.0 0
%
%%BeginProcSet: aplotdict 1.0 0
/aplot 120 dict def aplot begin
/min { 2 copy gt { exch } if pop } bdf 
/max { 2 copy lt { exch } if pop } bdf
/Xscm { Xscale mul } bdf /Xscme { Xscm exch } bdf
/Yscm { Yscale mul } bdf /Yscme { Yscm exch } bdf
/fmt { Yscme Xscme m } bdf /flt { Yscme Xscme l } bdf
/line { scmyk slw m l K } bdf
/uline { scmyk slw m S htag 1 eq { 0 -0.1 cm } { 0.1 cm 0 } ifelse rl K R l S htag 1 eq { 0 -0.1 cm } { 0.1 cm 0 } ifelse rl K R K } bdf
/ZoomTicks { /zmdict 3 dict def zmdict begin /r { TxWB BDspl mul Xscm } def /s { TyWB BDspl mul Yscm } def /corner { S 10 -2 roll m 2 { rl S BGcolor scmyk .4 slw K R rl S FGcolor scmyk 2 slw [1 3] 0 setdash K R } repeat R } def 4 copy 3 1 roll exch 0 s 0 s neg r neg 0 r 0 corner 0 s neg 0 s r 0 r neg 0 corner 0 s neg 0 s r neg 0 r 0 corner 0 s 0 s neg r 0 r neg 0 corner end } def
/Line { S 9 5 roll 2 { Yscm 4 1 roll Xscm 4 1 roll } repeat 9 4 roll line R } bdf
/Xline { S 3 1 roll Xscme Xscme 3 -1 roll Yscm xwdt sub dup 3 1 roll xwdt 9 -4 roll line R } bdf
/Bline { S htag 1 eq { Xscme Xscme y0 Yscme y1 Yscm bbox } { Yscme Yscme X0 Xscm 3 1 roll X1 Xscme bbox } ifelse S scmyk fill R scmyk slw K R } bdf
/Bsquare { S Yscme Yscme 4 2 roll Xscme Xscme 4 1 roll exch bbox S scmyk fill R scmyk slw K R } bdf
/Msquare { S Yscme Yscme 4 2 roll Xscme Xscme 4 1 roll exch bbox scmyk slw K R } bdf
/Mcircle { S Yscme Xscme 3 -1 roll Xscm 0 360 arc closepath scmyk slw K R } bdf
/Join { S 2 copy 2 copy pop sub 2 div add exch htag 1 eq { y1 TyWB add dup dup TyWB 0.75 mul add 4 1 roll 5 1 roll } { X0 TxWB sub dup dup TxWB 0.75 mul sub 5 1 roll 6 1 roll exch } ifelse 3 { Yscme Xscme 6 2 roll } repeat m l l 0.25 slw scmyk K R } bdf
/Arrow { /acol [ 9 -4 roll ] def /acolor { acol aload pop } def S 1 eq { exch /sn { 1 mul } def } { /sn { 1 neg mul } def } ifelse htag 1 eq { Xscm dup y1 Yscm HWBox add m HWarw sn HWarw rl 0 Warw neg rl HWarw neg sn HWarw rl closepath S acolor scmyk fill R y1 Yscm HWBox add m Xscm y1 Yscm HWBox add l acolor scmyk 1 slw K } { Yscm dup X0 Xscm HWBox sub exch m HWarw neg HWarw sn rl Warw 0 rl HWarw neg HWarw neg sn rl closepath S acolor scmyk fill R X0 Xscm HWBox sub exch m Yscm X0 Xscm HWBox sub exch l acolor scmyk 1 slw K } ifelse R } bdf
/FBox { htag 1 eq { Xscme Xscme y1 Yscme y1 TyWB FBDspl mul add Yscm bbox } { Yscme Yscme X0 Xscm 3 1 roll X0 TxWB FBDspl mul sub Xscme bbox } ifelse S scmyk fill R FGcolor scmyk 1 slw K } bdf
/FTalgn { htag 1 eq { FTXangle 0 eq { (bv) (ch) } { (cv) (lh) } ifelse } { FTYangle 0 eq { (cv) (rh) } { (bv) (rh) } ifelse } ifelse } bdf
/GPalgn { htag 1 eq { GPXangle 0 eq { (bv) (ch) } { (cv) (lh) } ifelse } { GPYangle 0 eq { (cv) (rh) } { (bv) (rh) } ifelse } ifelse } bdf
/Box { 2 copy 2 copy pop sub 2 div add 7 1 roll S htag 1 eq { Xscme Xscme y1 Yscme y1 TyWB add Yscm bbox } { Yscme Yscme X0 Xscm 3 1 roll X0 TxWB sub Xscme bbox } ifelse S scmyk fill R FGcolor scmyk 1 slw K htag 1 eq { Xscm y1 TyWB 1.75 mul add Yscm FTXangle } { Yscm X0 TxWB 1.75 mul sub Xscme FTYangle } ifelse 6 -1 roll FTalgn 8 -2 roll FGcolor ttxt R } bdf
%
/GDmore { MxFtLBL S ElmFont sfont (M) stringwidth pop R mul htag 1 eq { FTXangle sin } { FTYangle cos } ifelse abs mul ivcm add } bdf
/BDmore { MxGpLBL S TagFont sfont (M) stringwidth pop R mul htag 1 eq { GPXangle sin } { GPYangle cos } ifelse abs mul ivcm add } bdf
%
/GnBanner{ S 1 eq { 2 copy htag 1 eq { Xscme Xscme y1 TyWB GDspl mul add dup Yscme Yscm 3 1 roll } { Yscme Yscme X0 TxWB GDspl mul sub dup Xscme Xscme 4 1 roll exch } ifelse 0.5 FGcolor uline } if 2 copy pop sub 2 div add htag 1 eq { Xscm y1 TyWB GLDspl mul add Yscm GPXangle } { Yscm X0 TxWB GLDspl mul sub Xscme GPYangle } ifelse 6 -1 roll GPalgn 8 -2 roll FGcolor ttxt R } bdf
/SbBanner { S htag 1 eq { 0 X0 X1 X0 sub 2 div add Xscm y1 TyWB GDspl mul add Yscm } { 90 X0 TxWB GDspl mul sub Xscm y0 y1 y0 sub 2 div add Yscm } ifelse 5 -2 roll FGcolor ctshow R } bdf
/Banner { S htag 1 eq { 0 X0 X1 X0 sub 2 div add Xscm y1 TyWB BDspl mul add Yscm } { 90 X0 TxWB BDspl mul sub Xscm y0 y1 y0 sub 2 div add Yscm } ifelse 5 -2 roll FGcolor ctshow R } bdf
%
% mxt mnt xp yp ori end htick
/tckdict 15 dict def tckdict begin /mkmxt { dup 0 lt { neg } if dup 10 lt { 10 mul log round 10 exch exp cvi } { log round 10 exch exp cvi } ifelse } def /nwmod { dup 1 le { 100 mul cvi exch 100 mul cvi exch mod 100 div } { exch dup 1 le { 100 mul cvi exch 100 mul cvi mod 100 div } { cvi exch cvi mod } ifelse } ifelse } def /isltone { dup 1 lt { 100 mul cvi 100 div } if } def end
/htick { S tckdict begin horizontal /yp exch Yscm def /xp exch Xscm def /xend xdf /xori xdf /nmnt exch cvi def /nmxt exch cvi def /mxt exch dup 0 lt { pop xend xori sub mkmxt } if def /mnt exch dup 0 lt { pop mxt nmnt div } if def /lori xori dup mnt nwmod sub mnt add def /lend xend dup mnt nwmod sub mnt sub def xp yp T lori mnt lend { isltone dup dup xori gt exch xend lt and { dup Xscm 0 m dup dup Xscme mxt nwmod 0 eq { 7.5 } { 4 } ifelse neg l 1 slw FGcolor scmyk K GridON 1 eq { S 0 y0 Yscm neg T dup Xscm dup y0 Yscm m y1 Yscm l 0.1 slw verylightgrey scmyk K R } if dup mxt nwmod 0 eq { dup xend mnt sub exch ge { dup dup 1 ge { cvi } if 10 string cvs 0 3 -1 roll Xscm -18 TickFont FGcolor ctshow } if } { pop } ifelse } if } for xori Xscm dup 0 m 7.5 neg l 2 slw FGcolor scmyk K xori 10 string cvs 0 xori Xscm ZoomON 1 eq { 4 sub } if -18 TickFont FGcolor ZoomON 0 eq { ctshow } { ltshow } ifelse xend Xscm dup 0 m 7.5 neg l 2 slw FGcolor scmyk K xend 10 string cvs 0 xend Xscm ZoomON 1 eq { 4 add } if -18 TickFont FGcolor ZoomON 0 eq { ctshow } { tshow } ifelse end R } def
/vtick { S tckdict begin vertical /yp exch Yscm def /xp exch Xscm def /xend xdf /xori xdf /nmnt exch cvi def /nmxt exch cvi def /mxt exch dup 0 lt { pop xend xori sub mkmxt } if def /mnt exch dup 0 lt { pop mxt nmnt div } if def /lori xori dup mnt nwmod sub mnt add def /lend xend dup mnt nwmod sub mnt sub def xp yp T lori mnt lend { isltone dup dup xori gt exch xend lt and { dup Yscm 0 exch m dup dup Yscme mxt nwmod 0 eq { 7.5 } { 4 } ifelse exch l 1 slw FGcolor scmyk K GridON 1 eq { S X0 Xscm 0 T dup Yscm dup X0 neg Xscme m X1 neg Xscme l 0.1 slw verylightgrey scmyk K R } if dup 0 eq { S dup dup X0 Xscme Yscm m X1 neg Xscme Yscm l 0.1 slw FGcolor scmyk K R } if dup mxt nwmod 0 eq { dup xend mnt sub exch ge { dup dup 1 ge { cvi } if 10 string cvs 0 10 4 -1 roll Yscm 2.5 sub TickFont FGcolor tshow } if } { pop } ifelse } if } for 7.5 xori Yscm dup 0 exch m l 2 slw FGcolor scmyk K xori 10 string cvs 0 10 xori Yscm ZoomON 0 eq { 2.5 sub } { 2.5 add } ifelse TickFont FGcolor tshow 7.5 xend Yscm dup 0 exch m l 2 slw FGcolor scmyk K xend 10 string cvs 0 10 xend Yscm ZoomON 0 eq { 2.5 sub } { 2.5 add } ifelse TickFont FGcolor tshow end R } def
/nucltick { tickmn tickmx maxtck mintck X0 X1 0 y0 htick } def
/pctmarks { S y0 10 y1 { Yscm dup X0 Xscm X1 Xscm 3 1 roll 4 1 roll 0.5 FGcolor line } for R } bdf
%
/beginfunct { R S 3 dict begin /maxx exch ceiling def /minx exch floor def /Yscale XBoxY maxx minx sub div def minx 0 lt { 0 minx neg Yscm T } if S XBYtickflg 1 eq { -1 -1 xtrmxt xtrmnt minx maxx X1 0 vtick S X0 Xscm 0 m X1 Xscm 0 l dotted FGcolor scmyk K R } if R } def /endfunct { end R } def
end % aplot dict
%%EndProcSet:   aplotdict 1.0 0
%
%%BeginProcSet: main_function_calls 1.0 0
%
/s_credits { S 1 dict begin /fs_cd FSF def pagedict begin pga4 pop end 1 cm sub DnM T 0 0 0 (This plot has been obtained using GFF2APLOT. The most recent version of GFF2APLOT is freely available at \042http:\/\/www1.imim.es/\176jabril/\042. Copyright      1999 by Josep F. ABRIL, Thomas WIEHE & Roderic GUIGO) (cv) (rh) fs_cd /Times-Roman FGcolor ttxt S fs_cd /Times-Roman sfont (   1999 by Josep F. ABRIL, Thomas WIEHE & Roderic GUIGO) stringwidth pop neg R 0 0 (\343) (cv) (ch) fs_cd /Symbol FGcolor ttxt end R } bdf
%
/estlbl { S 3 dict begin /lbl xdf /ypos xdf /xpos xdf horizontal 0 Xlwdt 4 div neg T lbl 0 xpos Xscm ypos Yscm 5 /Helvetica black ctshow vertical end R } bdf
%
/GsclonX { /Y exch Y Spacer sub exch sub def Xmarg Y T axesp 0 eq { /Xscale { BBoxX X1 X0 sub Y1 Y0 sub max div } def } { /Xscale { BBoxX X1 X0 sub div } def } ifelse } bdf
%
% DOTPLOT BOX
/begindata { aplot begin S /y1 Y1 def /y0 Y0 def BBoxY GsclonX axesp 0 eq { /Yscale Xscale def } { /Yscale { BBoxY y1 y0 sub div } def } ifelse /TxWB { WBox Xscale div } def /TyWB { WBox Yscale div } def /GDspl { xGDspl GDmore } def /GLDspl { xGLDspl GDmore } def /BDspl { xBDspl GDmore BDmore } def X0 Xscm neg y0 Yscm neg T S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox BBoxcol scmyk fill R S X0 Xscm y0 Yscm X1 Xscm y1 Yscm ZoomON 1 eq { 4 copy ZoomTicks } if bbox 2 slw FGcolor scmyk K R S BBXtickflg 1 eq { nucltick /Spacer 1 cm def } { /Spacer 0.5 cm def } ifelse BBYtickflg 1 eq { tickmn tickmx maxtck mintck y0 y1 X1 0 vtick } if R newpath } def /enddata { R /GDspl xGDspl def /GLDspl xGLDspl def /BDspl xBDspl def end } def
%
% PERCENT BOX
/beginmatches { aplot begin /ZoomON 0 def S /y1 xdf /y0 xdf SBoxY GsclonX /Yscale SBoxY y1 y0 sub div def X0 Xscm neg y0 Yscm neg T S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox S S SBoxcol scmyk fill R S SBoxLab TagLabelFont Banner SBoxSLab TagFont SbBanner SBXtickflg 1 eq { nucltick /Spacer 1 cm def } { /Spacer 0.5 cm def } ifelse R S SBYtickflg 1 eq { -1 -1 pctmxt pctmnt y0 y1 X1 0 vtick } if R S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox 2 slw FGcolor scmyk K R R clip newpath } def /endmatches { R R end } def
%
% EXTRA BOX
/beginextra { aplot begin S /nlines xdf /y0 0 def XBoxY GsclonX /Yscale XBoxY nlines 1 add div def /Xlwdt Yscale 0.75 mul def /xwdt Yscale 2 div def /y1 XBoxY Yscale div def X0 Xscm neg 0 T S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox S XBoxcol scmyk fill R S XBoxLab TagLabelFont Banner XBoxSLab TagFont SbBanner XBXtickflg 1 eq { nucltick } if R newpath } def /endextra { /Yscale XBoxY nlines 1 add div def X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox 2 slw FGcolor scmyk K R  R end } def
%
%%EndProcSet:   main_function_calls 1.0 0
%
%%EndProlog
%
%%BeginSetup
%
% initgraphics
% true setpacking
true setstrokeadjust
0.125 setlinewidth
0 setlinejoin
0 setlinecap
%
%%EndSetup
%
%%Page: 1 1
%%BeginPageSetup
%
% Saving current page settings
/pgsave save def
% Setting BGcolor for sheet 
Dpage 0 0 bbox S BGcolor scmyk fill R clip newpath
% Setting page-size scale
1 CSF dup F
%%EndPageSetup
%
%
% New BLOCK ---> LABELS
%
% (label) Title
(HomoSapiens x GallusGallus) Title
% (label) SubTitle
( ) SubTitle
%
% New BLOCK ---> APLOT
%
% xori xend yori yend
/X0 1 def
/X1 3275 def
/Y0 1 def
/Y1 1568 def
%
begindata
%
horizontal
%
% lwidth lcolor bcol ori end Bline
% x0 y0 x1 y1 lwidth lcolor Line
0.25 lightgrey lightgrey 51 60 Bline
0.25 lightgrey lightgrey 776 936 Bline
0.25 lightgrey lightgrey 1379 1495 Bline
0.25 lightgrey lightgrey 1797 1958 Bline
0.25 lightgrey lightgrey 3025 3225 Bline
% tag definitions: Box,Join,Arrow,Banner
% (label) ElmFont bcol ori end Box
% color ori end dir Arrow % dir: 0=left 1=rigth
% jcol ori end Join
() ElmFont red 51 60 Box
() ElmFont red 776 936 Box
() ElmFont red 1379 1495 Box
() ElmFont red 1797 1958 Box
() ElmFont red 3025 3225 Box
black 60 776 Join
black 936 1379 Join
black 1495 1797 Join
black 1958 3025 Join
% (label) TagFont ori end GnBanner
(gene1) TagFont 51 3225 1 GnBanner
% (label) TagLabelFont Banner
(CHKGHG.PE1) TagLabelFont Banner 
%
vertical
%
% lwidth lcolor bcol ori end Bline
% x0 y0 x1 y1 lwidth lcolor Line
0.25 lightgrey lightgrey 51 60 Bline
0.25 lightgrey lightgrey 321 481 Bline
0.25 lightgrey lightgrey 691 810 Bline
0.25 lightgrey lightgrey 903 1067 Bline
0.25 lightgrey lightgrey 1321 1518 Bline
%%
% tag definitions: Box,Join,Arrow,Banner
% (label) ElmFont bcol ori end Box
% color ori end dir Arrow % dir: 0=left 1=rigth
% jcol ori end Join
() ElmFont red 51 60 Box
() ElmFont red 321 481 Box
() ElmFont red 691 810 Box
() ElmFont red 903 1067 Box
() ElmFont red 1321 1518 Box
black 60 321 Join
black 481 691 Join
black 810 903 Join
black 1067 1321 Join
% (label) TagFont ori end GnBanner
(gene1) TagFont 51 1518 1 GnBanner
% (label) TagLabelFont Banner
(HUMGHCSA.PE1) TagLabelFont Banner 
%
% Extra Features: Nice Band Lines Finishing for Seq1lines, Bsquare
%
% lwidth lcolor bcolor Hori Hend Vori Vend Bsquare
%
%
% DATA ---> Alignment...
%
2998 1294 3195 1491 2 black Line
1785 891 1904 1010 2 black Line
829 374 942 487 2 black Line
1334 649 1501 816 2 black Line
2756 1107 2839 1190 2 black Line
724 250 798 324 2 black Line
34 34 63 63 2 black Line
1092 544 1139 497 2 green Line
1960 1069 1904 1013 2 red Line
266 129 213 76 2 red Line
%
%
% Plot - Remarks...
%
%
enddata
%
%
% New BLOCK ---> MATCHES
%
% xpct ypct
 0 200 beginmatches
%
horizontal
% lwidth lcolor bcol ori end Bline
% x0 y0 x1 y1 lwidth lcolor Line
0.25 lightgrey lightgrey 51 60 Bline
0.25 lightgrey lightgrey 776 936 Bline
0.25 lightgrey lightgrey 1379 1495 Bline
0.25 lightgrey lightgrey 1797 1958 Bline
0.25 lightgrey lightgrey 3025 3225 Bline
%
vertical
%
pctmarks
%
%
% DATA ---> Alignment...
%
2998 202 3195 202 2 black Line
1785 135 1904 135 2 black Line
829 113 942 113 2 black Line
1334 93 1501 93 2 black Line
2756 38 2839 38 2 black Line
724 37 798 37 2 black Line
34 33 63 33 2 black Line
1092 39 1139 39 2 black Line
1960 52 1904 52 2 black Line
266 32 213 32 2 black Line
%
endmatches
%
%
flgcrd { s_credits } if
grestoreall
pgsave restore
showpage
%
% PageEND: 1 1
%
%%Trailer
%
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 0 0 595 842
%%EOF

%%EndDocument
 @endspecial 1942 w @beginspecial 0 @llx 120 @lly 595
@urx 822 @ury 2211 @rwi @clip @setspecial
%%BeginDocument: GF004.3.ps
%!PS-Adobe-3.0
%%Title: 
%%Creator: aplot
%%Version: v1.9
%%CreationDate: 2000/06/07 10:32:08
%%For: rguigo
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 0 0 595 842
%%EndComments
%
%    Author : Josep Francesc ABRIL FERRANDO
%    e-mail :        jabril@imim.es
%
% ------------------------------------------------------------------------
%                     PostScript Output from GFF2APLOT
% ------------------------------------------------------------------------
%
%         Converting GFF files for an alignment to PostScript.
%
%          Copyright (C) 1999 - Josep Francesc ABRIL FERRANDO  
%                                       Thomas WIEHE                   
%                                      Roderic GUIGO SERRA       
%
%    This program is free software; you can redistribute it and/or modify
%    it under the terms of the GNU General Public License as published by
%    the Free Software Foundation; either version 2 of the License, or
%    (at your option) any later version.
%
%    This program is distributed in the hope that it will be useful,
%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%    GNU General Public License for more details.
%
%    You should have received a copy of the GNU General Public License
%    along with this program; if not, write to the Free Software
%    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%
% ------------------------------------------------------------------------
%
%
%%BeginProlog
%
%%BeginProcSet: ShortNames 1.0 0
/tflg false def % test flag
/bdf { bind def } bind def
/xdf { exch def } bdf
/cm { 28.35 mul } bdf
/ivcm { 28.35 div } bdf
/in { 72    mul } bdf
%%EndProcSet:   ShortNames 1.0 0
%
%%BeginProcSet: Constants 1.0 0
% Printing Offset
/VUpOS 0.25 cm def  % offset defines non printable
/VDnOS 0.25 cm def  % paper area for pages (printer outlimits).
/HLtOS 0.25 cm def
/HRtOS 0.25 cm def
% /pgA4 { 595 842 } def
% Fixed Color Variables (CMYK)
/black                { 0.00 0.00 0.00 1.00 } def
/verydarkgrey         { 0.00 0.00 0.00 0.80 } def
/darkgrey             { 0.00 0.00 0.00 0.60 } def
/grey                 { 0.00 0.00 0.00 0.40 } def
/lightgrey            { 0.00 0.00 0.00 0.20 } def
/verylightgrey        { 0.00 0.00 0.00 0.10 } def
/white                { 0.00 0.00 0.00 0.00 } def
/verydarkmagenta      { 0.00 1.00 0.00 0.30 } def
/darkmagenta          { 0.00 0.80 0.00 0.05 } def
/magenta              { 0.00 0.60 0.00 0.00 } def
/lightmagenta         { 0.00 0.40 0.00 0.00 } def
/verylightmagenta     { 0.00 0.20 0.00 0.00 } def
/verydarkviolet       { 0.45 0.85 0.00 0.00 } def
/darkviolet           { 0.30 0.65 0.00 0.00 } def
/violet               { 0.22 0.55 0.00 0.00 } def
/lightviolet          { 0.15 0.40 0.00 0.00 } def
/verylightviolet      { 0.10 0.20 0.00 0.00 } def
/verydarkblue         { 1.00 1.00 0.00 0.20 } def
/darkblue             { 0.90 0.90 0.00 0.00 } def
/blue                 { 0.75 0.75 0.00 0.00 } def
/lightblue            { 0.50 0.50 0.00 0.00 } def
/verylightblue        { 0.30 0.30 0.00 0.00 } def
/verydarkskyblue      { 0.90 0.50 0.00 0.15 } def
/darkskyblue          { 0.75 0.45 0.00 0.00 } def
/skyblue              { 0.60 0.38 0.00 0.00 } def
/lightskyblue         { 0.45 0.25 0.00 0.00 } def
/verylightskyblue     { 0.30 0.15 0.00 0.00 } def
/verydarkcyan         { 1.00 0.00 0.00 0.10 } def
/darkcyan             { 0.80 0.00 0.00 0.00 } def
/cyan                 { 0.60 0.00 0.00 0.00 } def
/lightcyan            { 0.40 0.00 0.00 0.00 } def
/verylightcyan        { 0.20 0.00 0.00 0.00 } def
/verydarkseagreen     { 0.75 0.00 0.45 0.00 } def
/darkseagreen         { 0.62 0.00 0.38 0.00 } def
/seagreen             { 0.50 0.00 0.30 0.00 } def
/lightseagreen        { 0.38 0.00 0.22 0.00 } def
/verylightseagreen    { 0.25 0.00 0.15 0.00 } def
/verydarkgreen        { 1.00 0.00 1.00 0.25 } def
/darkgreen            { 0.80 0.00 0.80 0.00 } def
/green                { 0.60 0.00 0.60 0.00 } def
/lightgreen           { 0.40 0.00 0.40 0.00 } def
/verylightgreen       { 0.20 0.00 0.20 0.00 } def
/verydarklimegreen    { 0.50 0.00 1.00 0.10 } def
/darklimegreen        { 0.40 0.00 0.95 0.00 } def
/limegreen            { 0.30 0.00 0.80 0.00 } def
/lightlimegreen       { 0.20 0.00 0.65 0.00 } def
/verylightlimegreen   { 0.10 0.00 0.50 0.00 } def
/verydarkyellow       { 0.00 0.00 1.00 0.25 } def
/darkyellow           { 0.00 0.00 1.00 0.10 } def
/yellow               { 0.00 0.00 1.00 0.00 } def
/lightyellow          { 0.00 0.00 0.50 0.00 } def
/verylightyellow      { 0.00 0.00 0.25 0.00 } def
/verydarkorange       { 0.00 0.50 0.80 0.10 } def
/darkorange           { 0.00 0.40 0.80 0.00 } def
/orange               { 0.00 0.30 0.80 0.00 } def
/lightorange          { 0.00 0.20 0.75 0.00 } def
/verylightorange      { 0.00 0.15 0.70 0.00 } def
/verydarkred          { 0.00 1.00 1.00 0.15 } def
/darkred              { 0.00 0.80 0.80 0.00 } def
/red                  { 0.00 0.60 0.60 0.00 } def
/lightred             { 0.00 0.40 0.40 0.00 } def
/verylightred         { 0.00 0.20 0.20 0.00 } def
/verydarkbrown        { 0.35 0.85 1.00 0.40 } def
/darkbrown            { 0.30 0.70 1.00 0.35 } def
/brown                { 0.25 0.75 1.00 0.25 } def
/lightbrown           { 0.20 0.60 0.70 0.15 } def
/verylightbrown       { 0.15 0.45 0.55 0.00 } def
/htag   0 def
/Xmarg  5.0 cm def       % Starting Point (upper left corner)
/Ymarg  842 2 cm sub def
/Y Ymarg def
/PlotWidth  14 cm def    % Blocks Size
/Spacer   1.00 cm def    % BBox relative to dotplot
/BBoxX  PlotWidth def    % SBox relative to percent box
/BBoxY   14.00 cm def    % XBox relative to extra box
/SBoxX  PlotWidth def
/SBoxY    2.25 cm def
/XBoxX  PlotWidth def
/XBoxY    3.00 cm def
/WBox     0.50 cm def    % TagBox Size
/HWBox WBox 2 div    def
/Warw  WBox 0.75 mul def
/HWarw Warw 2 div    def
%  Paper Sizes  (in points)
/pagedict 34 dict def pagedict begin % 32+2 sizes defined
/pg10x14        {  720 1008 } def
/pga0           { 2384 3370 } def
/pga10          {   73  105 } def
/pga1           { 1684 2384 } def
/pga2           { 1190 1684 } def
/pga3           {  842 1190 } def
/pga4           {  595  842 } def
/pga5           {  420  595 } def
/pga6           {  297  420 } def
/pga7           {  210  297 } def
/pga8           {  148  210 } def
/pga9           {  105  148 } def
/pgb0           { 2920 4127 } def
/pgb10          {   91  127 } def
/pgb1           { 2064 2920 } def
/pgb2           { 1460 2064 } def
/pgb3           { 1032 1460 } def
/pgb4           {  729 1032 } def
/pgb5           {  516  729 } def
/pgb6           {  363  516 } def
/pgb7           {  258  363 } def
/pgb8           {  181  258 } def
/pgb9           {  127  181 } def
/pgexecutive    {  540  720 } def
/pgfolio        {  612  936 } def
/pglegal        {  612 1008 } def
/pgletter       {  612  792 } def
/pgquarto       {  610  780 } def
/pgstatement    {  396  612 } def
/pgtabloid      {  792 1224 } def
/pguserdefined  {  595 2384 } def
end % pagedict
%%EndProcSet:   Constants 1.0 0
/flglscape false def
/flgcrd true def
%% page size in points used for plot % pgA4 == 595  842
/Dpage { pagedict begin pga4 flglscape { exch } if end } bdf
% margins (1 cm) (Up Down Left Right - margins are XY independent)
/UpM 1 cm def
/DnM 1 cm def
/LtM 1 cm def
/RtM 1 cm def
%
% Defining background-color for objects.
/BGcolor { white } def
/FGcolor { black } def
/BBoxcol { white } def
/SBoxcol { white } def
/XBoxcol { white } def
/BBXtickflg 1 def  % Blocks TickFlags
/SBXtickflg 1 def  % 0:no tickscale
/XBXtickflg 1 def  % 1:put tickscale
/BBYtickflg 1 def
/SBYtickflg 1 def
/XBYtickflg 1 def
/ShowTicks 1 def
/axesp  1 def % axesp 0 => Y==X : 1 => X=14 Y=14
/ZoomON 0 def % 0 Switch off zoom-marks - 1 Switch on zoom-marks
/GridON 0 def % 0 Switch off grid - 1 Switch on grid
/tickmx -1 def   % tickmarks
/tickmn -1 def
/maxtck 2 def
/mintck 5 def
/pctmxt 5 def
/pctmnt 5 def
/xtrmxt 2 def
/xtrmnt 5 def
/SBoxLab ( ) def
/XBoxLab ( ) def
/SBoxSLab ( ) def
/XBoxSLab ( ) def
%
/FTXangle 0 def
/GPXangle 0 def
/FTYangle 0 def
/GPYangle 0 def
/FTLbsc  1 def
/GPLbsc  1 def
/MxFtLBL 0 def
/MxGpLBL 5 def
/putExon  1 def
/putExLbl 1 def
/putGnLbl 1 def
%%EndProcSet:   Setting_Vars 1.0 0
%
/TitleFont    { 24 /Times-Bold  } def
/SubTtFont    { 16 /Times-Roman } def
/ElmFont      { 12 FTLbsc mul /Times-Roman } def
/TagFont      { 14 GPLbsc mul /Times-Roman } def
/TagLabelFont { 16 /Times-Bold  } def
/TickFont     { 10 /Helvetica } def
%
/xBDspl  1.8 putExon add putExLbl add putGnLbl add def % 1.25
/xGLDspl 1.0 putExon add putExLbl add def              % 0.85
/xGDspl  0.75 putExon add putExLbl add def
/FBDspl 0.60 def % For example, for mRNA.
%
/vertical   { /htag 0 def } bdf
/horizontal { /htag 1 def } bdf
%
/FSF 4 def % Point size for Credits for A4
/CSF { pagedict begin pga4 pop end Dpage pop exch div mul } bdf
% End of user-defined variables...
%
%%BeginProcSet: Page_Layout 1.0 0
% checking if margins are within the defined offset
flglscape {
 UpM HLtOS lt { /UpM HLtOS def } if % Checking margins for flglscape mode
 DnM HRtOS lt { /DnM HRtOS def } if
 LtM VDnOS lt { /LtM VDnOS def } if
 RtM VUpOS lt { /RtM VUpOS def } if
 } {
  UpM VUpOS lt { /UpM VUpOS def } if % Checking margins for portrait mode
  DnM VDnOS lt { /DnM VDnOS def } if
  LtM HLtOS lt { /LtM HLtOS def } if
  RtM HRtOS lt { /RtM HRtOS def } if
  } ifelse
% defining pagelimits and X - Y scales (Xlim Ylim)
/pglim { Dpage pop LtM RtM add sub Dpage exch pop UpM DnM add sub } def
% Defining starting point on page.
/XORI LtM def
/YORI UpM def
%%EndProcSet:   Page_Layout 1.0 0
%
%%BeginProcSet: functions 1.0 0
/F { scale } bdf
/T { translate } bdf
/S { gsave } bdf
/R { grestore } bdf
/m { moveto } bdf
/rm { rmoveto } bdf
/l { lineto } bdf
/rl { rlineto } bdf
/K { stroke } bdf
/scmyk { setcmykcolor } bdf
/slw { setlinewidth } bdf
/bbox { 4 copy 3 1 roll exch 6 2 roll 8 -2 roll m l l l closepath } bdf
/dotted { [ 1 ] 0 setdash } def
%%EndProcSet:   functions 1.0 0
%
%%BeginProcSet: text_functions 1.0 0
/sfont { findfont exch scalefont setfont } bdf
/tshow { S scmyk sfont m rotate show R } bdf
/ctshow { 10 -1 roll dup 11 1 roll 7 -2 roll 2 copy 9 2 roll S sfont stringwidth pop R 2 div htag 1 eq { 9 -1 roll exch sub 8 1 roll } { 8 -1 roll exch sub 7 1 roll } ifelse tshow } bdf
/ltshow { 10 -1 roll dup 11 1 roll 7 -2 roll 2 copy 9 2 roll S sfont stringwidth pop R htag 1 eq { 9 -1 roll exch sub 8 1 roll } { 8 -1 roll exch sub 7 1 roll } ifelse tshow } bdf
%
% X Y angle string valign halign fnt color ttxt
 % valign : tv (top)  cv (middle) bv (bottom)
 % halign : lh (left) ch (center) rh (right)
/chrh { S newpath 0 0 m false charpath flattenpath pathbbox exch pop 3 -1 roll pop R } bdf
/strh { 2 dict begin /lly 0.0 def /ury 0.0 def { ( ) dup 0 4 -1 roll put chrh dup ury gt { /ury xdf } { pop } ifelse dup lly lt { /lly xdf } { pop } ifelse } forall ury end } bdf
/ttxt { S scmyk sfont 8 dict begin /h xdf /v xdf /lbl xdf /angle xdf /y xdf /x xdf /hs lbl stringwidth pop neg def /vs lbl strh neg def x y T angle rotate h (rh) eq { hs } { h (ch) eq { hs 2 div } { 0 } ifelse } ifelse v (tv) eq { vs } { v (cv) eq { vs 2 div } { 0 } ifelse } ifelse m lbl show end R } bdf
%
/Title { S 0 Xmarg Y TitleFont FGcolor tshow R /Y Y 0.75 cm sub def } bdf 
/SubTitle { S 0 Xmarg Y SubTtFont FGcolor tshow R /Y Y 2.5 cm sub def } bdf 
%%EndProcSet:   text_functions 1.0 0
%
%%BeginProcSet: aplotdict 1.0 0
/aplot 120 dict def aplot begin
/min { 2 copy gt { exch } if pop } bdf 
/max { 2 copy lt { exch } if pop } bdf
/Xscm { Xscale mul } bdf /Xscme { Xscm exch } bdf
/Yscm { Yscale mul } bdf /Yscme { Yscm exch } bdf
/fmt { Yscme Xscme m } bdf /flt { Yscme Xscme l } bdf
/line { scmyk slw m l K } bdf
/uline { scmyk slw m S htag 1 eq { 0 -0.1 cm } { 0.1 cm 0 } ifelse rl K R l S htag 1 eq { 0 -0.1 cm } { 0.1 cm 0 } ifelse rl K R K } bdf
/ZoomTicks { /zmdict 3 dict def zmdict begin /r { TxWB BDspl mul Xscm } def /s { TyWB BDspl mul Yscm } def /corner { S 10 -2 roll m 2 { rl S BGcolor scmyk .4 slw K R rl S FGcolor scmyk 2 slw [1 3] 0 setdash K R } repeat R } def 4 copy 3 1 roll exch 0 s 0 s neg r neg 0 r 0 corner 0 s neg 0 s r 0 r neg 0 corner 0 s neg 0 s r neg 0 r 0 corner 0 s 0 s neg r 0 r neg 0 corner end } def
/Line { S 9 5 roll 2 { Yscm 4 1 roll Xscm 4 1 roll } repeat 9 4 roll line R } bdf
/Xline { S 3 1 roll Xscme Xscme 3 -1 roll Yscm xwdt sub dup 3 1 roll xwdt 9 -4 roll line R } bdf
/Bline { S htag 1 eq { Xscme Xscme y0 Yscme y1 Yscm bbox } { Yscme Yscme X0 Xscm 3 1 roll X1 Xscme bbox } ifelse S scmyk fill R scmyk slw K R } bdf
/Bsquare { S Yscme Yscme 4 2 roll Xscme Xscme 4 1 roll exch bbox S scmyk fill R scmyk slw K R } bdf
/Msquare { S Yscme Yscme 4 2 roll Xscme Xscme 4 1 roll exch bbox scmyk slw K R } bdf
/Mcircle { S Yscme Xscme 3 -1 roll Xscm 0 360 arc closepath scmyk slw K R } bdf
/Join { S 2 copy 2 copy pop sub 2 div add exch htag 1 eq { y1 TyWB add dup dup TyWB 0.75 mul add 4 1 roll 5 1 roll } { X0 TxWB sub dup dup TxWB 0.75 mul sub 5 1 roll 6 1 roll exch } ifelse 3 { Yscme Xscme 6 2 roll } repeat m l l 0.25 slw scmyk K R } bdf
/Arrow { /acol [ 9 -4 roll ] def /acolor { acol aload pop } def S 1 eq { exch /sn { 1 mul } def } { /sn { 1 neg mul } def } ifelse htag 1 eq { Xscm dup y1 Yscm HWBox add m HWarw sn HWarw rl 0 Warw neg rl HWarw neg sn HWarw rl closepath S acolor scmyk fill R y1 Yscm HWBox add m Xscm y1 Yscm HWBox add l acolor scmyk 1 slw K } { Yscm dup X0 Xscm HWBox sub exch m HWarw neg HWarw sn rl Warw 0 rl HWarw neg HWarw neg sn rl closepath S acolor scmyk fill R X0 Xscm HWBox sub exch m Yscm X0 Xscm HWBox sub exch l acolor scmyk 1 slw K } ifelse R } bdf
/FBox { htag 1 eq { Xscme Xscme y1 Yscme y1 TyWB FBDspl mul add Yscm bbox } { Yscme Yscme X0 Xscm 3 1 roll X0 TxWB FBDspl mul sub Xscme bbox } ifelse S scmyk fill R FGcolor scmyk 1 slw K } bdf
/FTalgn { htag 1 eq { FTXangle 0 eq { (bv) (ch) } { (cv) (lh) } ifelse } { FTYangle 0 eq { (cv) (rh) } { (bv) (rh) } ifelse } ifelse } bdf
/GPalgn { htag 1 eq { GPXangle 0 eq { (bv) (ch) } { (cv) (lh) } ifelse } { GPYangle 0 eq { (cv) (rh) } { (bv) (rh) } ifelse } ifelse } bdf
/Box { 2 copy 2 copy pop sub 2 div add 7 1 roll S htag 1 eq { Xscme Xscme y1 Yscme y1 TyWB add Yscm bbox } { Yscme Yscme X0 Xscm 3 1 roll X0 TxWB sub Xscme bbox } ifelse S scmyk fill R FGcolor scmyk 1 slw K htag 1 eq { Xscm y1 TyWB 1.75 mul add Yscm FTXangle } { Yscm X0 TxWB 1.75 mul sub Xscme FTYangle } ifelse 6 -1 roll FTalgn 8 -2 roll FGcolor ttxt R } bdf
%
/GDmore { MxFtLBL S ElmFont sfont (M) stringwidth pop R mul htag 1 eq { FTXangle sin } { FTYangle cos } ifelse abs mul ivcm add } bdf
/BDmore { MxGpLBL S TagFont sfont (M) stringwidth pop R mul htag 1 eq { GPXangle sin } { GPYangle cos } ifelse abs mul ivcm add } bdf
%
/GnBanner{ S 1 eq { 2 copy htag 1 eq { Xscme Xscme y1 TyWB GDspl mul add dup Yscme Yscm 3 1 roll } { Yscme Yscme X0 TxWB GDspl mul sub dup Xscme Xscme 4 1 roll exch } ifelse 0.5 FGcolor uline } if 2 copy pop sub 2 div add htag 1 eq { Xscm y1 TyWB GLDspl mul add Yscm GPXangle } { Yscm X0 TxWB GLDspl mul sub Xscme GPYangle } ifelse 6 -1 roll GPalgn 8 -2 roll FGcolor ttxt R } bdf
/SbBanner { S htag 1 eq { 0 X0 X1 X0 sub 2 div add Xscm y1 TyWB GDspl mul add Yscm } { 90 X0 TxWB GDspl mul sub Xscm y0 y1 y0 sub 2 div add Yscm } ifelse 5 -2 roll FGcolor ctshow R } bdf
/Banner { S htag 1 eq { 0 X0 X1 X0 sub 2 div add Xscm y1 TyWB BDspl mul add Yscm } { 90 X0 TxWB BDspl mul sub Xscm y0 y1 y0 sub 2 div add Yscm } ifelse 5 -2 roll FGcolor ctshow R } bdf
%
% mxt mnt xp yp ori end htick
/tckdict 15 dict def tckdict begin /mkmxt { dup 0 lt { neg } if dup 10 lt { 10 mul log round 10 exch exp cvi } { log round 10 exch exp cvi } ifelse } def /nwmod { dup 1 le { 100 mul cvi exch 100 mul cvi exch mod 100 div } { exch dup 1 le { 100 mul cvi exch 100 mul cvi mod 100 div } { cvi exch cvi mod } ifelse } ifelse } def /isltone { dup 1 lt { 100 mul cvi 100 div } if } def end
/htick { S tckdict begin horizontal /yp exch Yscm def /xp exch Xscm def /xend xdf /xori xdf /nmnt exch cvi def /nmxt exch cvi def /mxt exch dup 0 lt { pop xend xori sub mkmxt } if def /mnt exch dup 0 lt { pop mxt nmnt div } if def /lori xori dup mnt nwmod sub mnt add def /lend xend dup mnt nwmod sub mnt sub def xp yp T lori mnt lend { isltone dup dup xori gt exch xend lt and { dup Xscm 0 m dup dup Xscme mxt nwmod 0 eq { 7.5 } { 4 } ifelse neg l 1 slw FGcolor scmyk K GridON 1 eq { S 0 y0 Yscm neg T dup Xscm dup y0 Yscm m y1 Yscm l 0.1 slw verylightgrey scmyk K R } if dup mxt nwmod 0 eq { dup xend mnt sub exch ge { dup dup 1 ge { cvi } if 10 string cvs 0 3 -1 roll Xscm -18 TickFont FGcolor ctshow } if } { pop } ifelse } if } for xori Xscm dup 0 m 7.5 neg l 2 slw FGcolor scmyk K xori 10 string cvs 0 xori Xscm ZoomON 1 eq { 4 sub } if -18 TickFont FGcolor ZoomON 0 eq { ctshow } { ltshow } ifelse xend Xscm dup 0 m 7.5 neg l 2 slw FGcolor scmyk K xend 10 string cvs 0 xend Xscm ZoomON 1 eq { 4 add } if -18 TickFont FGcolor ZoomON 0 eq { ctshow } { tshow } ifelse end R } def
/vtick { S tckdict begin vertical /yp exch Yscm def /xp exch Xscm def /xend xdf /xori xdf /nmnt exch cvi def /nmxt exch cvi def /mxt exch dup 0 lt { pop xend xori sub mkmxt } if def /mnt exch dup 0 lt { pop mxt nmnt div } if def /lori xori dup mnt nwmod sub mnt add def /lend xend dup mnt nwmod sub mnt sub def xp yp T lori mnt lend { isltone dup dup xori gt exch xend lt and { dup Yscm 0 exch m dup dup Yscme mxt nwmod 0 eq { 7.5 } { 4 } ifelse exch l 1 slw FGcolor scmyk K GridON 1 eq { S X0 Xscm 0 T dup Yscm dup X0 neg Xscme m X1 neg Xscme l 0.1 slw verylightgrey scmyk K R } if dup 0 eq { S dup dup X0 Xscme Yscm m X1 neg Xscme Yscm l 0.1 slw FGcolor scmyk K R } if dup mxt nwmod 0 eq { dup xend mnt sub exch ge { dup dup 1 ge { cvi } if 10 string cvs 0 10 4 -1 roll Yscm 2.5 sub TickFont FGcolor tshow } if } { pop } ifelse } if } for 7.5 xori Yscm dup 0 exch m l 2 slw FGcolor scmyk K xori 10 string cvs 0 10 xori Yscm ZoomON 0 eq { 2.5 sub } { 2.5 add } ifelse TickFont FGcolor tshow 7.5 xend Yscm dup 0 exch m l 2 slw FGcolor scmyk K xend 10 string cvs 0 10 xend Yscm ZoomON 0 eq { 2.5 sub } { 2.5 add } ifelse TickFont FGcolor tshow end R } def
/nucltick { tickmn tickmx maxtck mintck X0 X1 0 y0 htick } def
/pctmarks { S y0 10 y1 { Yscm dup X0 Xscm X1 Xscm 3 1 roll 4 1 roll 0.5 FGcolor line } for R } bdf
%
/beginfunct { R S 3 dict begin /maxx exch ceiling def /minx exch floor def /Yscale XBoxY maxx minx sub div def minx 0 lt { 0 minx neg Yscm T } if S XBYtickflg 1 eq { -1 -1 xtrmxt xtrmnt minx maxx X1 0 vtick S X0 Xscm 0 m X1 Xscm 0 l dotted FGcolor scmyk K R } if R } def /endfunct { end R } def
end % aplot dict
%%EndProcSet:   aplotdict 1.0 0
%
%%BeginProcSet: main_function_calls 1.0 0
%
/s_credits { S 1 dict begin /fs_cd FSF def pagedict begin pga4 pop end 1 cm sub DnM T 0 0 0 (This plot has been obtained using GFF2APLOT. The most recent version of GFF2APLOT is freely available at \042http:\/\/www1.imim.es/\176jabril/\042. Copyright      1999 by Josep F. ABRIL, Thomas WIEHE & Roderic GUIGO) (cv) (rh) fs_cd /Times-Roman FGcolor ttxt S fs_cd /Times-Roman sfont (   1999 by Josep F. ABRIL, Thomas WIEHE & Roderic GUIGO) stringwidth pop neg R 0 0 (\343) (cv) (ch) fs_cd /Symbol FGcolor ttxt end R } bdf
%
/estlbl { S 3 dict begin /lbl xdf /ypos xdf /xpos xdf horizontal 0 Xlwdt 4 div neg T lbl 0 xpos Xscm ypos Yscm 5 /Helvetica black ctshow vertical end R } bdf
%
/GsclonX { /Y exch Y Spacer sub exch sub def Xmarg Y T axesp 0 eq { /Xscale { BBoxX X1 X0 sub Y1 Y0 sub max div } def } { /Xscale { BBoxX X1 X0 sub div } def } ifelse } bdf
%
% DOTPLOT BOX
/begindata { aplot begin S /y1 Y1 def /y0 Y0 def BBoxY GsclonX axesp 0 eq { /Yscale Xscale def } { /Yscale { BBoxY y1 y0 sub div } def } ifelse /TxWB { WBox Xscale div } def /TyWB { WBox Yscale div } def /GDspl { xGDspl GDmore } def /GLDspl { xGLDspl GDmore } def /BDspl { xBDspl GDmore BDmore } def X0 Xscm neg y0 Yscm neg T S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox BBoxcol scmyk fill R S X0 Xscm y0 Yscm X1 Xscm y1 Yscm ZoomON 1 eq { 4 copy ZoomTicks } if bbox 2 slw FGcolor scmyk K R S BBXtickflg 1 eq { nucltick /Spacer 1 cm def } { /Spacer 0.5 cm def } ifelse BBYtickflg 1 eq { tickmn tickmx maxtck mintck y0 y1 X1 0 vtick } if R newpath } def /enddata { R /GDspl xGDspl def /GLDspl xGLDspl def /BDspl xBDspl def end } def
%
% PERCENT BOX
/beginmatches { aplot begin /ZoomON 0 def S /y1 xdf /y0 xdf SBoxY GsclonX /Yscale SBoxY y1 y0 sub div def X0 Xscm neg y0 Yscm neg T S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox S S SBoxcol scmyk fill R S SBoxLab TagLabelFont Banner SBoxSLab TagFont SbBanner SBXtickflg 1 eq { nucltick /Spacer 1 cm def } { /Spacer 0.5 cm def } ifelse R S SBYtickflg 1 eq { -1 -1 pctmxt pctmnt y0 y1 X1 0 vtick } if R S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox 2 slw FGcolor scmyk K R R clip newpath } def /endmatches { R R end } def
%
% EXTRA BOX
/beginextra { aplot begin S /nlines xdf /y0 0 def XBoxY GsclonX /Yscale XBoxY nlines 1 add div def /Xlwdt Yscale 0.75 mul def /xwdt Yscale 2 div def /y1 XBoxY Yscale div def X0 Xscm neg 0 T S X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox S XBoxcol scmyk fill R S XBoxLab TagLabelFont Banner XBoxSLab TagFont SbBanner XBXtickflg 1 eq { nucltick } if R newpath } def /endextra { /Yscale XBoxY nlines 1 add div def X0 Xscm y0 Yscm X1 Xscm y1 Yscm bbox 2 slw FGcolor scmyk K R  R end } def
%
%%EndProcSet:   main_function_calls 1.0 0
%
%%EndProlog
%
%%BeginSetup
%
% initgraphics
% true setpacking
true setstrokeadjust
0.125 setlinewidth
0 setlinejoin
0 setlinecap
%
%%EndSetup
%
%%Page: 1 1
%%BeginPageSetup
%
% Saving current page settings
/pgsave save def
% Setting BGcolor for sheet 
Dpage 0 0 bbox S BGcolor scmyk fill R clip newpath
% Setting page-size scale
1 CSF dup F
%%EndPageSetup
%
%
% New BLOCK ---> LABELS
%
% (label) Title
(HomoSapiens x FuguRubripes) Title
% (label) SubTitle
( ) SubTitle
%
% New BLOCK ---> APLOT
%
% xori xend yori yend
/X0 1 def
/X1 2402 def
/Y0 1 def
/Y1 1568 def
%
begindata
%
horizontal
%
% lwidth lcolor bcol ori end Bline
% x0 y0 x1 y1 lwidth lcolor Line
0.25 lightgrey lightgrey 51 60 Bline
0.25 lightgrey lightgrey 669 799 Bline
0.25 lightgrey lightgrey 1119 1232 Bline
0.25 lightgrey lightgrey 1641 1766 Bline
0.25 lightgrey lightgrey 1850 1996 Bline
0.25 lightgrey lightgrey 2290 2352 Bline
% tag definitions: Box,Join,Arrow,Banner
% (label) ElmFont bcol ori end Box
% color ori end dir Arrow % dir: 0=left 1=rigth
% jcol ori end Join
() ElmFont red 51 60 Box
() ElmFont red 669 799 Box
() ElmFont red 1119 1232 Box
() ElmFont red 1641 1766 Box
() ElmFont red 1850 1996 Box
() ElmFont red 2290 2352 Box
black 60 669 Join
black 799 1119 Join
black 1232 1641 Join
black 1766 1850 Join
black 1996 2290 Join
% (label) TagFont ori end GnBanner
(gene1) TagFont 51 2352 1 GnBanner
% (label) TagLabelFont Banner
(FRU63807.GH) TagLabelFont Banner 
%
vertical
%
% lwidth lcolor bcol ori end Bline
% x0 y0 x1 y1 lwidth lcolor Line
0.25 lightgrey lightgrey 51 60 Bline
0.25 lightgrey lightgrey 321 481 Bline
0.25 lightgrey lightgrey 691 810 Bline
0.25 lightgrey lightgrey 903 1067 Bline
0.25 lightgrey lightgrey 1321 1518 Bline
%%
% tag definitions: Box,Join,Arrow,Banner
% (label) ElmFont bcol ori end Box
% color ori end dir Arrow % dir: 0=left 1=rigth
% jcol ori end Join
() ElmFont red 51 60 Box
() ElmFont red 321 481 Box
() ElmFont red 691 810 Box
() ElmFont red 903 1067 Box
() ElmFont red 1321 1518 Box
black 60 321 Join
black 481 691 Join
black 810 903 Join
black 1067 1321 Join
% (label) TagFont ori end GnBanner
(gene1) TagFont 51 1518 1 GnBanner
% (label) TagLabelFont Banner
(HUMGHCSA.PE1) TagLabelFont Banner 
%
% Extra Features: Nice Band Lines Finishing for Seq1lines, Bsquare
%
% lwidth lcolor bcolor Hori Hend Vori Vend Bsquare
%
%
% DATA ---> Alignment...
%
1907 1369 2005 1467 2 black Line
1176 754 1238 816 2 black Line
701 383 802 484 2 black Line
1644 906 1685 947 2 black Line
1021 546 995 520 2 red Line
%
%
% Plot - Remarks...
%
%
enddata
%
%
% New BLOCK ---> MATCHES
%
% xpct ypct
 0 200 beginmatches
%
horizontal
% lwidth lcolor bcol ori end Bline
% x0 y0 x1 y1 lwidth lcolor Line
0.25 lightgrey lightgrey 51 60 Bline
0.25 lightgrey lightgrey 669 799 Bline
0.25 lightgrey lightgrey 1119 1232 Bline
0.25 lightgrey lightgrey 1641 1766 Bline
0.25 lightgrey lightgrey 1850 1996 Bline
0.25 lightgrey lightgrey 2290 2352 Bline
%
vertical
%
pctmarks
%
%
% DATA ---> Alignment...
%
1907 72 2005 72 2 black Line
1176 57 1238 57 2 black Line
701 51 802 51 2 black Line
1644 42 1685 42 2 black Line
1021 32 995 32 2 black Line
%
endmatches
%
%
flgcrd { s_credits } if
grestoreall
pgsave restore
showpage
%
% PageEND: 1 1
%
%%Trailer
%
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 0 0 595 842
%%EOF

%%EndDocument
 @endspecial eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
